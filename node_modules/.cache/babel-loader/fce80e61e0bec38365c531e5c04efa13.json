{"ast":null,"code":"import cookie from 'js-cookie';\nimport { productConstants } from '../redux-constants/product-constant';\nimport { addProductCategoryService, addProductPerfumeService, addProductWeightService } from '../redux-helpers/product-helper';\nimport { showWarning, showSuccess } from '../fragments-tools/alert-toasts';\nexport function addProductCategory(name, description, close) {\n  return function (dispatch) {\n    addProductCategoryService(name, description).then(function (response) {\n      return response;\n    }).then(function (second) {\n      if (second.hasOwnProperty('errors')) {\n        close(false);\n        showWarning(\"Addition catégorie échoué.\");\n      } else {\n        cookie.set('product-categories', JSON.stringify(second.data.addProductCategoryQuery));\n        close(false);\n        showSuccess(\"Addition catégorie avec succès.\");\n      }\n    });\n  };\n\n  function request() {\n    return {\n      type: productConstants.productCategoryAddRequest,\n      categories: null\n    };\n  }\n\n  function success(categories) {\n    return {\n      type: productConstants.productCategoryAddSuccess,\n      categories: categories\n    };\n  }\n\n  function failure() {\n    return {\n      type: productConstants.productCategoryAddFailure,\n      categories: null\n    };\n  }\n}\nexport function addProductPerfume(name, description, close) {\n  return function (dispatch) {\n    addProductPerfumeService(name, description).then(function (response) {\n      return response;\n    }).then(function (second) {\n      if (second.hasOwnProperty('errors')) {\n        close(false);\n        showWarning(\"Addition catégorie échoué.\");\n      } else {\n        cookie.set('product-perfumes', JSON.stringify(second.data.addProductPerfumeQuery));\n        close(false);\n        showSuccess(\"Addition parfum avec succès.\");\n      }\n    });\n  };\n\n  function request() {\n    return {\n      type: productConstants.productCategoryAddRequest,\n      perfumes: null\n    };\n  }\n\n  function success(perfumes) {\n    return {\n      type: productConstants.productCategoryAddSuccess,\n      perfumes: perfumes\n    };\n  }\n\n  function failure() {\n    return {\n      type: productConstants.productCategoryAddFailure,\n      perfumes: null\n    };\n  }\n}\nexport function addProductWeight(name, value, close) {\n  return function (dispatch) {\n    addProductWeightService(name, value).then(function (response) {\n      return response;\n    }).then(function (second) {\n      if (second.hasOwnProperty('errors')) {\n        close(false);\n        showWarning(\"Addition catégorie échoué.\");\n      } else {\n        cookie.set('product-weights', JSON.stringify(second.data.addProductWeightQuery));\n        close(false);\n        showSuccess(\"Addition poids avec succès.\");\n      }\n    });\n  };\n\n  function request() {\n    return {\n      type: productConstants.productCategoryAddRequest,\n      weights: null\n    };\n  }\n\n  function success(weights) {\n    return {\n      type: productConstants.productCategoryAddSuccess,\n      weights: weights\n    };\n  }\n\n  function failure() {\n    return {\n      type: productConstants.productCategoryAddFailure,\n      weights: null\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}