{
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-server.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
        "sourceFileName": "musclefeed-server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressGraphql = _interopRequireDefault(require(\"express-graphql\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _next = _interopRequireDefault(require(\"next\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _database = require(\"./musclefeed-models/database\");\n\nvar _musclefeedSchema = require(\"./musclefeed-graphql/musclefeed-schema\");\n\nvar _musclefeedConfiguration = require(\"./musclefeed-configuration\");\n\nvar _protected = require(\"./protected.middleware\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PORT = process.env.PORT || 3000;\nvar ENV = process.env.NODE_ENV || false;\nvar corsOptions = {\n  origin: 'http://localhost:4000'\n};\nvar render = (0, _next[\"default\"])({\n  ENV: ENV\n});\nvar handle = render.getRequestHandler();\nrender.prepare().then(function () {\n  var application = (0, _express[\"default\"])();\n  application.use((0, _cookieParser[\"default\"])());\n  application.use((0, _cors[\"default\"])(corsOptions));\n  application.use(_bodyParser[\"default\"].json({\n    limit: '10mb'\n  }));\n  application.use(_bodyParser[\"default\"].urlencoded({\n    extended: true\n  }));\n  application.use('/v1/graphql-first-instance/BtL7NQwOt0R7psYw1Fyx', (0, _expressGraphql[\"default\"])(function (request, response) {\n    return {\n      schema: _musclefeedSchema.accountSchema,\n      graphiql: true\n    };\n  }));\n  application.use(_bodyParser[\"default\"].urlencoded({\n    extended: true,\n    limit: '10mb'\n  }));\n  application.use('/v1/graphql-second-instance/0lqY5JycFu4BwCDv7vsM', (0, _expressGraphql[\"default\"])(function (request, response) {\n    return {\n      schema: _musclefeedSchema.productSchema,\n      graphiql: true\n    };\n  }));\n  application.get('/admin-account', _protected.adminIsNotLogged, function (request, response) {\n    var page = '/admin-account';\n    return handle(request, response, page);\n  });\n  application.get('/admin-dashboard', _protected.adminIsLogged, function (request, response) {\n    var page = '/admin-dashboard';\n    return handle(request, response, page);\n  });\n  application.get('/admin-products', _protected.adminIsLogged, function (request, response) {\n    var page = '/admin-products';\n    return handle(request, response, page);\n  });\n  application.get('/admin-product-new', _protected.adminIsLogged, function (request, response) {\n    var page = '/admin-product-new';\n    return handle(request, response, page);\n  });\n  application.get('/admin-payments', _protected.adminIsLogged, function (request, response) {\n    var page = '/admin-payments';\n    return handle(request, response, page);\n  });\n  application.get('/admin-orders', _protected.adminIsLogged, function (request, response) {\n    var page = '/admin-orders';\n    return handle(request, response, page);\n  });\n  application.get('/user-cart', function (request, response) {\n    var page = '/user-cart';\n    return handle(request, response, page);\n  });\n  application.get('/user-account', _protected.userIsNotLogged, function (request, response) {\n    var page = '/user-account';\n    return handle(request, response, page);\n  });\n  application.get('*', function (request, response, next) {\n    return handle(request, response, next);\n  });\n  application.listen(PORT, '10.188.37.107', function () {\n    console.log('> Listening on server : ' + PORT);\n  });\n});\n\n_database.databaseConnection.sync({\n  force: true\n}).then(function () {\n  console.log('Synced database.');\n\n  _database.personModel.create({\n    firstname: 'Oussama',\n    lastname: 'Jaaouani',\n    username: 'jaaouani',\n    email: 'jaaouani@musclefeed.co',\n    password: _musclefeedConfiguration.bcrypt.hashSync('password', _musclefeedConfiguration.saltSync),\n    token: _musclefeedConfiguration.bcrypt.hashSync('Jaaouani Oussama' + 'password' + new Date().getTime()),\n    civility: 'Mr',\n    phone: '+33646018759',\n    city: 'Valence',\n    country: 'France',\n    main_address: '6 rue Célestin Poncet',\n    secondary_address: 'Etage 3 Appartement 318',\n    is_admin: true,\n    signup_date: new Date().getDate()\n  });\n\n  _database.personModel.create({\n    firstname: 'Abdelaziz',\n    lastname: 'Zouheir',\n    username: 'zouheir',\n    email: 'zouheir@musclefeed.co',\n    password: _musclefeedConfiguration.bcrypt.hashSync('password', _musclefeedConfiguration.saltSync),\n    token: _musclefeedConfiguration.bcrypt.hashSync('Abdelaziz Zouheir' + 'password' + new Date().getTime()),\n    civility: 'Mr',\n    phone: '+33766163622',\n    city: 'Valence',\n    country: 'France',\n    main_address: '25 rue La Fontaine',\n    secondary_address: 'Aucune',\n    is_admin: true,\n    signup_date: new Date().getDate()\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "musclefeed-server.js"
      ],
      "names": [
        "PORT",
        "process",
        "env",
        "ENV",
        "NODE_ENV",
        "corsOptions",
        "origin",
        "render",
        "handle",
        "getRequestHandler",
        "prepare",
        "then",
        "application",
        "use",
        "bodyparser",
        "json",
        "limit",
        "urlencoded",
        "extended",
        "request",
        "response",
        "schema",
        "accountSchema",
        "graphiql",
        "productSchema",
        "get",
        "adminIsNotLogged",
        "page",
        "adminIsLogged",
        "userIsNotLogged",
        "next",
        "listen",
        "console",
        "log",
        "databaseConnection",
        "sync",
        "force",
        "personModel",
        "create",
        "firstname",
        "lastname",
        "username",
        "email",
        "password",
        "bcrypt",
        "hashSync",
        "saltSync",
        "token",
        "Date",
        "getTime",
        "civility",
        "phone",
        "city",
        "country",
        "main_address",
        "secondary_address",
        "is_admin",
        "signup_date",
        "getDate"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;AAPA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,GAAG,GAAGF,OAAO,CAACC,GAAR,CAAYE,QAAZ,IAAwB,KAApC;AACA,IAAMC,WAAW,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAApB;AAOA,IAAMC,MAAM,GAAG,sBAAK;AAAEJ,EAAAA,GAAG,EAAHA;AAAF,CAAL,CAAf;AACA,IAAMK,MAAM,GAAGD,MAAM,CAACE,iBAAP,EAAf;AAEAF,MAAM,CAACG,OAAP,GAAiBC,IAAjB,CAAsB,YAAM;AACxB,MAAMC,WAAW,GAAG,0BAApB;AACAA,EAAAA,WAAW,CAACC,GAAZ,CAAgB,+BAAhB;AAAiCD,EAAAA,WAAW,CAACC,GAAZ,CAAgB,sBAAKR,WAAL,CAAhB;AAAoCO,EAAAA,WAAW,CAACC,GAAZ,CAAgBC,uBAAWC,IAAX,CAAgB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhB,CAAhB;AACrEJ,EAAAA,WAAW,CAACC,GAAZ,CAAgBC,uBAAWG,UAAX,CAAsB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAtB,CAAhB;AAA4DN,EAAAA,WAAW,CAACC,GAAZ,CAAgB,iDAAhB,EAAmE,gCAAY,UAACM,OAAD,EAAUC,QAAV;AAAA,WAAwB;AAAEC,MAAAA,MAAM,EAAEC,+BAAV;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC,KAAxB;AAAA,GAAZ,CAAnE;AAC5DX,EAAAA,WAAW,CAACC,GAAZ,CAAgBC,uBAAWG,UAAX,CAAsB;AAAEC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBF,IAAAA,KAAK,EAAE;AAAzB,GAAtB,CAAhB;AAA2EJ,EAAAA,WAAW,CAACC,GAAZ,CAAgB,kDAAhB,EAAoE,gCAAY,UAACM,OAAD,EAAUC,QAAV;AAAA,WAAwB;AAAEC,MAAAA,MAAM,EAAEG,+BAAV;AAAyBD,MAAAA,QAAQ,EAAE;AAAnC,KAAxB;AAAA,GAAZ,CAApE;AAE3EX,EAAAA,WAAW,CAACa,GAAZ,CAAgB,gBAAhB,EAAkCC,2BAAlC,EAAoD,UAACP,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,gBAAb;AAA+B,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAArJ;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,kBAAhB,EAAoCG,wBAApC,EAAmD,UAACT,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,kBAAb;AAAiC,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAAtJ;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,iBAAhB,EAAmCG,wBAAnC,EAAkD,UAACT,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,iBAAb;AAAgC,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAApJ;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,oBAAhB,EAAsCG,wBAAtC,EAAqD,UAACT,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,oBAAb;AAAmC,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAA1J;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,iBAAhB,EAAmCG,wBAAnC,EAAkD,UAACT,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,iBAAb;AAAgC,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAApJ;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,eAAhB,EAAiCG,wBAAjC,EAAgD,UAACT,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,eAAb;AAA8B,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAAhJ;AAEAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,YAAhB,EAA8B,UAACN,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,YAAb;AAA2B,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAA3H;AACAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,eAAhB,EAAiCI,0BAAjC,EAAkD,UAACV,OAAD,EAAUC,QAAV,EAAuB;AAAE,QAAMO,IAAI,GAAG,eAAb;AAA8B,WAAOnB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBO,IAApB,CAAb;AAAyC,GAAlJ;AAEAf,EAAAA,WAAW,CAACa,GAAZ,CAAgB,GAAhB,EAAqB,UAACN,OAAD,EAAUC,QAAV,EAAoBU,IAApB,EAA6B;AAAE,WAAOtB,MAAM,CAACW,OAAD,EAAUC,QAAV,EAAoBU,IAApB,CAAb;AAAyC,GAA7F;AAEAlB,EAAAA,WAAW,CAACmB,MAAZ,CAAmB/B,IAAnB,EAAyB,eAAzB,EAA0C,YAAM;AAAEgC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BjC,IAAzC;AAAiD,GAAnG;AACH,CAnBD;;AAqBAkC,6BAAmBC,IAAnB,CAAwB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAxB,EAAyCzB,IAAzC,CAA8C,YAAM;AAChDqB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACAI,wBAAYC,MAAZ,CAAmB;AAAEC,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,QAAQ,EAAE,UAAlC;AAA8CC,IAAAA,QAAQ,EAAE,UAAxD;AAAoEC,IAAAA,KAAK,EAAE,wBAA3E;AAAqGC,IAAAA,QAAQ,EAAEC,gCAAOC,QAAP,CAAgB,UAAhB,EAA4BC,iCAA5B,CAA/G;AAAsJC,IAAAA,KAAK,EAAEH,gCAAOC,QAAP,CAAgB,qBAAmB,UAAnB,GAA+B,IAAIG,IAAJ,GAAWC,OAAX,EAA/C,CAA7J;AAAoOC,IAAAA,QAAQ,EAAE,IAA9O;AAAoPC,IAAAA,KAAK,EAAE,cAA3P;AAA2QC,IAAAA,IAAI,EAAE,SAAjR;AAA4RC,IAAAA,OAAO,EAAE,QAArS;AAA+SC,IAAAA,YAAY,EAAE,uBAA7T;AAAsVC,IAAAA,iBAAiB,EAAE,yBAAzW;AAAoYC,IAAAA,QAAQ,EAAE,IAA9Y;AAAoZC,IAAAA,WAAW,EAAG,IAAIT,IAAJ,GAAWU,OAAX;AAAla,GAAnB;;AACArB,wBAAYC,MAAZ,CAAmB;AAAEC,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,QAAQ,EAAE,SAApC;AAA+CC,IAAAA,QAAQ,EAAE,SAAzD;AAAoEC,IAAAA,KAAK,EAAE,uBAA3E;AAAoGC,IAAAA,QAAQ,EAAEC,gCAAOC,QAAP,CAAgB,UAAhB,EAA4BC,iCAA5B,CAA9G;AAAqJC,IAAAA,KAAK,EAAEH,gCAAOC,QAAP,CAAgB,sBAAoB,UAApB,GAAgC,IAAIG,IAAJ,GAAWC,OAAX,EAAhD,CAA5J;AAAoOC,IAAAA,QAAQ,EAAE,IAA9O;AAAoPC,IAAAA,KAAK,EAAE,cAA3P;AAA2QC,IAAAA,IAAI,EAAE,SAAjR;AAA4RC,IAAAA,OAAO,EAAE,QAArS;AAA+SC,IAAAA,YAAY,EAAE,oBAA7T;AAAmVC,IAAAA,iBAAiB,EAAE,QAAtW;AAAgXC,IAAAA,QAAQ,EAAE,IAA1X;AAAgYC,IAAAA,WAAW,EAAG,IAAIT,IAAJ,GAAWU,OAAX;AAA9Y,GAAnB;AACH,CAJD",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "sourcesContent": [
        "import express from 'express';\nimport graphqlHTTP from 'express-graphql';\nimport bodyparser from 'body-parser';\nimport cors from 'cors';\nimport next from 'next';\nimport cookieparser from 'cookie-parser';\n\nconst PORT = process.env.PORT || 3000;\nconst ENV = process.env.NODE_ENV || false;\nconst corsOptions = { origin: 'http://localhost:4000' };\n\nimport { databaseConnection, personModel } from './musclefeed-models/database';\nimport { accountSchema, productSchema } from './musclefeed-graphql/musclefeed-schema';\nimport { saltSync, bcrypt } from './musclefeed-configuration';\nimport { adminIsLogged, adminIsNotLogged, userIsNotLogged } from './protected.middleware';\n\nconst render = next({ ENV });\nconst handle = render.getRequestHandler();\n\nrender.prepare().then(() => {\n    const application = express();\n    application.use(cookieparser()); application.use(cors(corsOptions)); application.use(bodyparser.json({ limit: '10mb' }));\n    application.use(bodyparser.urlencoded({ extended: true })); application.use('/v1/graphql-first-instance/BtL7NQwOt0R7psYw1Fyx', graphqlHTTP((request, response) => ({ schema: accountSchema, graphiql: true }) ));\n    application.use(bodyparser.urlencoded({ extended: true, limit: '10mb' })); application.use('/v1/graphql-second-instance/0lqY5JycFu4BwCDv7vsM', graphqlHTTP((request, response) => ({ schema: productSchema, graphiql: true }) ));\n    \n    application.get('/admin-account', adminIsNotLogged, (request, response) => { const page = '/admin-account'; return handle(request, response, page); });\n    application.get('/admin-dashboard', adminIsLogged, (request, response) => { const page = '/admin-dashboard'; return handle(request, response, page); });\n    application.get('/admin-products', adminIsLogged, (request, response) => { const page = '/admin-products'; return handle(request, response, page); });\n    application.get('/admin-product-new', adminIsLogged, (request, response) => { const page = '/admin-product-new'; return handle(request, response, page); });\n    application.get('/admin-payments', adminIsLogged, (request, response) => { const page = '/admin-payments'; return handle(request, response, page); });\n    application.get('/admin-orders', adminIsLogged, (request, response) => { const page = '/admin-orders'; return handle(request, response, page); });\n\n    application.get('/user-cart', (request, response) => { const page = '/user-cart'; return handle(request, response, page); });\n    application.get('/user-account', userIsNotLogged, (request, response) => { const page = '/user-account'; return handle(request, response, page); });\n    \n    application.get('*', (request, response, next) => { return handle(request, response, next); });\n\n    application.listen(PORT, '10.188.37.107', () => { console.log('> Listening on server : ' + PORT); }); \n});\n\ndatabaseConnection.sync({ force: true }).then(() => { \n    console.log('Synced database.');\n    personModel.create({ firstname: 'Oussama', lastname: 'Jaaouani', username: 'jaaouani', email: 'jaaouani@musclefeed.co', password: bcrypt.hashSync('password', saltSync), token: bcrypt.hashSync('Jaaouani Oussama'+'password'+(new Date().getTime())), civility: 'Mr', phone: '+33646018759', city: 'Valence', country: 'France', main_address: '6 rue Célestin Poncet', secondary_address: 'Etage 3 Appartement 318', is_admin: true, signup_date: (new Date().getDate()) });\n    personModel.create({ firstname: 'Abdelaziz', lastname: 'Zouheir', username: 'zouheir', email: 'zouheir@musclefeed.co', password: bcrypt.hashSync('password', saltSync), token: bcrypt.hashSync('Abdelaziz Zouheir'+'password'+(new Date().getTime())), civility: 'Mr', phone: '+33766163622', city: 'Valence', country: 'France', main_address: '25 rue La Fontaine', secondary_address: 'Aucune', is_admin: true, signup_date: (new Date().getDate()) });\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558456708921
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/database.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.slideshowModel = exports.categoryModel = exports.productModel = exports.perfumeModel = exports.weightModel = exports.personModel = exports.databaseConnection = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _person = require(\"./person.model\");\n\nvar _weight = require(\"./weight.model\");\n\nvar _perfume = require(\"./perfume.model\");\n\nvar _product = require(\"./product.model\");\n\nvar _category = require(\"./category.model\");\n\nvar _slideshow = require(\"./slideshow.model\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar databaseConnection = new _sequelize[\"default\"]('musclefeed-local-node', 'root', 'root', {\n  dialect: 'mysql'\n});\nexports.databaseConnection = databaseConnection;\nvar personModel = (0, _person.makePersonModel)(databaseConnection);\nexports.personModel = personModel;\nvar weightModel = (0, _weight.makeWeightModel)(databaseConnection);\nexports.weightModel = weightModel;\nvar perfumeModel = (0, _perfume.makePerfumeModel)(databaseConnection);\nexports.perfumeModel = perfumeModel;\nvar productModel = (0, _product.makeProductModel)(databaseConnection);\nexports.productModel = productModel;\nvar categoryModel = (0, _category.makeCategoryModel)(databaseConnection);\nexports.categoryModel = categoryModel;\nvar slideshowModel = (0, _slideshow.makeSlideshowModel)(databaseConnection);\nexports.slideshowModel = slideshowModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImRhdGFiYXNlQ29ubmVjdGlvbiIsIlNlcXVlbGl6ZSIsImRpYWxlY3QiLCJwZXJzb25Nb2RlbCIsIndlaWdodE1vZGVsIiwicGVyZnVtZU1vZGVsIiwicHJvZHVjdE1vZGVsIiwiY2F0ZWdvcnlNb2RlbCIsInNsaWRlc2hvd01vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxrQkFBa0IsR0FBRyxJQUFJQyxxQkFBSixDQUN2Qix1QkFEdUIsRUFFdkIsTUFGdUIsRUFHdkIsTUFIdUIsRUFJbkI7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FKbUIsQ0FBM0I7O0FBT0EsSUFBTUMsV0FBVyxHQUFHLDZCQUFnQkgsa0JBQWhCLENBQXBCOztBQUNBLElBQU1JLFdBQVcsR0FBRyw2QkFBZ0JKLGtCQUFoQixDQUFwQjs7QUFDQSxJQUFNSyxZQUFZLEdBQUcsK0JBQWlCTCxrQkFBakIsQ0FBckI7O0FBQ0EsSUFBTU0sWUFBWSxHQUFHLCtCQUFpQk4sa0JBQWpCLENBQXJCOztBQUNBLElBQU1PLGFBQWEsR0FBRyxpQ0FBa0JQLGtCQUFsQixDQUF0Qjs7QUFDQSxJQUFNUSxjQUFjLEdBQUcsbUNBQW1CUixrQkFBbkIsQ0FBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL291c3NhbWFqYWFvdWFuaS9TaXRlcy9tdXNjbGVmZWVkLmNvL211c2NsZWZlZWQtc2VydmVyL3NvdXJjZS9tdXNjbGVmZWVkLW1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcblxuaW1wb3J0IHsgbWFrZVBlcnNvbk1vZGVsIH0gZnJvbSAnLi9wZXJzb24ubW9kZWwnO1xuaW1wb3J0IHsgbWFrZVdlaWdodE1vZGVsIH0gZnJvbSAnLi93ZWlnaHQubW9kZWwnO1xuaW1wb3J0IHsgbWFrZVBlcmZ1bWVNb2RlbCB9IGZyb20gJy4vcGVyZnVtZS5tb2RlbCc7XG5pbXBvcnQgeyBtYWtlUHJvZHVjdE1vZGVsIH0gZnJvbSAnLi9wcm9kdWN0Lm1vZGVsJztcbmltcG9ydCB7IG1ha2VDYXRlZ29yeU1vZGVsIH0gZnJvbSAnLi9jYXRlZ29yeS5tb2RlbCc7XG5pbXBvcnQgeyBtYWtlU2xpZGVzaG93TW9kZWwgfSBmcm9tICcuL3NsaWRlc2hvdy5tb2RlbCc7XG5cbmNvbnN0IGRhdGFiYXNlQ29ubmVjdGlvbiA9IG5ldyBTZXF1ZWxpemUoXG4gICAgJ211c2NsZWZlZWQtbG9jYWwtbm9kZScsIFxuICAgICdyb290JyxcbiAgICAncm9vdCcsXG4gICAgICAgIHsgZGlhbGVjdDogJ215c3FsJyB9XG4pO1xuXG5jb25zdCBwZXJzb25Nb2RlbCA9IG1ha2VQZXJzb25Nb2RlbChkYXRhYmFzZUNvbm5lY3Rpb24pO1xuY29uc3Qgd2VpZ2h0TW9kZWwgPSBtYWtlV2VpZ2h0TW9kZWwoZGF0YWJhc2VDb25uZWN0aW9uKTtcbmNvbnN0IHBlcmZ1bWVNb2RlbCA9IG1ha2VQZXJmdW1lTW9kZWwoZGF0YWJhc2VDb25uZWN0aW9uKTtcbmNvbnN0IHByb2R1Y3RNb2RlbCA9IG1ha2VQcm9kdWN0TW9kZWwoZGF0YWJhc2VDb25uZWN0aW9uKTtcbmNvbnN0IGNhdGVnb3J5TW9kZWwgPSBtYWtlQ2F0ZWdvcnlNb2RlbChkYXRhYmFzZUNvbm5lY3Rpb24pO1xuY29uc3Qgc2xpZGVzaG93TW9kZWwgPSBtYWtlU2xpZGVzaG93TW9kZWwoZGF0YWJhc2VDb25uZWN0aW9uKTtcblxuZXhwb3J0IHsgZGF0YWJhc2VDb25uZWN0aW9uLCBwZXJzb25Nb2RlbCwgd2VpZ2h0TW9kZWwsIHBlcmZ1bWVNb2RlbCwgcHJvZHVjdE1vZGVsLCBjYXRlZ29yeU1vZGVsLCBzbGlkZXNob3dNb2RlbCB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "databaseConnection",
        "Sequelize",
        "dialect",
        "personModel",
        "weightModel",
        "perfumeModel",
        "productModel",
        "categoryModel",
        "slideshowModel"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,GAAG,IAAIC,qBAAJ,CACvB,uBADuB,EAEvB,MAFuB,EAGvB,MAHuB,EAInB;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAJmB,CAA3B;;AAOA,IAAMC,WAAW,GAAG,6BAAgBH,kBAAhB,CAApB;;AACA,IAAMI,WAAW,GAAG,6BAAgBJ,kBAAhB,CAApB;;AACA,IAAMK,YAAY,GAAG,+BAAiBL,kBAAjB,CAArB;;AACA,IAAMM,YAAY,GAAG,+BAAiBN,kBAAjB,CAArB;;AACA,IAAMO,aAAa,GAAG,iCAAkBP,kBAAlB,CAAtB;;AACA,IAAMQ,cAAc,GAAG,mCAAmBR,kBAAnB,CAAvB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nimport { makePersonModel } from './person.model';\nimport { makeWeightModel } from './weight.model';\nimport { makePerfumeModel } from './perfume.model';\nimport { makeProductModel } from './product.model';\nimport { makeCategoryModel } from './category.model';\nimport { makeSlideshowModel } from './slideshow.model';\n\nconst databaseConnection = new Sequelize(\n    'musclefeed-local-node', \n    'root',\n    'root',\n        { dialect: 'mysql' }\n);\n\nconst personModel = makePersonModel(databaseConnection);\nconst weightModel = makeWeightModel(databaseConnection);\nconst perfumeModel = makePerfumeModel(databaseConnection);\nconst productModel = makeProductModel(databaseConnection);\nconst categoryModel = makeCategoryModel(databaseConnection);\nconst slideshowModel = makeSlideshowModel(databaseConnection);\n\nexport { databaseConnection, personModel, weightModel, perfumeModel, productModel, categoryModel, slideshowModel };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/person.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/person.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/person.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/person.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "person.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makePersonModel: function makePersonModel(connection) {\n    var Person = connection.define('person', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      firstname: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      lastname: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      username: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      password: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      token: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      civility: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      },\n      phone: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false,\n        unique: true\n      },\n      email: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false,\n        unique: true,\n        validate: {\n          isEmail: true\n        }\n      },\n      city: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: true\n      },\n      country: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: true\n      },\n      main_address: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: true,\n        unique: true\n      },\n      secondary_address: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: true,\n        unique: true\n      },\n      is_admin: {\n        type: _sequelize[\"default\"].BOOLEAN,\n        allowNull: true\n      },\n      signup_date: {\n        type: _sequelize[\"default\"].DATE,\n        allowNull: true\n      }\n    }, {\n      timestamps: true\n    });\n    return Person;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbi5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFrZVBlcnNvbk1vZGVsIiwiY29ubmVjdGlvbiIsIlBlcnNvbiIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsImZpcnN0bmFtZSIsIlNUUklORyIsImFsbG93TnVsbCIsImxhc3RuYW1lIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInRva2VuIiwiY2l2aWxpdHkiLCJwaG9uZSIsInVuaXF1ZSIsImVtYWlsIiwidmFsaWRhdGUiLCJpc0VtYWlsIiwiY2l0eSIsImNvdW50cnkiLCJtYWluX2FkZHJlc3MiLCJzZWNvbmRhcnlfYWRkcmVzcyIsImlzX2FkbWluIiwiQk9PTEVBTiIsInNpZ251cF9kYXRlIiwiREFURSIsInRpbWVzdGFtcHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVDLEVBQUFBLGVBQUYsMkJBQWtCQyxVQUFsQixFQUE4QjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdELFVBQVUsQ0FBQ0UsTUFBWCxDQUFrQixRQUFsQixFQUE0QjtBQUN2Q0MsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BQWxCO0FBQTJCQyxRQUFBQSxhQUFhLEVBQUUsSUFBMUM7QUFBZ0RDLFFBQUFBLFVBQVUsRUFBRTtBQUE1RCxPQURtQztBQUV2Q0MsTUFBQUEsU0FBUyxFQUFFO0FBQUVMLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUU7QUFBckMsT0FGNEI7QUFFbUNDLE1BQUFBLFFBQVEsRUFBRTtBQUFFUixRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsU0FBUyxFQUFFO0FBQXJDLE9BRjdDO0FBR3ZDRSxNQUFBQSxRQUFRLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUssTUFBbEI7QUFBMEJDLFFBQUFBLFNBQVMsRUFBRTtBQUFyQyxPQUg2QjtBQUdtQ0csTUFBQUEsUUFBUSxFQUFFO0FBQUVWLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUU7QUFBckMsT0FIN0M7QUFJdkNJLE1BQUFBLEtBQUssRUFBRTtBQUFFWCxRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsU0FBUyxFQUFFO0FBQXJDLE9BSmdDO0FBSW1DSyxNQUFBQSxRQUFRLEVBQUU7QUFBRVosUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUssTUFBbEI7QUFBMEJDLFFBQUFBLFNBQVMsRUFBRTtBQUFyQyxPQUo3QztBQUt2Q00sTUFBQUEsS0FBSyxFQUFFO0FBQUViLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUUsS0FBckM7QUFBNENPLFFBQUFBLE1BQU0sRUFBRTtBQUFwRCxPQUxnQztBQUttQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQUVmLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUUsS0FBckM7QUFBNENPLFFBQUFBLE1BQU0sRUFBRSxJQUFwRDtBQUEwREUsUUFBQUEsUUFBUSxFQUFFO0FBQUVDLFVBQUFBLE9BQU8sRUFBRTtBQUFYO0FBQXBFLE9BTDFDO0FBTXZDQyxNQUFBQSxJQUFJLEVBQUU7QUFBRWxCLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUU7QUFBckMsT0FOaUM7QUFNbUNZLE1BQUFBLE9BQU8sRUFBQztBQUFFbkIsUUFBQUEsSUFBSSxFQUFHQyxzQkFBVUssTUFBbkI7QUFBMkJDLFFBQUFBLFNBQVMsRUFBRTtBQUF0QyxPQU4zQztBQU92Q2EsTUFBQUEsWUFBWSxFQUFFO0FBQUVwQixRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsU0FBUyxFQUFFLElBQXJDO0FBQTJDTyxRQUFBQSxNQUFNLEVBQUU7QUFBbkQsT0FQeUI7QUFPbUNPLE1BQUFBLGlCQUFpQixFQUFFO0FBQUVyQixRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsU0FBUyxFQUFFLElBQXJDO0FBQTJDTyxRQUFBQSxNQUFNLEVBQUU7QUFBbkQsT0FQdEQ7QUFRdkNRLE1BQUFBLFFBQVEsRUFBRTtBQUFFdEIsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVXNCLE9BQWxCO0FBQTJCaEIsUUFBQUEsU0FBUyxFQUFFO0FBQXRDLE9BUjZCO0FBUW1DaUIsTUFBQUEsV0FBVyxFQUFFO0FBQUV4QixRQUFBQSxJQUFJLEVBQUVDLHNCQUFVd0IsSUFBbEI7QUFBd0JsQixRQUFBQSxTQUFTLEVBQUU7QUFBbkM7QUFSaEQsS0FBNUIsRUFTWjtBQUFFbUIsTUFBQUEsVUFBVSxFQUFFO0FBQWQsS0FUWSxDQUFmO0FBVUEsV0FBTzdCLE1BQVA7QUFDSDtBQVpZLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5cbm1vZHVsZS5leHBvcnRzID0geyBtYWtlUGVyc29uTW9kZWwoY29ubmVjdGlvbikge1xuICAgICAgICBjb25zdCBQZXJzb24gPSBjb25uZWN0aW9uLmRlZmluZSgncGVyc29uJywge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsIGF1dG9JbmNyZW1lbnQ6IHRydWUsIHByaW1hcnlLZXk6IHRydWUgfSxcbiAgICAgICAgICAgIGZpcnN0bmFtZTogeyB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLCBhbGxvd051bGw6IGZhbHNlIH0sICAgICAgICAgICAgICAgICAgbGFzdG5hbWU6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgYWxsb3dOdWxsOiBmYWxzZSB9LFxuICAgICAgICAgICAgdXNlcm5hbWU6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgYWxsb3dOdWxsOiBmYWxzZSB9LCAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogeyB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLCBhbGxvd051bGw6IGZhbHNlIH0sXG4gICAgICAgICAgICB0b2tlbjogeyB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLCBhbGxvd051bGw6IGZhbHNlIH0sICAgICAgICAgICAgICAgICAgICAgIGNpdmlsaXR5OiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogZmFsc2UgIH0sXG4gICAgICAgICAgICBwaG9uZTogeyB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLCBhbGxvd051bGw6IGZhbHNlLCB1bmlxdWU6IHRydWUgfSwgICAgICAgIGVtYWlsOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogZmFsc2UsIHVuaXF1ZTogdHJ1ZSwgdmFsaWRhdGU6IHsgaXNFbWFpbDogdHJ1ZSB9IH0sXG4gICAgICAgICAgICBjaXR5OiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogdHJ1ZSB9LCAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnk6eyB0eXBlOiAgU2VxdWVsaXplLlNUUklORywgYWxsb3dOdWxsOiB0cnVlIH0sXG4gICAgICAgICAgICBtYWluX2FkZHJlc3M6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgYWxsb3dOdWxsOiB0cnVlLCB1bmlxdWU6IHRydWUgfSwgIHNlY29uZGFyeV9hZGRyZXNzOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogdHJ1ZSwgdW5pcXVlOiB0cnVlIH0sXG4gICAgICAgICAgICBpc19hZG1pbjogeyB0eXBlOiBTZXF1ZWxpemUuQk9PTEVBTiwgYWxsb3dOdWxsOiB0cnVlIH0sICAgICAgICAgICAgICAgICAgIHNpZ251cF9kYXRlOiB7IHR5cGU6IFNlcXVlbGl6ZS5EQVRFLCBhbGxvd051bGw6IHRydWUgfVxuICAgICAgICB9LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG4gICAgICAgIHJldHVybiBQZXJzb247XG4gICAgfSBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "person.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makePersonModel",
        "connection",
        "Person",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "firstname",
        "STRING",
        "allowNull",
        "lastname",
        "username",
        "password",
        "token",
        "civility",
        "phone",
        "unique",
        "email",
        "validate",
        "isEmail",
        "city",
        "country",
        "main_address",
        "secondary_address",
        "is_admin",
        "BOOLEAN",
        "signup_date",
        "DATE",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,eAAF,2BAAkBC,UAAlB,EAA8B;AACvC,QAAMC,MAAM,GAAGD,UAAU,CAACE,MAAX,CAAkB,QAAlB,EAA4B;AACvCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADmC;AAEvCC,MAAAA,SAAS,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAF4B;AAEmCC,MAAAA,QAAQ,EAAE;AAAER,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAF7C;AAGvCE,MAAAA,QAAQ,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAH6B;AAGmCG,MAAAA,QAAQ,EAAE;AAAEV,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAH7C;AAIvCI,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAJgC;AAImCK,MAAAA,QAAQ,EAAE;AAAEZ,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAJ7C;AAKvCM,MAAAA,KAAK,EAAE;AAAEb,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,KAArC;AAA4CO,QAAAA,MAAM,EAAE;AAApD,OALgC;AAKmCC,MAAAA,KAAK,EAAE;AAAEf,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,KAArC;AAA4CO,QAAAA,MAAM,EAAE,IAApD;AAA0DE,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAApE,OAL1C;AAMvCC,MAAAA,IAAI,EAAE;AAAElB,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OANiC;AAMmCY,MAAAA,OAAO,EAAC;AAAEnB,QAAAA,IAAI,EAAGC,sBAAUK,MAAnB;AAA2BC,QAAAA,SAAS,EAAE;AAAtC,OAN3C;AAOvCa,MAAAA,YAAY,EAAE;AAAEpB,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,IAArC;AAA2CO,QAAAA,MAAM,EAAE;AAAnD,OAPyB;AAOmCO,MAAAA,iBAAiB,EAAE;AAAErB,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,IAArC;AAA2CO,QAAAA,MAAM,EAAE;AAAnD,OAPtD;AAQvCQ,MAAAA,QAAQ,EAAE;AAAEtB,QAAAA,IAAI,EAAEC,sBAAUsB,OAAlB;AAA2BhB,QAAAA,SAAS,EAAE;AAAtC,OAR6B;AAQmCiB,MAAAA,WAAW,EAAE;AAAExB,QAAAA,IAAI,EAAEC,sBAAUwB,IAAlB;AAAwBlB,QAAAA,SAAS,EAAE;AAAnC;AARhD,KAA5B,EASZ;AAAEmB,MAAAA,UAAU,EAAE;AAAd,KATY,CAAf;AAUA,WAAO7B,MAAP;AACH;AAZY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makePersonModel(connection) {\n        const Person = connection.define('person', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            firstname: { type: Sequelize.STRING, allowNull: false },                  lastname: { type: Sequelize.STRING, allowNull: false },\n            username: { type: Sequelize.STRING, allowNull: false },                   password: { type: Sequelize.STRING, allowNull: false },\n            token: { type: Sequelize.STRING, allowNull: false },                      civility: { type: Sequelize.STRING, allowNull: false  },\n            phone: { type: Sequelize.STRING, allowNull: false, unique: true },        email: { type: Sequelize.STRING, allowNull: false, unique: true, validate: { isEmail: true } },\n            city: { type: Sequelize.STRING, allowNull: true },                        country:{ type:  Sequelize.STRING, allowNull: true },\n            main_address: { type: Sequelize.STRING, allowNull: true, unique: true },  secondary_address: { type: Sequelize.STRING, allowNull: true, unique: true },\n            is_admin: { type: Sequelize.BOOLEAN, allowNull: true },                   signup_date: { type: Sequelize.DATE, allowNull: true }\n        }, { timestamps: true });\n        return Person;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558453936623
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/weight.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/weight.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/weight.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/weight.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "weight.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makeWeightModel: function makeWeightModel(connection) {\n    var Weight = connection.define('weight', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      name: {\n        type: _sequelize[\"default\"].STRING,\n        unique: true,\n        allowNull: false\n      },\n      value: {\n        type: _sequelize[\"default\"].INTEGER,\n        allowNull: false\n      }\n    }, {\n      timestamps: true\n    });\n    return Weight;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlaWdodC5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFrZVdlaWdodE1vZGVsIiwiY29ubmVjdGlvbiIsIldlaWdodCIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJ2YWx1ZSIsInRpbWVzdGFtcHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVDLEVBQUFBLGVBQUYsMkJBQWtCQyxVQUFsQixFQUE4QjtBQUN2QyxRQUFNQyxNQUFNLEdBQUdELFVBQVUsQ0FBQ0UsTUFBWCxDQUFrQixRQUFsQixFQUE0QjtBQUN2Q0MsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BQWxCO0FBQTJCQyxRQUFBQSxhQUFhLEVBQUUsSUFBMUM7QUFBZ0RDLFFBQUFBLFVBQVUsRUFBRTtBQUE1RCxPQURtQztBQUV2Q0MsTUFBQUEsSUFBSSxFQUFFO0FBQUVMLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxNQUFNLEVBQUUsSUFBbEM7QUFBd0NDLFFBQUFBLFNBQVMsRUFBRTtBQUFuRCxPQUZpQztBQUUyQkMsTUFBQUEsS0FBSyxFQUFFO0FBQUVULFFBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BQWxCO0FBQTJCTSxRQUFBQSxTQUFTLEVBQUU7QUFBdEM7QUFGbEMsS0FBNUIsRUFHWjtBQUFFRSxNQUFBQSxVQUFVLEVBQUU7QUFBZCxLQUhZLENBQWY7QUFJQSxXQUFPYixNQUFQO0FBQ0g7QUFOWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbWFrZVdlaWdodE1vZGVsKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29uc3QgV2VpZ2h0ID0gY29ubmVjdGlvbi5kZWZpbmUoJ3dlaWdodCcsIHtcbiAgICAgICAgICAgIGlkOiB7IHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLCBhdXRvSW5jcmVtZW50OiB0cnVlLCBwcmltYXJ5S2V5OiB0cnVlIH0sXG4gICAgICAgICAgICBuYW1lOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIHVuaXF1ZTogdHJ1ZSwgYWxsb3dOdWxsOiBmYWxzZSB9LCB2YWx1ZTogeyB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUiwgYWxsb3dOdWxsOiBmYWxzZSB9XG4gICAgICAgIH0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuIFdlaWdodDtcbiAgICB9IFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "weight.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makeWeightModel",
        "connection",
        "Weight",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "name",
        "STRING",
        "unique",
        "allowNull",
        "value",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,eAAF,2BAAkBC,UAAlB,EAA8B;AACvC,QAAMC,MAAM,GAAGD,UAAU,CAACE,MAAX,CAAkB,QAAlB,EAA4B;AACvCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADmC;AAEvCC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,MAAM,EAAE,IAAlC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFiC;AAE2BC,MAAAA,KAAK,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BM,QAAAA,SAAS,EAAE;AAAtC;AAFlC,KAA5B,EAGZ;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAHY,CAAf;AAIA,WAAOb,MAAP;AACH;AANY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makeWeightModel(connection) {\n        const Weight = connection.define('weight', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            name: { type: Sequelize.STRING, unique: true, allowNull: false }, value: { type: Sequelize.INTEGER, allowNull: false }\n        }, { timestamps: true });\n        return Weight;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876906
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/perfume.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/perfume.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/perfume.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/perfume.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "perfume.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makePerfumeModel: function makePerfumeModel(connection) {\n    var Perfume = connection.define('perfume', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      name: {\n        type: _sequelize[\"default\"].STRING,\n        unique: true,\n        allowNull: false\n      },\n      description: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false\n      }\n    }, {\n      timestamps: true\n    });\n    return Perfume;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZ1bWUubW9kZWwuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VQZXJmdW1lTW9kZWwiLCJjb25uZWN0aW9uIiwiUGVyZnVtZSIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJkZXNjcmlwdGlvbiIsInRpbWVzdGFtcHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVDLEVBQUFBLGdCQUFGLDRCQUFtQkMsVUFBbkIsRUFBK0I7QUFDeEMsUUFBTUMsT0FBTyxHQUFHRCxVQUFVLENBQUNFLE1BQVgsQ0FBa0IsU0FBbEIsRUFBNkI7QUFDekNDLE1BQUFBLEVBQUUsRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQUFsQjtBQUEyQkMsUUFBQUEsYUFBYSxFQUFFLElBQTFDO0FBQWdEQyxRQUFBQSxVQUFVLEVBQUU7QUFBNUQsT0FEcUM7QUFFekNDLE1BQUFBLElBQUksRUFBRTtBQUFFTCxRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsTUFBTSxFQUFFLElBQWxDO0FBQXdDQyxRQUFBQSxTQUFTLEVBQUU7QUFBbkQsT0FGbUM7QUFFeUJDLE1BQUFBLFdBQVcsRUFBRTtBQUFFVCxRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkUsUUFBQUEsU0FBUyxFQUFFO0FBQXJDO0FBRnRDLEtBQTdCLEVBR2I7QUFBRUUsTUFBQUEsVUFBVSxFQUFFO0FBQWQsS0FIYSxDQUFoQjtBQUlBLFdBQU9iLE9BQVA7QUFDSDtBQU5ZLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5cbm1vZHVsZS5leHBvcnRzID0geyBtYWtlUGVyZnVtZU1vZGVsKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29uc3QgUGVyZnVtZSA9IGNvbm5lY3Rpb24uZGVmaW5lKCdwZXJmdW1lJywge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsIGF1dG9JbmNyZW1lbnQ6IHRydWUsIHByaW1hcnlLZXk6IHRydWUgfSxcbiAgICAgICAgICAgIG5hbWU6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgdW5pcXVlOiB0cnVlLCBhbGxvd051bGw6IGZhbHNlIH0sIGRlc2NyaXB0aW9uOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogZmFsc2UgfVxuICAgICAgICB9LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG4gICAgICAgIHJldHVybiBQZXJmdW1lO1xuICAgIH0gXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "perfume.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makePerfumeModel",
        "connection",
        "Perfume",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "name",
        "STRING",
        "unique",
        "allowNull",
        "description",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,gBAAF,4BAAmBC,UAAnB,EAA+B;AACxC,QAAMC,OAAO,GAAGD,UAAU,CAACE,MAAX,CAAkB,SAAlB,EAA6B;AACzCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADqC;AAEzCC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,MAAM,EAAE,IAAlC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFmC;AAEyBC,MAAAA,WAAW,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BE,QAAAA,SAAS,EAAE;AAArC;AAFtC,KAA7B,EAGb;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAHa,CAAhB;AAIA,WAAOb,OAAP;AACH;AANY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makePerfumeModel(connection) {\n        const Perfume = connection.define('perfume', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            name: { type: Sequelize.STRING, unique: true, allowNull: false }, description: { type: Sequelize.STRING, allowNull: false }\n        }, { timestamps: true });\n        return Perfume;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876906
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/product.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/product.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/product.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/product.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "product.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makeProductModel: function makeProductModel(connection) {\n    var Product = connection.define('product', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      title: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false,\n        unique: true\n      },\n      description_title: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false,\n        unique: true\n      },\n      description: {\n        type: _sequelize[\"default\"].TEXT,\n        allowNull: false\n      },\n      details: {\n        type: _sequelize[\"default\"].TEXT,\n        allowNull: false\n      },\n      provider: {\n        type: _sequelize[\"default\"].STRING,\n        allowNull: false,\n        unique: true\n      },\n      quantity: {\n        type: _sequelize[\"default\"].INTEGER,\n        allowNull: false\n      },\n      image: {\n        type: _sequelize[\"default\"].TEXT('long'),\n        allowNull: false\n      }\n    }, {\n      timestamps: true\n    });\n    return Product;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QubW9kZWwuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VQcm9kdWN0TW9kZWwiLCJjb25uZWN0aW9uIiwiUHJvZHVjdCIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsInRpdGxlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwidW5pcXVlIiwiZGVzY3JpcHRpb25fdGl0bGUiLCJkZXNjcmlwdGlvbiIsIlRFWFQiLCJkZXRhaWxzIiwicHJvdmlkZXIiLCJxdWFudGl0eSIsImltYWdlIiwidGltZXN0YW1wcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRUMsRUFBQUEsZ0JBQUYsNEJBQW1CQyxVQUFuQixFQUErQjtBQUN4QyxRQUFNQyxPQUFPLEdBQUdELFVBQVUsQ0FBQ0UsTUFBWCxDQUFrQixTQUFsQixFQUE2QjtBQUN6Q0MsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BQWxCO0FBQTJCQyxRQUFBQSxhQUFhLEVBQUUsSUFBMUM7QUFBZ0RDLFFBQUFBLFVBQVUsRUFBRTtBQUE1RCxPQURxQztBQUV6Q0MsTUFBQUEsS0FBSyxFQUFFO0FBQUVMLFFBQUFBLElBQUksRUFBRUMsc0JBQVVLLE1BQWxCO0FBQTBCQyxRQUFBQSxTQUFTLEVBQUUsS0FBckM7QUFBNENDLFFBQUFBLE1BQU0sRUFBRTtBQUFwRCxPQUZrQztBQUUwQkMsTUFBQUEsaUJBQWlCLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUssTUFBbEI7QUFBMEJDLFFBQUFBLFNBQVMsRUFBRSxLQUFyQztBQUE0Q0MsUUFBQUEsTUFBTSxFQUFFO0FBQXBELE9BRjdDO0FBR3pDRSxNQUFBQSxXQUFXLEVBQUU7QUFBRVYsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVVUsSUFBbEI7QUFBd0JKLFFBQUFBLFNBQVMsRUFBRTtBQUFuQyxPQUg0QjtBQUdnQkssTUFBQUEsT0FBTyxFQUFFO0FBQUVaLFFBQUFBLElBQUksRUFBRUMsc0JBQVVVLElBQWxCO0FBQXdCSixRQUFBQSxTQUFTLEVBQUU7QUFBbkMsT0FIekI7QUFHcUVNLE1BQUFBLFFBQVEsRUFBRTtBQUFFYixRQUFBQSxJQUFJLEVBQUVDLHNCQUFVSyxNQUFsQjtBQUEwQkMsUUFBQUEsU0FBUyxFQUFFLEtBQXJDO0FBQTRDQyxRQUFBQSxNQUFNLEVBQUU7QUFBcEQsT0FIL0U7QUFJekNNLE1BQUFBLFFBQVEsRUFBRTtBQUFFZCxRQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQUFsQjtBQUEyQkssUUFBQUEsU0FBUyxFQUFFO0FBQXRDLE9BSitCO0FBSWdCUSxNQUFBQSxLQUFLLEVBQUU7QUFBRWYsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVVUsSUFBVixDQUFlLE1BQWYsQ0FBUjtBQUFnQ0osUUFBQUEsU0FBUyxFQUFFO0FBQTNDO0FBSnZCLEtBQTdCLEVBS2I7QUFBRVMsTUFBQUEsVUFBVSxFQUFFO0FBQWQsS0FMYSxDQUFoQjtBQU1BLFdBQU9uQixPQUFQO0FBQ0g7QUFSWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbWFrZVByb2R1Y3RNb2RlbChjb25uZWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IFByb2R1Y3QgPSBjb25uZWN0aW9uLmRlZmluZSgncHJvZHVjdCcsIHtcbiAgICAgICAgICAgIGlkOiB7IHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLCBhdXRvSW5jcmVtZW50OiB0cnVlLCBwcmltYXJ5S2V5OiB0cnVlIH0sXG4gICAgICAgICAgICB0aXRsZTogeyB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLCBhbGxvd051bGw6IGZhbHNlLCB1bmlxdWU6IHRydWUgfSwgZGVzY3JpcHRpb25fdGl0bGU6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgYWxsb3dOdWxsOiBmYWxzZSwgdW5pcXVlOiB0cnVlIH0sXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogeyB0eXBlOiBTZXF1ZWxpemUuVEVYVCwgYWxsb3dOdWxsOiBmYWxzZSB9LCBkZXRhaWxzOiB7IHR5cGU6IFNlcXVlbGl6ZS5URVhULCBhbGxvd051bGw6IGZhbHNlIH0sIHByb3ZpZGVyOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIGFsbG93TnVsbDogZmFsc2UsIHVuaXF1ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgcXVhbnRpdHk6IHsgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsIGFsbG93TnVsbDogZmFsc2UgfSwgaW1hZ2U6IHsgdHlwZTogU2VxdWVsaXplLlRFWFQoJ2xvbmcnKSwgYWxsb3dOdWxsOiBmYWxzZSB9XG4gICAgICAgIH0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuIFByb2R1Y3Q7XG4gICAgfSBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "product.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makeProductModel",
        "connection",
        "Product",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "title",
        "STRING",
        "allowNull",
        "unique",
        "description_title",
        "description",
        "TEXT",
        "details",
        "provider",
        "quantity",
        "image",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,gBAAF,4BAAmBC,UAAnB,EAA+B;AACxC,QAAMC,OAAO,GAAGD,UAAU,CAACE,MAAX,CAAkB,SAAlB,EAA6B;AACzCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADqC;AAEzCC,MAAAA,KAAK,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,KAArC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAFkC;AAE0BC,MAAAA,iBAAiB,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,KAArC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAF7C;AAGzCE,MAAAA,WAAW,EAAE;AAAEV,QAAAA,IAAI,EAAEC,sBAAUU,IAAlB;AAAwBJ,QAAAA,SAAS,EAAE;AAAnC,OAH4B;AAGgBK,MAAAA,OAAO,EAAE;AAAEZ,QAAAA,IAAI,EAAEC,sBAAUU,IAAlB;AAAwBJ,QAAAA,SAAS,EAAE;AAAnC,OAHzB;AAGqEM,MAAAA,QAAQ,EAAE;AAAEb,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,SAAS,EAAE,KAArC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAH/E;AAIzCM,MAAAA,QAAQ,EAAE;AAAEd,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BK,QAAAA,SAAS,EAAE;AAAtC,OAJ+B;AAIgBQ,MAAAA,KAAK,EAAE;AAAEf,QAAAA,IAAI,EAAEC,sBAAUU,IAAV,CAAe,MAAf,CAAR;AAAgCJ,QAAAA,SAAS,EAAE;AAA3C;AAJvB,KAA7B,EAKb;AAAES,MAAAA,UAAU,EAAE;AAAd,KALa,CAAhB;AAMA,WAAOnB,OAAP;AACH;AARY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makeProductModel(connection) {\n        const Product = connection.define('product', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            title: { type: Sequelize.STRING, allowNull: false, unique: true }, description_title: { type: Sequelize.STRING, allowNull: false, unique: true },\n            description: { type: Sequelize.TEXT, allowNull: false }, details: { type: Sequelize.TEXT, allowNull: false }, provider: { type: Sequelize.STRING, allowNull: false, unique: true },\n            quantity: { type: Sequelize.INTEGER, allowNull: false }, image: { type: Sequelize.TEXT('long'), allowNull: false }\n        }, { timestamps: true });\n        return Product;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876906
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/category.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/category.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/category.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/category.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "category.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makeCategoryModel: function makeCategoryModel(connection) {\n    var Category = connection.define('category', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      name: {\n        type: _sequelize[\"default\"].STRING,\n        unique: true,\n        allowNull: false\n      },\n      description: {\n        type: _sequelize[\"default\"].TEXT,\n        allowNull: false\n      }\n    }, {\n      timestamps: true\n    });\n    return Category;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5Lm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtYWtlQ2F0ZWdvcnlNb2RlbCIsImNvbm5lY3Rpb24iLCJDYXRlZ29yeSIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJkZXNjcmlwdGlvbiIsIlRFWFQiLCJ0aW1lc3RhbXBzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFQyxFQUFBQSxpQkFBRiw2QkFBb0JDLFVBQXBCLEVBQWdDO0FBQ3pDLFFBQU1DLFFBQVEsR0FBR0QsVUFBVSxDQUFDRSxNQUFYLENBQWtCLFVBQWxCLEVBQThCO0FBQzNDQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FBbEI7QUFBMkJDLFFBQUFBLGFBQWEsRUFBRSxJQUExQztBQUFnREMsUUFBQUEsVUFBVSxFQUFFO0FBQTVELE9BRHVDO0FBRTNDQyxNQUFBQSxJQUFJLEVBQUU7QUFBRUwsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUssTUFBbEI7QUFBMEJDLFFBQUFBLE1BQU0sRUFBRSxJQUFsQztBQUF3Q0MsUUFBQUEsU0FBUyxFQUFFO0FBQW5ELE9BRnFDO0FBRXVCQyxNQUFBQSxXQUFXLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVVMsSUFBbEI7QUFBd0JGLFFBQUFBLFNBQVMsRUFBRTtBQUFuQztBQUZwQyxLQUE5QixFQUdkO0FBQUVHLE1BQUFBLFVBQVUsRUFBRTtBQUFkLEtBSGMsQ0FBakI7QUFJQSxXQUFPZCxRQUFQO0FBQ0g7QUFOWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbWFrZUNhdGVnb3J5TW9kZWwoY29ubmVjdGlvbikge1xuICAgICAgICBjb25zdCBDYXRlZ29yeSA9IGNvbm5lY3Rpb24uZGVmaW5lKCdjYXRlZ29yeScsIHtcbiAgICAgICAgICAgIGlkOiB7IHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLCBhdXRvSW5jcmVtZW50OiB0cnVlLCBwcmltYXJ5S2V5OiB0cnVlIH0sXG4gICAgICAgICAgICBuYW1lOiB7IHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsIHVuaXF1ZTogdHJ1ZSwgYWxsb3dOdWxsOiBmYWxzZSB9LCBkZXNjcmlwdGlvbjogeyB0eXBlOiBTZXF1ZWxpemUuVEVYVCwgYWxsb3dOdWxsOiBmYWxzZSB9IFxuICAgICAgICB9LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG4gICAgICAgIHJldHVybiBDYXRlZ29yeTtcbiAgICB9IFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "category.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makeCategoryModel",
        "connection",
        "Category",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "name",
        "STRING",
        "unique",
        "allowNull",
        "description",
        "TEXT",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,iBAAF,6BAAoBC,UAApB,EAAgC;AACzC,QAAMC,QAAQ,GAAGD,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8B;AAC3CC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADuC;AAE3CC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,MAAM,EAAE,IAAlC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFqC;AAEuBC,MAAAA,WAAW,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUS,IAAlB;AAAwBF,QAAAA,SAAS,EAAE;AAAnC;AAFpC,KAA9B,EAGd;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAHc,CAAjB;AAIA,WAAOd,QAAP;AACH;AANY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makeCategoryModel(connection) {\n        const Category = connection.define('category', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            name: { type: Sequelize.STRING, unique: true, allowNull: false }, description: { type: Sequelize.TEXT, allowNull: false } \n        }, { timestamps: true });\n        return Category;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/slideshow.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/slideshow.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/slideshow.model.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models/slideshow.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
        "sourceFileName": "slideshow.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  makeSlideshowModel: function makeSlideshowModel(connection) {\n    var Slideshow = connection.define('slideshow', {\n      id: {\n        type: _sequelize[\"default\"].INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n      },\n      name: {\n        type: _sequelize[\"default\"].STRING,\n        unique: true,\n        allowNull: false\n      },\n      image: {\n        type: _sequelize[\"default\"].TEXT('long'),\n        allowNull: false\n      }\n    }, {\n      timestamps: true\n    });\n    return Slideshow;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlc2hvdy5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFrZVNsaWRlc2hvd01vZGVsIiwiY29ubmVjdGlvbiIsIlNsaWRlc2hvdyIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJpbWFnZSIsIlRFWFQiLCJ0aW1lc3RhbXBzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFQyxFQUFBQSxrQkFBRiw4QkFBcUJDLFVBQXJCLEVBQWlDO0FBQzFDLFFBQU1DLFNBQVMsR0FBR0QsVUFBVSxDQUFDRSxNQUFYLENBQWtCLFdBQWxCLEVBQStCO0FBQzdDQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FBbEI7QUFBMkJDLFFBQUFBLGFBQWEsRUFBRSxJQUExQztBQUFnREMsUUFBQUEsVUFBVSxFQUFFO0FBQTVELE9BRHlDO0FBRTdDQyxNQUFBQSxJQUFJLEVBQUU7QUFBRUwsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVUssTUFBbEI7QUFBMEJDLFFBQUFBLE1BQU0sRUFBRSxJQUFsQztBQUF3Q0MsUUFBQUEsU0FBUyxFQUFFO0FBQW5ELE9BRnVDO0FBRXFCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFQyxzQkFBVVMsSUFBVixDQUFlLE1BQWYsQ0FBUjtBQUFnQ0YsUUFBQUEsU0FBUyxFQUFFO0FBQTNDO0FBRjVCLEtBQS9CLEVBR2Y7QUFBRUcsTUFBQUEsVUFBVSxFQUFFO0FBQWQsS0FIZSxDQUFsQjtBQUlBLFdBQU9kLFNBQVA7QUFDSDtBQU5ZLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5cbm1vZHVsZS5leHBvcnRzID0geyBtYWtlU2xpZGVzaG93TW9kZWwoY29ubmVjdGlvbikge1xuICAgICAgICBjb25zdCBTbGlkZXNob3cgPSBjb25uZWN0aW9uLmRlZmluZSgnc2xpZGVzaG93Jywge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsIGF1dG9JbmNyZW1lbnQ6IHRydWUsIHByaW1hcnlLZXk6IHRydWUgfSxcbiAgICAgICAgICAgIG5hbWU6IHsgdHlwZTogU2VxdWVsaXplLlNUUklORywgdW5pcXVlOiB0cnVlLCBhbGxvd051bGw6IGZhbHNlIH0sIGltYWdlOiB7IHR5cGU6IFNlcXVlbGl6ZS5URVhUKCdsb25nJyksIGFsbG93TnVsbDogZmFsc2UgfVxuICAgICAgICB9LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XG4gICAgICAgIHJldHVybiBTbGlkZXNob3c7XG4gICAgfSBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "slideshow.model.js"
      ],
      "names": [
        "module",
        "exports",
        "makeSlideshowModel",
        "connection",
        "Slideshow",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "autoIncrement",
        "primaryKey",
        "name",
        "STRING",
        "unique",
        "allowNull",
        "image",
        "TEXT",
        "timestamps"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA,kBAAF,8BAAqBC,UAArB,EAAiC;AAC1C,QAAMC,SAAS,GAAGD,UAAU,CAACE,MAAX,CAAkB,WAAlB,EAA+B;AAC7CC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAEC,sBAAUC,OAAlB;AAA2BC,QAAAA,aAAa,EAAE,IAA1C;AAAgDC,QAAAA,UAAU,EAAE;AAA5D,OADyC;AAE7CC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAEC,sBAAUK,MAAlB;AAA0BC,QAAAA,MAAM,EAAE,IAAlC;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFuC;AAEqBC,MAAAA,KAAK,EAAE;AAAET,QAAAA,IAAI,EAAEC,sBAAUS,IAAV,CAAe,MAAf,CAAR;AAAgCF,QAAAA,SAAS,EAAE;AAA3C;AAF5B,KAA/B,EAGf;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAHe,CAAlB;AAIA,WAAOd,SAAP;AACH;AANY,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\nmodule.exports = { makeSlideshowModel(connection) {\n        const Slideshow = connection.define('slideshow', {\n            id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n            name: { type: Sequelize.STRING, unique: true, allowNull: false }, image: { type: Sequelize.TEXT('long'), allowNull: false }\n        }, { timestamps: true });\n        return Slideshow;\n    } \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876906
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/musclefeed-schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/musclefeed-schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/musclefeed-schema.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/musclefeed-schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql",
        "sourceFileName": "musclefeed-schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.productSchema = exports.accountSchema = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _personQuery = require(\"./graphql-queries/person-query\");\n\nvar _productQuery = require(\"./graphql-queries/product-query\");\n\nvar _personMutation = require(\"./graphql-mutations/person-mutation\");\n\nvar _productMutation = require(\"./graphql-mutations/product-mutation\");\n\nvar schemaOne = new _graphql.GraphQLSchema({\n  query: _personQuery.PersonQuery,\n  mutation: _personMutation.PersonMutation\n});\nexports.accountSchema = schemaOne;\nvar schemaTwo = new _graphql.GraphQLSchema({\n  query: _productQuery.ProductQuery,\n  mutation: _productMutation.ProductMutation\n});\nexports.productSchema = schemaTwo;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm11c2NsZWZlZWQtc2NoZW1hLmpzIl0sIm5hbWVzIjpbInNjaGVtYU9uZSIsIkdyYXBoUUxTY2hlbWEiLCJxdWVyeSIsIlBlcnNvblF1ZXJ5IiwibXV0YXRpb24iLCJQZXJzb25NdXRhdGlvbiIsInNjaGVtYVR3byIsIlByb2R1Y3RRdWVyeSIsIlByb2R1Y3RNdXRhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUVBOztBQUNBOztBQUVBLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxzQkFBSixDQUFrQjtBQUFFQyxFQUFBQSxLQUFLLEVBQUVDLHdCQUFUO0FBQXNCQyxFQUFBQSxRQUFRLEVBQUVDO0FBQWhDLENBQWxCLENBQWxCOztBQUNBLElBQU1DLFNBQVMsR0FBRyxJQUFJTCxzQkFBSixDQUFrQjtBQUFFQyxFQUFBQSxLQUFLLEVBQUVLLDBCQUFUO0FBQXVCSCxFQUFBQSxRQUFRLEVBQUVJO0FBQWpDLENBQWxCLENBQWxCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1ncmFwaHFsIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTFNjaGVtYSB9IGZyb20gJ2dyYXBocWwnO1xuXG5pbXBvcnQgeyBQZXJzb25RdWVyeSB9IGZyb20gJy4vZ3JhcGhxbC1xdWVyaWVzL3BlcnNvbi1xdWVyeSc7XG5pbXBvcnQgeyBQcm9kdWN0UXVlcnkgfSBmcm9tICcuL2dyYXBocWwtcXVlcmllcy9wcm9kdWN0LXF1ZXJ5JztcblxuaW1wb3J0IHsgUGVyc29uTXV0YXRpb24gfSBmcm9tICcuL2dyYXBocWwtbXV0YXRpb25zL3BlcnNvbi1tdXRhdGlvbic7XG5pbXBvcnQgeyBQcm9kdWN0TXV0YXRpb24gfSBmcm9tICcuL2dyYXBocWwtbXV0YXRpb25zL3Byb2R1Y3QtbXV0YXRpb24nOyBcblxuY29uc3Qgc2NoZW1hT25lID0gbmV3IEdyYXBoUUxTY2hlbWEoeyBxdWVyeTogUGVyc29uUXVlcnksIG11dGF0aW9uOiBQZXJzb25NdXRhdGlvbiB9KTtcbmNvbnN0IHNjaGVtYVR3byA9IG5ldyBHcmFwaFFMU2NoZW1hKHsgcXVlcnk6IFByb2R1Y3RRdWVyeSwgbXV0YXRpb246IFByb2R1Y3RNdXRhdGlvbiB9KTtcbmV4cG9ydCB7IHNjaGVtYU9uZSBhcyBhY2NvdW50U2NoZW1hLCBzY2hlbWFUd28gYXMgcHJvZHVjdFNjaGVtYSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "musclefeed-schema.js"
      ],
      "names": [
        "schemaOne",
        "GraphQLSchema",
        "query",
        "PersonQuery",
        "mutation",
        "PersonMutation",
        "schemaTwo",
        "ProductQuery",
        "ProductMutation"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,SAAS,GAAG,IAAIC,sBAAJ,CAAkB;AAAEC,EAAAA,KAAK,EAAEC,wBAAT;AAAsBC,EAAAA,QAAQ,EAAEC;AAAhC,CAAlB,CAAlB;;AACA,IAAMC,SAAS,GAAG,IAAIL,sBAAJ,CAAkB;AAAEC,EAAAA,KAAK,EAAEK,0BAAT;AAAuBH,EAAAA,QAAQ,EAAEI;AAAjC,CAAlB,CAAlB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql",
      "sourcesContent": [
        "import { GraphQLSchema } from 'graphql';\n\nimport { PersonQuery } from './graphql-queries/person-query';\nimport { ProductQuery } from './graphql-queries/product-query';\n\nimport { PersonMutation } from './graphql-mutations/person-mutation';\nimport { ProductMutation } from './graphql-mutations/product-mutation'; \n\nconst schemaOne = new GraphQLSchema({ query: PersonQuery, mutation: PersonMutation });\nconst schemaTwo = new GraphQLSchema({ query: ProductQuery, mutation: ProductMutation });\nexport { schemaOne as accountSchema, schemaTwo as productSchema };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/person-query.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/person-query.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/person-query.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/person-query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
        "sourceFileName": "person-query.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PersonQuery = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _personType = require(\"../graphql-types/person-type\");\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nvar PersonQuery = new _graphql.GraphQLObjectType({\n  name: 'PersonQuery',\n  fields: {\n    findByID: {\n      type: _personType.PersonType,\n      args: {\n        id: {\n          type: _graphql.GraphQLInt\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return _database.personModel.findOne({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    },\n    findByEmail: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return _database.personModel.findOne({\n          where: {\n            email: args.email\n          }\n        });\n      }\n    },\n    findByUsername: {\n      type: _personType.PersonType,\n      args: {\n        username: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return _database.personModel.findOne({\n          where: {\n            username: args.username\n          }\n        });\n      }\n    },\n    findAdminByEmail: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return _database.personModel.findOne({\n          where: {\n            email: args.email,\n            is_admin: true\n          }\n        });\n      }\n    },\n    findAdminByUsername: {\n      type: _personType.PersonType,\n      args: {\n        username: {\n          type: _graphql.GraphQLString\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return _database.personModel.findOne({\n          where: {\n            username: args.username,\n            is_admin: true\n          }\n        });\n      }\n    }\n  }\n});\nexports.PersonQuery = PersonQuery;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbi1xdWVyeS5qcyJdLCJuYW1lcyI6WyJQZXJzb25RdWVyeSIsIkdyYXBoUUxPYmplY3RUeXBlIiwibmFtZSIsImZpZWxkcyIsImZpbmRCeUlEIiwidHlwZSIsIlBlcnNvblR5cGUiLCJhcmdzIiwiaWQiLCJHcmFwaFFMSW50IiwicmVzb2x2ZSIsInNvdXJjZSIsImNvbnRleHQiLCJpbmZvIiwicGVyc29uTW9kZWwiLCJmaW5kT25lIiwid2hlcmUiLCJmaW5kQnlFbWFpbCIsImVtYWlsIiwiR3JhcGhRTFN0cmluZyIsImZpbmRCeVVzZXJuYW1lIiwidXNlcm5hbWUiLCJmaW5kQWRtaW5CeUVtYWlsIiwiaXNfYWRtaW4iLCJmaW5kQWRtaW5CeVVzZXJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLElBQUlDLDBCQUFKLENBQXNCO0FBQUVDLEVBQUFBLElBQUksRUFBRSxhQUFSO0FBQ3RDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsUUFBUSxFQUFFO0FBQUVDLE1BQUFBLElBQUksRUFBRUMsc0JBQVI7QUFBb0JDLE1BQUFBLElBQUksRUFBRTtBQUFFQyxRQUFBQSxFQUFFLEVBQUU7QUFBRUgsVUFBQUEsSUFBSSxFQUFFSTtBQUFSO0FBQU4sT0FBMUI7QUFBd0RDLE1BQUFBLE9BQXhELG1CQUFnRUMsTUFBaEUsRUFBd0VKLElBQXhFLEVBQThFSyxPQUE5RSxFQUF1RkMsSUFBdkYsRUFBNkY7QUFBRSxlQUFPQyxzQkFBWUMsT0FBWixDQUFvQjtBQUFFQyxVQUFBQSxLQUFLLEVBQUc7QUFBRVIsWUFBQUEsRUFBRSxFQUFFRCxJQUFJLENBQUNDO0FBQVg7QUFBVixTQUFwQixDQUFQO0FBQXlEO0FBQXhKLEtBRE47QUFFSlMsSUFBQUEsV0FBVyxFQUFFO0FBQUVaLE1BQUFBLElBQUksRUFBRUMsc0JBQVI7QUFBb0JDLE1BQUFBLElBQUksRUFBRTtBQUFFVyxRQUFBQSxLQUFLLEVBQUU7QUFBRWIsVUFBQUEsSUFBSSxFQUFFYztBQUFSO0FBQVQsT0FBMUI7QUFBOERULE1BQUFBLE9BQTlELG1CQUFzRUMsTUFBdEUsRUFBOEVKLElBQTlFLEVBQW9GSyxPQUFwRixFQUE2RkMsSUFBN0YsRUFBbUc7QUFBRSxlQUFPQyxzQkFBWUMsT0FBWixDQUFvQjtBQUFFQyxVQUFBQSxLQUFLLEVBQUc7QUFBRUUsWUFBQUEsS0FBSyxFQUFFWCxJQUFJLENBQUNXO0FBQWQ7QUFBVixTQUFwQixDQUFQO0FBQStEO0FBQXBLLEtBRlQ7QUFHSkUsSUFBQUEsY0FBYyxFQUFFO0FBQUVmLE1BQUFBLElBQUksRUFBRUMsc0JBQVI7QUFBb0JDLE1BQUFBLElBQUksRUFBRTtBQUFFYyxRQUFBQSxRQUFRLEVBQUU7QUFBRWhCLFVBQUFBLElBQUksRUFBRWM7QUFBUjtBQUFaLE9BQTFCO0FBQWlFVCxNQUFBQSxPQUFqRSxtQkFBeUVDLE1BQXpFLEVBQWlGSixJQUFqRixFQUF1RkssT0FBdkYsRUFBZ0dDLElBQWhHLEVBQXNHO0FBQUUsZUFBT0Msc0JBQVlDLE9BQVosQ0FBb0I7QUFBRUMsVUFBQUEsS0FBSyxFQUFHO0FBQUVLLFlBQUFBLFFBQVEsRUFBRWQsSUFBSSxDQUFDYztBQUFqQjtBQUFWLFNBQXBCLENBQVA7QUFBcUU7QUFBN0ssS0FIWjtBQUtKQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQUFFakIsTUFBQUEsSUFBSSxFQUFFQyxzQkFBUjtBQUFvQkMsTUFBQUEsSUFBSSxFQUFFO0FBQUVXLFFBQUFBLEtBQUssRUFBRTtBQUFFYixVQUFBQSxJQUFJLEVBQUVjO0FBQVI7QUFBVCxPQUExQjtBQUErRFQsTUFBQUEsT0FBL0QsbUJBQXVFQyxNQUF2RSxFQUErRUosSUFBL0UsRUFBcUZLLE9BQXJGLEVBQThGQyxJQUE5RixFQUFvRztBQUFFLGVBQU9DLHNCQUFZQyxPQUFaLENBQW9CO0FBQUVDLFVBQUFBLEtBQUssRUFBRztBQUFFRSxZQUFBQSxLQUFLLEVBQUVYLElBQUksQ0FBQ1csS0FBZDtBQUFxQkssWUFBQUEsUUFBUSxFQUFFO0FBQS9CO0FBQVYsU0FBcEIsQ0FBUDtBQUErRTtBQUFyTCxLQUxkO0FBTUpDLElBQUFBLG1CQUFtQixFQUFFO0FBQUVuQixNQUFBQSxJQUFJLEVBQUVDLHNCQUFSO0FBQW9CQyxNQUFBQSxJQUFJLEVBQUU7QUFBRWMsUUFBQUEsUUFBUSxFQUFFO0FBQUVoQixVQUFBQSxJQUFJLEVBQUVjO0FBQVI7QUFBWixPQUExQjtBQUFpRVQsTUFBQUEsT0FBakUsbUJBQXlFQyxNQUF6RSxFQUFpRkosSUFBakYsRUFBdUZLLE9BQXZGLEVBQWdHQyxJQUFoRyxFQUFzRztBQUFFLGVBQU9DLHNCQUFZQyxPQUFaLENBQW9CO0FBQUVDLFVBQUFBLEtBQUssRUFBRztBQUFFSyxZQUFBQSxRQUFRLEVBQUVkLElBQUksQ0FBQ2MsUUFBakI7QUFBMkJFLFlBQUFBLFFBQVEsRUFBRTtBQUFyQztBQUFWLFNBQXBCLENBQVA7QUFBcUY7QUFBN0w7QUFOakI7QUFEOEIsQ0FBdEIsQ0FBcEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL291c3NhbWFqYWFvdWFuaS9TaXRlcy9tdXNjbGVmZWVkLmNvL211c2NsZWZlZWQtc2VydmVyL3NvdXJjZS9tdXNjbGVmZWVkLWdyYXBocWwvZ3JhcGhxbC1xdWVyaWVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTFN0cmluZywgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnQgfSBmcm9tICdncmFwaHFsJztcblxuaW1wb3J0IHsgUGVyc29uVHlwZSB9IGZyb20gJy4uL2dyYXBocWwtdHlwZXMvcGVyc29uLXR5cGUnO1xuaW1wb3J0IHsgcGVyc29uTW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5cbmNvbnN0IFBlcnNvblF1ZXJ5ID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHsgbmFtZTogJ1BlcnNvblF1ZXJ5JyxcbiAgICBmaWVsZHM6IHtcbiAgICAgICAgZmluZEJ5SUQ6IHsgdHlwZTogUGVyc29uVHlwZSwgYXJnczogeyBpZDogeyB0eXBlOiBHcmFwaFFMSW50IH0gfSwgcmVzb2x2ZShzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pIHsgcmV0dXJuIHBlcnNvbk1vZGVsLmZpbmRPbmUoeyB3aGVyZSA6IHsgaWQ6IGFyZ3MuaWQgfX0pOyB9IH0sXG4gICAgICAgIGZpbmRCeUVtYWlsOiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9IH0sIHJlc29sdmUoc291cmNlLCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7IHJldHVybiBwZXJzb25Nb2RlbC5maW5kT25lKHsgd2hlcmUgOiB7IGVtYWlsOiBhcmdzLmVtYWlsIH19KTsgfSB9LFxuICAgICAgICBmaW5kQnlVc2VybmFtZTogeyB0eXBlOiBQZXJzb25UeXBlLCBhcmdzOiB7IHVzZXJuYW1lOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSB9LCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gcGVyc29uTW9kZWwuZmluZE9uZSh7IHdoZXJlIDogeyB1c2VybmFtZTogYXJncy51c2VybmFtZSB9fSk7IH0gfSxcblxuICAgICAgICBmaW5kQWRtaW5CeUVtYWlsOiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogR3JhcGhRTFN0cmluZywgfSB9LCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gcGVyc29uTW9kZWwuZmluZE9uZSh7IHdoZXJlIDogeyBlbWFpbDogYXJncy5lbWFpbCwgaXNfYWRtaW46IHRydWUgfX0pOyB9IH0sXG4gICAgICAgIGZpbmRBZG1pbkJ5VXNlcm5hbWU6IHsgdHlwZTogUGVyc29uVHlwZSwgYXJnczogeyB1c2VybmFtZTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0gfSwgcmVzb2x2ZShzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pIHsgcmV0dXJuIHBlcnNvbk1vZGVsLmZpbmRPbmUoeyB3aGVyZSA6IHsgdXNlcm5hbWU6IGFyZ3MudXNlcm5hbWUsIGlzX2FkbWluOiB0cnVlIH19KTsgfSB9LFxuICAgIH1cbn0pO1xuZXhwb3J0IHsgUGVyc29uUXVlcnkgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "person-query.js"
      ],
      "names": [
        "PersonQuery",
        "GraphQLObjectType",
        "name",
        "fields",
        "findByID",
        "type",
        "PersonType",
        "args",
        "id",
        "GraphQLInt",
        "resolve",
        "source",
        "context",
        "info",
        "personModel",
        "findOne",
        "where",
        "findByEmail",
        "email",
        "GraphQLString",
        "findByUsername",
        "username",
        "findAdminByEmail",
        "is_admin",
        "findAdminByUsername"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,WAAW,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,aAAR;AACtCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAEH,UAAAA,IAAI,EAAEI;AAAR;AAAN,OAA1B;AAAwDC,MAAAA,OAAxD,mBAAgEC,MAAhE,EAAwEJ,IAAxE,EAA8EK,OAA9E,EAAuFC,IAAvF,EAA6F;AAAE,eAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAG;AAAER,YAAAA,EAAE,EAAED,IAAI,CAACC;AAAX;AAAV,SAApB,CAAP;AAAyD;AAAxJ,KADN;AAEJS,IAAAA,WAAW,EAAE;AAAEZ,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAEb,UAAAA,IAAI,EAAEc;AAAR;AAAT,OAA1B;AAA8DT,MAAAA,OAA9D,mBAAsEC,MAAtE,EAA8EJ,IAA9E,EAAoFK,OAApF,EAA6FC,IAA7F,EAAmG;AAAE,eAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAG;AAAEE,YAAAA,KAAK,EAAEX,IAAI,CAACW;AAAd;AAAV,SAApB,CAAP;AAA+D;AAApK,KAFT;AAGJE,IAAAA,cAAc,EAAE;AAAEf,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEc,QAAAA,QAAQ,EAAE;AAAEhB,UAAAA,IAAI,EAAEc;AAAR;AAAZ,OAA1B;AAAiET,MAAAA,OAAjE,mBAAyEC,MAAzE,EAAiFJ,IAAjF,EAAuFK,OAAvF,EAAgGC,IAAhG,EAAsG;AAAE,eAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAG;AAAEK,YAAAA,QAAQ,EAAEd,IAAI,CAACc;AAAjB;AAAV,SAApB,CAAP;AAAqE;AAA7K,KAHZ;AAKJC,IAAAA,gBAAgB,EAAE;AAAEjB,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAEb,UAAAA,IAAI,EAAEc;AAAR;AAAT,OAA1B;AAA+DT,MAAAA,OAA/D,mBAAuEC,MAAvE,EAA+EJ,IAA/E,EAAqFK,OAArF,EAA8FC,IAA9F,EAAoG;AAAE,eAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAG;AAAEE,YAAAA,KAAK,EAAEX,IAAI,CAACW,KAAd;AAAqBK,YAAAA,QAAQ,EAAE;AAA/B;AAAV,SAApB,CAAP;AAA+E;AAArL,KALd;AAMJC,IAAAA,mBAAmB,EAAE;AAAEnB,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEc,QAAAA,QAAQ,EAAE;AAAEhB,UAAAA,IAAI,EAAEc;AAAR;AAAZ,OAA1B;AAAiET,MAAAA,OAAjE,mBAAyEC,MAAzE,EAAiFJ,IAAjF,EAAuFK,OAAvF,EAAgGC,IAAhG,EAAsG;AAAE,eAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAG;AAAEK,YAAAA,QAAQ,EAAEd,IAAI,CAACc,QAAjB;AAA2BE,YAAAA,QAAQ,EAAE;AAArC;AAAV,SAApB,CAAP;AAAqF;AAA7L;AANjB;AAD8B,CAAtB,CAApB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
      "sourcesContent": [
        "import { GraphQLString, GraphQLObjectType, GraphQLInt } from 'graphql';\n\nimport { PersonType } from '../graphql-types/person-type';\nimport { personModel } from '../../musclefeed-models/database';\n\nconst PersonQuery = new GraphQLObjectType({ name: 'PersonQuery',\n    fields: {\n        findByID: { type: PersonType, args: { id: { type: GraphQLInt } }, resolve(source, args, context, info) { return personModel.findOne({ where : { id: args.id }}); } },\n        findByEmail: { type: PersonType, args: { email: { type: GraphQLString } }, resolve(source, args, context, info) { return personModel.findOne({ where : { email: args.email }}); } },\n        findByUsername: { type: PersonType, args: { username: { type: GraphQLString } }, resolve(source, args, context, info) { return personModel.findOne({ where : { username: args.username }}); } },\n\n        findAdminByEmail: { type: PersonType, args: { email: { type: GraphQLString, } }, resolve(source, args, context, info) { return personModel.findOne({ where : { email: args.email, is_admin: true }}); } },\n        findAdminByUsername: { type: PersonType, args: { username: { type: GraphQLString } }, resolve(source, args, context, info) { return personModel.findOne({ where : { username: args.username, is_admin: true }}); } },\n    }\n});\nexport { PersonQuery };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876904
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/person-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/person-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/person-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/person-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "person-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PersonType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Person = new _graphql.GraphQLObjectType({\n  name: 'PersonType',\n  description: 'A Person GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(person) {\n          return person.id;\n        }\n      },\n      firstname: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.firstname;\n        }\n      },\n      lastname: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.lastname;\n        }\n      },\n      username: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.username;\n        }\n      },\n      password: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.password;\n        }\n      },\n      token: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.token;\n        }\n      },\n      civility: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.civility;\n        }\n      },\n      phone: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.phone;\n        }\n      },\n      email: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.email;\n        }\n      },\n      city: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.city;\n        }\n      },\n      country: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.country;\n        }\n      },\n      main_address: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.main_address;\n        }\n      },\n      secondary_address: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.secondary_address;\n        }\n      },\n      is_admin: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLBoolean),\n        resolve: function resolve(person) {\n          return person.is_admin;\n        }\n      },\n      signup_date: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.signup_date;\n        }\n      },\n      authenticateToken: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(person) {\n          return person.authenticateToken;\n        }\n      }\n    };\n  }\n});\nexports.PersonType = Person;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbi10eXBlLmpzIl0sIm5hbWVzIjpbIlBlcnNvbiIsIkdyYXBoUUxPYmplY3RUeXBlIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZmllbGRzIiwiaWQiLCJ0eXBlIiwiR3JhcGhRTE5vbk51bGwiLCJHcmFwaFFMSW50IiwicmVzb2x2ZSIsInBlcnNvbiIsImZpcnN0bmFtZSIsIkdyYXBoUUxTdHJpbmciLCJsYXN0bmFtZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0b2tlbiIsImNpdmlsaXR5IiwicGhvbmUiLCJlbWFpbCIsImNpdHkiLCJjb3VudHJ5IiwibWFpbl9hZGRyZXNzIiwic2Vjb25kYXJ5X2FkZHJlc3MiLCJpc19hZG1pbiIsIkdyYXBoUUxCb29sZWFuIiwic2lnbnVwX2RhdGUiLCJhdXRoZW50aWNhdGVUb2tlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQywwQkFBSixDQUFzQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsWUFBUjtBQUFzQkMsRUFBQUEsV0FBVyxFQUFFLGtDQUFuQztBQUNqQ0MsRUFBQUEsTUFBTSxFQUFFLGtCQUFNO0FBQ2QsV0FBTztBQUNDQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CQyxtQkFBbkIsQ0FBUjtBQUF3Q0MsUUFBQUEsT0FBeEMsbUJBQWdEQyxNQUFoRCxFQUF3RDtBQUFFLGlCQUFPQSxNQUFNLENBQUNMLEVBQWQ7QUFBbUI7QUFBN0UsT0FETDtBQUVDTSxNQUFBQSxTQUFTLEVBQUU7QUFBRUwsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNDLFNBQWQ7QUFBMEI7QUFBdkYsT0FGWjtBQUU2R0UsTUFBQUEsUUFBUSxFQUFFO0FBQUVQLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkssc0JBQW5CLENBQVI7QUFBMkNILFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDRyxRQUFkO0FBQXlCO0FBQXRGLE9BRnZIO0FBR0NDLE1BQUFBLFFBQVEsRUFBRTtBQUFFUixRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0ksUUFBZDtBQUF5QjtBQUF0RixPQUhYO0FBRzZHQyxNQUFBQSxRQUFRLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNLLFFBQWQ7QUFBeUI7QUFBdEYsT0FIdkg7QUFJQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQUVWLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkssc0JBQW5CLENBQVI7QUFBMkNILFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDTSxLQUFkO0FBQXNCO0FBQW5GLE9BSlI7QUFJNkdDLE1BQUFBLFFBQVEsRUFBRTtBQUFFWCxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ08sUUFBZDtBQUF5QjtBQUF0RixPQUp2SDtBQUtDQyxNQUFBQSxLQUFLLEVBQUU7QUFBRVosUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNRLEtBQWQ7QUFBc0I7QUFBbkYsT0FMUjtBQUs2R0MsTUFBQUEsS0FBSyxFQUFFO0FBQUViLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkssc0JBQW5CLENBQVI7QUFBMkNILFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDUyxLQUFkO0FBQXNCO0FBQW5GLE9BTHBIO0FBTUNDLE1BQUFBLElBQUksRUFBRTtBQUFFZCxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ1UsSUFBZDtBQUFxQjtBQUFsRixPQU5QO0FBTTZHQyxNQUFBQSxPQUFPLEVBQUU7QUFBRWYsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNXLE9BQWQ7QUFBd0I7QUFBckYsT0FOdEg7QUFPQ0MsTUFBQUEsWUFBWSxFQUFFO0FBQUVoQixRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ1ksWUFBZDtBQUE2QjtBQUExRixPQVBmO0FBTzZHQyxNQUFBQSxpQkFBaUIsRUFBRTtBQUFFakIsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNhLGlCQUFkO0FBQWlDO0FBQTlGLE9BUGhJO0FBUUNDLE1BQUFBLFFBQVEsRUFBRTtBQUFFbEIsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1Ca0IsdUJBQW5CLENBQVI7QUFBNENoQixRQUFBQSxPQUE1QyxtQkFBb0RDLE1BQXBELEVBQTREO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ2MsUUFBZDtBQUF5QjtBQUF2RixPQVJYO0FBUTZHRSxNQUFBQSxXQUFXLEVBQUU7QUFBRXBCLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkssc0JBQW5CLENBQVI7QUFBMkNILFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDZ0IsV0FBZDtBQUE0QjtBQUF6RixPQVIxSDtBQVNDQyxNQUFBQSxpQkFBaUIsRUFBRztBQUFFckIsUUFBQUEsSUFBSSxFQUFFTSxzQkFBUjtBQUF1QkgsUUFBQUEsT0FBdkIsbUJBQStCQyxNQUEvQixFQUF1QztBQUFFLGlCQUFPQSxNQUFNLENBQUNpQixpQkFBZDtBQUFpQztBQUExRTtBQVRyQixLQUFQO0FBV0M7QUFiZ0MsQ0FBdEIsQ0FBZiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLXR5cGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnQsIEdyYXBoUUxTdHJpbmcsIEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMTm9uTnVsbCB9IGZyb20gJ2dyYXBocWwnO1xuXG5jb25zdCBQZXJzb24gPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoeyBuYW1lOiAnUGVyc29uVHlwZScsIGRlc2NyaXB0aW9uOiAnQSBQZXJzb24gR3JhcGhRTCByZXByZXNlbnRhdGlvbi4nLFxuICAgIGZpZWxkczogKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEludCksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uaWQ7IH0gfSxcbiAgICAgICAgICAgIGZpcnN0bmFtZTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uZmlyc3RuYW1lOyB9IH0sICAgICAgIGxhc3RuYW1lOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5sYXN0bmFtZTsgfSB9LFxuICAgICAgICAgICAgdXNlcm5hbWU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLnVzZXJuYW1lOyB9IH0sICAgICAgICAgcGFzc3dvcmQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLnBhc3N3b3JkOyB9IH0sXG4gICAgICAgICAgICB0b2tlbjogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24udG9rZW47IH0gfSwgICAgICAgICAgICAgICBjaXZpbGl0eTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uY2l2aWxpdHk7IH0gfSxcbiAgICAgICAgICAgIHBob25lOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5waG9uZTsgfSB9LCAgICAgICAgICAgICAgIGVtYWlsOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5lbWFpbDsgfSB9LFxuICAgICAgICAgICAgY2l0eTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uY2l0eTsgfSB9LCAgICAgICAgICAgICAgICAgY291bnRyeTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uY291bnRyeTsgfSB9LFxuICAgICAgICAgICAgbWFpbl9hZGRyZXNzOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5tYWluX2FkZHJlc3M7IH0gfSwgc2Vjb25kYXJ5X2FkZHJlc3M6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLnNlY29uZGFyeV9hZGRyZXNzIH19LFxuICAgICAgICAgICAgaXNfYWRtaW46IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxCb29sZWFuKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5pc19hZG1pbjsgfSB9LCAgICAgICAgc2lnbnVwX2RhdGU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLnNpZ251cF9kYXRlOyB9IH0sXG4gICAgICAgICAgICBhdXRoZW50aWNhdGVUb2tlbiA6IHsgdHlwZTogR3JhcGhRTFN0cmluZywgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5hdXRoZW50aWNhdGVUb2tlbiB9IH1cbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG5leHBvcnQgeyBQZXJzb24gYXMgUGVyc29uVHlwZSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "person-type.js"
      ],
      "names": [
        "Person",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "person",
        "firstname",
        "GraphQLString",
        "lastname",
        "username",
        "password",
        "token",
        "civility",
        "phone",
        "email",
        "city",
        "country",
        "main_address",
        "secondary_address",
        "is_admin",
        "GraphQLBoolean",
        "signup_date",
        "authenticateToken"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,WAAW,EAAE,kCAAnC;AACjCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACL,EAAd;AAAmB;AAA7E,OADL;AAECM,MAAAA,SAAS,EAAE;AAAEL,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACC,SAAd;AAA0B;AAAvF,OAFZ;AAE6GE,MAAAA,QAAQ,EAAE;AAAEP,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACG,QAAd;AAAyB;AAAtF,OAFvH;AAGCC,MAAAA,QAAQ,EAAE;AAAER,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACI,QAAd;AAAyB;AAAtF,OAHX;AAG6GC,MAAAA,QAAQ,EAAE;AAAET,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACK,QAAd;AAAyB;AAAtF,OAHvH;AAICC,MAAAA,KAAK,EAAE;AAAEV,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACM,KAAd;AAAsB;AAAnF,OAJR;AAI6GC,MAAAA,QAAQ,EAAE;AAAEX,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACO,QAAd;AAAyB;AAAtF,OAJvH;AAKCC,MAAAA,KAAK,EAAE;AAAEZ,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACQ,KAAd;AAAsB;AAAnF,OALR;AAK6GC,MAAAA,KAAK,EAAE;AAAEb,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACS,KAAd;AAAsB;AAAnF,OALpH;AAMCC,MAAAA,IAAI,EAAE;AAAEd,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACU,IAAd;AAAqB;AAAlF,OANP;AAM6GC,MAAAA,OAAO,EAAE;AAAEf,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACW,OAAd;AAAwB;AAArF,OANtH;AAOCC,MAAAA,YAAY,EAAE;AAAEhB,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACY,YAAd;AAA6B;AAA1F,OAPf;AAO6GC,MAAAA,iBAAiB,EAAE;AAAEjB,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACa,iBAAd;AAAiC;AAA9F,OAPhI;AAQCC,MAAAA,QAAQ,EAAE;AAAElB,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBkB,uBAAnB,CAAR;AAA4ChB,QAAAA,OAA5C,mBAAoDC,MAApD,EAA4D;AAAE,iBAAOA,MAAM,CAACc,QAAd;AAAyB;AAAvF,OARX;AAQ6GE,MAAAA,WAAW,EAAE;AAAEpB,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACgB,WAAd;AAA4B;AAAzF,OAR1H;AASCC,MAAAA,iBAAiB,EAAG;AAAErB,QAAAA,IAAI,EAAEM,sBAAR;AAAuBH,QAAAA,OAAvB,mBAA+BC,MAA/B,EAAuC;AAAE,iBAAOA,MAAM,CAACiB,iBAAd;AAAiC;AAA1E;AATrB,KAAP;AAWC;AAbgC,CAAtB,CAAf",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLBoolean, GraphQLNonNull } from 'graphql';\n\nconst Person = new GraphQLObjectType({ name: 'PersonType', description: 'A Person GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(person) { return person.id; } },\n            firstname: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.firstname; } },       lastname: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.lastname; } },\n            username: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.username; } },         password: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.password; } },\n            token: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.token; } },               civility: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.civility; } },\n            phone: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.phone; } },               email: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.email; } },\n            city: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.city; } },                 country: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.country; } },\n            main_address: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.main_address; } }, secondary_address: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.secondary_address }},\n            is_admin: { type: new GraphQLNonNull(GraphQLBoolean), resolve(person) { return person.is_admin; } },        signup_date: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.signup_date; } },\n            authenticateToken : { type: GraphQLString, resolve(person) { return person.authenticateToken } }\n        }\n    }\n});\n\nexport { Person as PersonType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/product-query.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/product-query.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/product-query.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries/product-query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
        "sourceFileName": "product-query.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProductQuery = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _categoryType = require(\"../graphql-types/category-type\");\n\nvar _perfumeType = require(\"../graphql-types/perfume-type\");\n\nvar _weightType = require(\"../graphql-types/weight-type\");\n\nvar _productType = require(\"../graphql-types/product-type\");\n\nvar _slideshowType = require(\"../graphql-types/slideshow-type\");\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nvar ProductQuery = new _graphql.GraphQLObjectType({\n  name: 'ProductQuery',\n  fields: {\n    fetchAllCategories: {\n      type: new _graphql.GraphQLList(_categoryType.CategoryType),\n      resolve: function resolve(source, args, context, info) {\n        return _database.categoryModel.findAll();\n      }\n    },\n    fetchAllPerfumes: {\n      type: new _graphql.GraphQLList(_perfumeType.PerfumeType),\n      resolve: function resolve(source, args, context, info) {\n        return _database.perfumeModel.findAll();\n      }\n    },\n    fetchAllWeights: {\n      type: new _graphql.GraphQLList(_weightType.WeightType),\n      resolve: function resolve(source, args, context, info) {\n        return _database.weightModel.findAll();\n      }\n    },\n    fetchSlideshowImage: {\n      type: new _graphql.GraphQLList(_slideshowType.SlideshowType),\n      resolve: function resolve(source, args, context, info) {\n        return _database.slideshowModel.findAll();\n      }\n    },\n    fetchProducts: {\n      type: new _graphql.GraphQLList(_productType.ProductType),\n      resolve: function resolve(source, args, context, info) {\n        return _database.productModel.findAll();\n      }\n    }\n  }\n});\nexports.ProductQuery = ProductQuery;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtcXVlcnkuanMiXSwibmFtZXMiOlsiUHJvZHVjdFF1ZXJ5IiwiR3JhcGhRTE9iamVjdFR5cGUiLCJuYW1lIiwiZmllbGRzIiwiZmV0Y2hBbGxDYXRlZ29yaWVzIiwidHlwZSIsIkdyYXBoUUxMaXN0IiwiQ2F0ZWdvcnlUeXBlIiwicmVzb2x2ZSIsInNvdXJjZSIsImFyZ3MiLCJjb250ZXh0IiwiaW5mbyIsImNhdGVnb3J5TW9kZWwiLCJmaW5kQWxsIiwiZmV0Y2hBbGxQZXJmdW1lcyIsIlBlcmZ1bWVUeXBlIiwicGVyZnVtZU1vZGVsIiwiZmV0Y2hBbGxXZWlnaHRzIiwiV2VpZ2h0VHlwZSIsIndlaWdodE1vZGVsIiwiZmV0Y2hTbGlkZXNob3dJbWFnZSIsIlNsaWRlc2hvd1R5cGUiLCJzbGlkZXNob3dNb2RlbCIsImZldGNoUHJvZHVjdHMiLCJQcm9kdWN0VHlwZSIsInByb2R1Y3RNb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQU1BLElBQU1BLFlBQVksR0FBRyxJQUFJQywwQkFBSixDQUFzQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsY0FBUjtBQUN2Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLGtCQUFrQixFQUFFO0FBQUVDLE1BQUFBLElBQUksRUFBRSxJQUFJQyxvQkFBSixDQUFnQkMsMEJBQWhCLENBQVI7QUFBdUNDLE1BQUFBLE9BQXZDLG1CQUErQ0MsTUFBL0MsRUFBdURDLElBQXZELEVBQTZEQyxPQUE3RCxFQUFzRUMsSUFBdEUsRUFBNEU7QUFBRSxlQUFPQyx3QkFBY0MsT0FBZCxFQUFQO0FBQWlDO0FBQS9HLEtBRGhCO0FBRUpDLElBQUFBLGdCQUFnQixFQUFFO0FBQUVWLE1BQUFBLElBQUksRUFBRSxJQUFJQyxvQkFBSixDQUFnQlUsd0JBQWhCLENBQVI7QUFBc0NSLE1BQUFBLE9BQXRDLG1CQUE4Q0MsTUFBOUMsRUFBc0RDLElBQXRELEVBQTREQyxPQUE1RCxFQUFxRUMsSUFBckUsRUFBMkU7QUFBRSxlQUFPSyx1QkFBYUgsT0FBYixFQUFQO0FBQWdDO0FBQTdHLEtBRmQ7QUFHSkksSUFBQUEsZUFBZSxFQUFFO0FBQUViLE1BQUFBLElBQUksRUFBRSxJQUFJQyxvQkFBSixDQUFnQmEsc0JBQWhCLENBQVI7QUFBcUNYLE1BQUFBLE9BQXJDLG1CQUE2Q0MsTUFBN0MsRUFBcURDLElBQXJELEVBQTJEQyxPQUEzRCxFQUFvRUMsSUFBcEUsRUFBMEU7QUFBRSxlQUFPUSxzQkFBWU4sT0FBWixFQUFQO0FBQStCO0FBQTNHLEtBSGI7QUFJSk8sSUFBQUEsbUJBQW1CLEVBQUU7QUFBRWhCLE1BQUFBLElBQUksRUFBRSxJQUFJQyxvQkFBSixDQUFnQmdCLDRCQUFoQixDQUFSO0FBQXdDZCxNQUFBQSxPQUF4QyxtQkFBZ0RDLE1BQWhELEVBQXdEQyxJQUF4RCxFQUE4REMsT0FBOUQsRUFBdUVDLElBQXZFLEVBQTZFO0FBQUUsZUFBT1cseUJBQWVULE9BQWYsRUFBUDtBQUFrQztBQUFqSCxLQUpqQjtBQUtKVSxJQUFBQSxhQUFhLEVBQUU7QUFBRW5CLE1BQUFBLElBQUksRUFBRSxJQUFJQyxvQkFBSixDQUFnQm1CLHdCQUFoQixDQUFSO0FBQXNDakIsTUFBQUEsT0FBdEMsbUJBQThDQyxNQUE5QyxFQUFzREMsSUFBdEQsRUFBNERDLE9BQTVELEVBQXFFQyxJQUFyRSxFQUEyRTtBQUFFLGVBQU9jLHVCQUFhWixPQUFiLEVBQVA7QUFBZ0M7QUFBN0c7QUFMWDtBQUQrQixDQUF0QixDQUFyQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLXF1ZXJpZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMU3RyaW5nLCBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTExpc3QgfSBmcm9tICdncmFwaHFsJztcblxuaW1wb3J0IHsgQ2F0ZWdvcnlUeXBlIH0gZnJvbSAnLi4vZ3JhcGhxbC10eXBlcy9jYXRlZ29yeS10eXBlJztcbmltcG9ydCB7IFBlcmZ1bWVUeXBlIH0gZnJvbSAnLi4vZ3JhcGhxbC10eXBlcy9wZXJmdW1lLXR5cGUnO1xuaW1wb3J0IHsgV2VpZ2h0VHlwZSB9IGZyb20gJy4uL2dyYXBocWwtdHlwZXMvd2VpZ2h0LXR5cGUnO1xuaW1wb3J0IHsgUHJvZHVjdFR5cGUgfSBmcm9tICcuLi9ncmFwaHFsLXR5cGVzL3Byb2R1Y3QtdHlwZSc7XG5pbXBvcnQgeyBTbGlkZXNob3dUeXBlIH0gZnJvbSAnLi4vZ3JhcGhxbC10eXBlcy9zbGlkZXNob3ctdHlwZSc7XG5cbmltcG9ydCB7IGNhdGVnb3J5TW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5pbXBvcnQgeyBwZXJmdW1lTW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5pbXBvcnQgeyB3ZWlnaHRNb2RlbCB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcbmltcG9ydCB7IHByb2R1Y3RNb2RlbCB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcbmltcG9ydCB7IHNsaWRlc2hvd01vZGVsIH0gZnJvbSAnLi4vLi4vbXVzY2xlZmVlZC1tb2RlbHMvZGF0YWJhc2UnO1xuXG5jb25zdCBQcm9kdWN0UXVlcnkgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoeyBuYW1lOiAnUHJvZHVjdFF1ZXJ5JyxcbiAgICBmaWVsZHM6IHtcbiAgICAgICAgZmV0Y2hBbGxDYXRlZ29yaWVzOiB7IHR5cGU6IG5ldyBHcmFwaFFMTGlzdChDYXRlZ29yeVR5cGUpLCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gY2F0ZWdvcnlNb2RlbC5maW5kQWxsKCk7IH0gfSxcbiAgICAgICAgZmV0Y2hBbGxQZXJmdW1lczogeyB0eXBlOiBuZXcgR3JhcGhRTExpc3QoUGVyZnVtZVR5cGUpLCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gcGVyZnVtZU1vZGVsLmZpbmRBbGwoKTsgfSB9LFxuICAgICAgICBmZXRjaEFsbFdlaWdodHM6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KFdlaWdodFR5cGUpLCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gd2VpZ2h0TW9kZWwuZmluZEFsbCgpOyB9IH0sXG4gICAgICAgIGZldGNoU2xpZGVzaG93SW1hZ2U6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KFNsaWRlc2hvd1R5cGUpLCByZXNvbHZlKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgeyByZXR1cm4gc2xpZGVzaG93TW9kZWwuZmluZEFsbCgpOyB9IH0sXG4gICAgICAgIGZldGNoUHJvZHVjdHM6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KFByb2R1Y3RUeXBlKSwgcmVzb2x2ZShzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pIHsgcmV0dXJuIHByb2R1Y3RNb2RlbC5maW5kQWxsKCk7IH0gfVxuICAgIH1cbn0pO1xuZXhwb3J0IHsgUHJvZHVjdFF1ZXJ5IH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "product-query.js"
      ],
      "names": [
        "ProductQuery",
        "GraphQLObjectType",
        "name",
        "fields",
        "fetchAllCategories",
        "type",
        "GraphQLList",
        "CategoryType",
        "resolve",
        "source",
        "args",
        "context",
        "info",
        "categoryModel",
        "findAll",
        "fetchAllPerfumes",
        "PerfumeType",
        "perfumeModel",
        "fetchAllWeights",
        "WeightType",
        "weightModel",
        "fetchSlideshowImage",
        "SlideshowType",
        "slideshowModel",
        "fetchProducts",
        "ProductType",
        "productModel"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAMA,IAAMA,YAAY,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,cAAR;AACvCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,kBAAkB,EAAE;AAAEC,MAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBC,0BAAhB,CAAR;AAAuCC,MAAAA,OAAvC,mBAA+CC,MAA/C,EAAuDC,IAAvD,EAA6DC,OAA7D,EAAsEC,IAAtE,EAA4E;AAAE,eAAOC,wBAAcC,OAAd,EAAP;AAAiC;AAA/G,KADhB;AAEJC,IAAAA,gBAAgB,EAAE;AAAEV,MAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBU,wBAAhB,CAAR;AAAsCR,MAAAA,OAAtC,mBAA8CC,MAA9C,EAAsDC,IAAtD,EAA4DC,OAA5D,EAAqEC,IAArE,EAA2E;AAAE,eAAOK,uBAAaH,OAAb,EAAP;AAAgC;AAA7G,KAFd;AAGJI,IAAAA,eAAe,EAAE;AAAEb,MAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBa,sBAAhB,CAAR;AAAqCX,MAAAA,OAArC,mBAA6CC,MAA7C,EAAqDC,IAArD,EAA2DC,OAA3D,EAAoEC,IAApE,EAA0E;AAAE,eAAOQ,sBAAYN,OAAZ,EAAP;AAA+B;AAA3G,KAHb;AAIJO,IAAAA,mBAAmB,EAAE;AAAEhB,MAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBgB,4BAAhB,CAAR;AAAwCd,MAAAA,OAAxC,mBAAgDC,MAAhD,EAAwDC,IAAxD,EAA8DC,OAA9D,EAAuEC,IAAvE,EAA6E;AAAE,eAAOW,yBAAeT,OAAf,EAAP;AAAkC;AAAjH,KAJjB;AAKJU,IAAAA,aAAa,EAAE;AAAEnB,MAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAgBmB,wBAAhB,CAAR;AAAsCjB,MAAAA,OAAtC,mBAA8CC,MAA9C,EAAsDC,IAAtD,EAA4DC,OAA5D,EAAqEC,IAArE,EAA2E;AAAE,eAAOc,uBAAaZ,OAAb,EAAP;AAAgC;AAA7G;AALX;AAD+B,CAAtB,CAArB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-queries",
      "sourcesContent": [
        "import { GraphQLString, GraphQLObjectType, GraphQLInt, GraphQLList } from 'graphql';\n\nimport { CategoryType } from '../graphql-types/category-type';\nimport { PerfumeType } from '../graphql-types/perfume-type';\nimport { WeightType } from '../graphql-types/weight-type';\nimport { ProductType } from '../graphql-types/product-type';\nimport { SlideshowType } from '../graphql-types/slideshow-type';\n\nimport { categoryModel } from '../../musclefeed-models/database';\nimport { perfumeModel } from '../../musclefeed-models/database';\nimport { weightModel } from '../../musclefeed-models/database';\nimport { productModel } from '../../musclefeed-models/database';\nimport { slideshowModel } from '../../musclefeed-models/database';\n\nconst ProductQuery = new GraphQLObjectType({ name: 'ProductQuery',\n    fields: {\n        fetchAllCategories: { type: new GraphQLList(CategoryType), resolve(source, args, context, info) { return categoryModel.findAll(); } },\n        fetchAllPerfumes: { type: new GraphQLList(PerfumeType), resolve(source, args, context, info) { return perfumeModel.findAll(); } },\n        fetchAllWeights: { type: new GraphQLList(WeightType), resolve(source, args, context, info) { return weightModel.findAll(); } },\n        fetchSlideshowImage: { type: new GraphQLList(SlideshowType), resolve(source, args, context, info) { return slideshowModel.findAll(); } },\n        fetchProducts: { type: new GraphQLList(ProductType), resolve(source, args, context, info) { return productModel.findAll(); } }\n    }\n});\nexport { ProductQuery };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876904
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/category-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/category-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/category-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/category-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "category-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CategoryType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Category = new _graphql.GraphQLObjectType({\n  name: 'CategoryType',\n  description: 'A Category GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(category) {\n          return category.id;\n        }\n      },\n      name: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(category) {\n          return category.name;\n        }\n      },\n      description: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(category) {\n          return category.description;\n        }\n      }\n    };\n  }\n});\nexports.CategoryType = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LXR5cGUuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcnkiLCJHcmFwaFFMT2JqZWN0VHlwZSIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImZpZWxkcyIsImlkIiwidHlwZSIsIkdyYXBoUUxOb25OdWxsIiwiR3JhcGhRTEludCIsInJlc29sdmUiLCJjYXRlZ29yeSIsIkdyYXBoUUxTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFBRUMsRUFBQUEsSUFBSSxFQUFFLGNBQVI7QUFBd0JDLEVBQUFBLFdBQVcsRUFBRSxvQ0FBckM7QUFDbkNDLEVBQUFBLE1BQU0sRUFBRSxrQkFBTTtBQUNkLFdBQU87QUFDQ0MsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkMsbUJBQW5CLENBQVI7QUFBd0NDLFFBQUFBLE9BQXhDLG1CQUFnREMsUUFBaEQsRUFBMEQ7QUFBRSxpQkFBT0EsUUFBUSxDQUFDTCxFQUFoQjtBQUFxQjtBQUFqRixPQURMO0FBRUNILE1BQUFBLElBQUksRUFBRTtBQUFFSSxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJJLHNCQUFuQixDQUFSO0FBQTJDRixRQUFBQSxPQUEzQyxtQkFBbURDLFFBQW5ELEVBQTZEO0FBQUUsaUJBQU9BLFFBQVEsQ0FBQ1IsSUFBaEI7QUFBdUI7QUFBdEYsT0FGUDtBQUdDQyxNQUFBQSxXQUFXLEVBQUU7QUFBRUcsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSSxzQkFBbkIsQ0FBUjtBQUEyQ0YsUUFBQUEsT0FBM0MsbUJBQW1EQyxRQUFuRCxFQUE2RDtBQUFFLGlCQUFPQSxRQUFRLENBQUNQLFdBQWhCO0FBQThCO0FBQTdGO0FBSGQsS0FBUDtBQUtDO0FBUGtDLENBQXRCLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1ncmFwaHFsL2dyYXBocWwtdHlwZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTFN0cmluZywgR3JhcGhRTE5vbk51bGwgfSBmcm9tICdncmFwaHFsJztcblxuY29uc3QgQ2F0ZWdvcnkgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoeyBuYW1lOiAnQ2F0ZWdvcnlUeXBlJywgZGVzY3JpcHRpb246ICdBIENhdGVnb3J5IEdyYXBoUUwgcmVwcmVzZW50YXRpb24uJyxcbiAgICBmaWVsZHM6ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpLCByZXNvbHZlKGNhdGVnb3J5KSB7IHJldHVybiBjYXRlZ29yeS5pZDsgfSB9LFxuICAgICAgICAgICAgbmFtZTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUoY2F0ZWdvcnkpIHsgcmV0dXJuIGNhdGVnb3J5Lm5hbWU7IH0gfSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShjYXRlZ29yeSkgeyByZXR1cm4gY2F0ZWdvcnkuZGVzY3JpcHRpb247IH0gfVxuICAgICAgICB9XG4gICAgfVxufSk7XG5cbmV4cG9ydCB7IENhdGVnb3J5IGFzIENhdGVnb3J5VHlwZSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "category-type.js"
      ],
      "names": [
        "Category",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "category",
        "GraphQLString"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,oCAArC;AACnCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,QAAhD,EAA0D;AAAE,iBAAOA,QAAQ,CAACL,EAAhB;AAAqB;AAAjF,OADL;AAECH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,QAAnD,EAA6D;AAAE,iBAAOA,QAAQ,CAACR,IAAhB;AAAuB;AAAtF,OAFP;AAGCC,MAAAA,WAAW,EAAE;AAAEG,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,QAAnD,EAA6D;AAAE,iBAAOA,QAAQ,CAACP,WAAhB;AAA8B;AAA7F;AAHd,KAAP;AAKC;AAPkC,CAAtB,CAAjB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLNonNull } from 'graphql';\n\nconst Category = new GraphQLObjectType({ name: 'CategoryType', description: 'A Category GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(category) { return category.id; } },\n            name: { type: new GraphQLNonNull(GraphQLString), resolve(category) { return category.name; } },\n            description: { type: new GraphQLNonNull(GraphQLString), resolve(category) { return category.description; } }\n        }\n    }\n});\n\nexport { Category as CategoryType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876904
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/perfume-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/perfume-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/perfume-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/perfume-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "perfume-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PerfumeType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Perfume = new _graphql.GraphQLObjectType({\n  name: 'PerfumeType',\n  description: 'A Perfume GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(perfume) {\n          return perfume.id;\n        }\n      },\n      name: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(perfume) {\n          return perfume.name;\n        }\n      },\n      description: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(perfume) {\n          return perfume.description;\n        }\n      }\n    };\n  }\n});\nexports.PerfumeType = Perfume;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcmZ1bWUtdHlwZS5qcyJdLCJuYW1lcyI6WyJQZXJmdW1lIiwiR3JhcGhRTE9iamVjdFR5cGUiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJmaWVsZHMiLCJpZCIsInR5cGUiLCJHcmFwaFFMTm9uTnVsbCIsIkdyYXBoUUxJbnQiLCJyZXNvbHZlIiwicGVyZnVtZSIsIkdyYXBoUUxTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFBRUMsRUFBQUEsSUFBSSxFQUFFLGFBQVI7QUFBdUJDLEVBQUFBLFdBQVcsRUFBRSxtQ0FBcEM7QUFDbENDLEVBQUFBLE1BQU0sRUFBRSxrQkFBTTtBQUNkLFdBQU87QUFDQ0MsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkMsbUJBQW5CLENBQVI7QUFBd0NDLFFBQUFBLE9BQXhDLG1CQUFnREMsT0FBaEQsRUFBeUQ7QUFBRSxpQkFBT0EsT0FBTyxDQUFDTCxFQUFmO0FBQW9CO0FBQS9FLE9BREw7QUFFQ0gsTUFBQUEsSUFBSSxFQUFFO0FBQUVJLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkksc0JBQW5CLENBQVI7QUFBMkNGLFFBQUFBLE9BQTNDLG1CQUFtREMsT0FBbkQsRUFBNEQ7QUFBRSxpQkFBT0EsT0FBTyxDQUFDUixJQUFmO0FBQXNCO0FBQXBGLE9BRlA7QUFHQ0MsTUFBQUEsV0FBVyxFQUFFO0FBQUVHLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkksc0JBQW5CLENBQVI7QUFBMkNGLFFBQUFBLE9BQTNDLG1CQUFtREMsT0FBbkQsRUFBNEQ7QUFBRSxpQkFBT0EsT0FBTyxDQUFDUCxXQUFmO0FBQTZCO0FBQTNGO0FBSGQsS0FBUDtBQUtDO0FBUGlDLENBQXRCLENBQWhCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1ncmFwaHFsL2dyYXBocWwtdHlwZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTFN0cmluZywgR3JhcGhRTE5vbk51bGwgfSBmcm9tICdncmFwaHFsJztcblxuY29uc3QgUGVyZnVtZSA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7IG5hbWU6ICdQZXJmdW1lVHlwZScsIGRlc2NyaXB0aW9uOiAnQSBQZXJmdW1lIEdyYXBoUUwgcmVwcmVzZW50YXRpb24uJyxcbiAgICBmaWVsZHM6ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpLCByZXNvbHZlKHBlcmZ1bWUpIHsgcmV0dXJuIHBlcmZ1bWUuaWQ7IH0gfSxcbiAgICAgICAgICAgIG5hbWU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcmZ1bWUpIHsgcmV0dXJuIHBlcmZ1bWUubmFtZTsgfSB9LFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcmZ1bWUpIHsgcmV0dXJuIHBlcmZ1bWUuZGVzY3JpcHRpb247IH0gfVxuICAgICAgICB9XG4gICAgfVxufSk7XG5cbmV4cG9ydCB7IFBlcmZ1bWUgYXMgUGVyZnVtZVR5cGUgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "perfume-type.js"
      ],
      "names": [
        "Perfume",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "perfume",
        "GraphQLString"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,OAAO,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,WAAW,EAAE,mCAApC;AAClCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,OAAhD,EAAyD;AAAE,iBAAOA,OAAO,CAACL,EAAf;AAAoB;AAA/E,OADL;AAECH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,OAAnD,EAA4D;AAAE,iBAAOA,OAAO,CAACR,IAAf;AAAsB;AAApF,OAFP;AAGCC,MAAAA,WAAW,EAAE;AAAEG,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,OAAnD,EAA4D;AAAE,iBAAOA,OAAO,CAACP,WAAf;AAA6B;AAA3F;AAHd,KAAP;AAKC;AAPiC,CAAtB,CAAhB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLNonNull } from 'graphql';\n\nconst Perfume = new GraphQLObjectType({ name: 'PerfumeType', description: 'A Perfume GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(perfume) { return perfume.id; } },\n            name: { type: new GraphQLNonNull(GraphQLString), resolve(perfume) { return perfume.name; } },\n            description: { type: new GraphQLNonNull(GraphQLString), resolve(perfume) { return perfume.description; } }\n        }\n    }\n});\n\nexport { Perfume as PerfumeType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/weight-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/weight-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/weight-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/weight-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "weight-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeightType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Weight = new _graphql.GraphQLObjectType({\n  name: 'WeightType',\n  description: 'A Weight GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(weight) {\n          return weight.id;\n        }\n      },\n      name: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(weight) {\n          return weight.name;\n        }\n      },\n      value: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(weight) {\n          return weight.value;\n        }\n      }\n    };\n  }\n});\nexports.WeightType = Weight;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlaWdodC10eXBlLmpzIl0sIm5hbWVzIjpbIldlaWdodCIsIkdyYXBoUUxPYmplY3RUeXBlIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZmllbGRzIiwiaWQiLCJ0eXBlIiwiR3JhcGhRTE5vbk51bGwiLCJHcmFwaFFMSW50IiwicmVzb2x2ZSIsIndlaWdodCIsIkdyYXBoUUxTdHJpbmciLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQywwQkFBSixDQUFzQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsWUFBUjtBQUFzQkMsRUFBQUEsV0FBVyxFQUFFLGtDQUFuQztBQUNqQ0MsRUFBQUEsTUFBTSxFQUFFLGtCQUFNO0FBQ2QsV0FBTztBQUNDQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CQyxtQkFBbkIsQ0FBUjtBQUF3Q0MsUUFBQUEsT0FBeEMsbUJBQWdEQyxNQUFoRCxFQUF3RDtBQUFFLGlCQUFPQSxNQUFNLENBQUNMLEVBQWQ7QUFBbUI7QUFBN0UsT0FETDtBQUVDSCxNQUFBQSxJQUFJLEVBQUU7QUFBRUksUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSSxzQkFBbkIsQ0FBUjtBQUEyQ0YsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNSLElBQWQ7QUFBcUI7QUFBbEYsT0FGUDtBQUdDVSxNQUFBQSxLQUFLLEVBQUU7QUFBRU4sUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CQyxtQkFBbkIsQ0FBUjtBQUF3Q0MsUUFBQUEsT0FBeEMsbUJBQWdEQyxNQUFoRCxFQUF3RDtBQUFFLGlCQUFPQSxNQUFNLENBQUNFLEtBQWQ7QUFBc0I7QUFBaEY7QUFIUixLQUFQO0FBS0M7QUFQZ0MsQ0FBdEIsQ0FBZiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLXR5cGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnQsIEdyYXBoUUxTdHJpbmcsIEdyYXBoUUxOb25OdWxsIH0gZnJvbSAnZ3JhcGhxbCc7XG5cbmNvbnN0IFdlaWdodCA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7IG5hbWU6ICdXZWlnaHRUeXBlJywgZGVzY3JpcHRpb246ICdBIFdlaWdodCBHcmFwaFFMIHJlcHJlc2VudGF0aW9uLicsXG4gICAgZmllbGRzOiAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMSW50KSwgcmVzb2x2ZSh3ZWlnaHQpIHsgcmV0dXJuIHdlaWdodC5pZDsgfSB9LFxuICAgICAgICAgICAgbmFtZTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUod2VpZ2h0KSB7IHJldHVybiB3ZWlnaHQubmFtZTsgfSB9LFxuICAgICAgICAgICAgdmFsdWU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpLCByZXNvbHZlKHdlaWdodCkgeyByZXR1cm4gd2VpZ2h0LnZhbHVlOyB9IH1cbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG5leHBvcnQgeyBXZWlnaHQgYXMgV2VpZ2h0VHlwZSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "weight-type.js"
      ],
      "names": [
        "Weight",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "weight",
        "GraphQLString",
        "value"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,WAAW,EAAE,kCAAnC;AACjCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACL,EAAd;AAAmB;AAA7E,OADL;AAECH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACR,IAAd;AAAqB;AAAlF,OAFP;AAGCU,MAAAA,KAAK,EAAE;AAAEN,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACE,KAAd;AAAsB;AAAhF;AAHR,KAAP;AAKC;AAPgC,CAAtB,CAAf",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLNonNull } from 'graphql';\n\nconst Weight = new GraphQLObjectType({ name: 'WeightType', description: 'A Weight GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(weight) { return weight.id; } },\n            name: { type: new GraphQLNonNull(GraphQLString), resolve(weight) { return weight.name; } },\n            value: { type: new GraphQLNonNull(GraphQLInt), resolve(weight) { return weight.value; } }\n        }\n    }\n});\n\nexport { Weight as WeightType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/product-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/product-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/product-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/product-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "product-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProductType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Product = new _graphql.GraphQLObjectType({\n  name: 'ProductType',\n  description: 'A Product GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(person) {\n          return person.id;\n        }\n      },\n      title: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.title;\n        }\n      },\n      description_title: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.description_title;\n        }\n      },\n      description: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.description;\n        }\n      },\n      details: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.details;\n        }\n      },\n      provider: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.provider;\n        }\n      },\n      quantity: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(person) {\n          return person.quantity;\n        }\n      },\n      image: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.image;\n        }\n      }\n    };\n  }\n});\nexports.ProductType = Product;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtdHlwZS5qcyJdLCJuYW1lcyI6WyJQcm9kdWN0IiwiR3JhcGhRTE9iamVjdFR5cGUiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJmaWVsZHMiLCJpZCIsInR5cGUiLCJHcmFwaFFMTm9uTnVsbCIsIkdyYXBoUUxJbnQiLCJyZXNvbHZlIiwicGVyc29uIiwidGl0bGUiLCJHcmFwaFFMU3RyaW5nIiwiZGVzY3JpcHRpb25fdGl0bGUiLCJkZXRhaWxzIiwicHJvdmlkZXIiLCJxdWFudGl0eSIsImltYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLElBQUlDLDBCQUFKLENBQXNCO0FBQUVDLEVBQUFBLElBQUksRUFBRSxhQUFSO0FBQXVCQyxFQUFBQSxXQUFXLEVBQUUsbUNBQXBDO0FBQ2xDQyxFQUFBQSxNQUFNLEVBQUUsa0JBQU07QUFDZCxXQUFPO0FBQ0NDLE1BQUFBLEVBQUUsRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJDLG1CQUFuQixDQUFSO0FBQXdDQyxRQUFBQSxPQUF4QyxtQkFBZ0RDLE1BQWhELEVBQXdEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0wsRUFBZDtBQUFtQjtBQUE3RSxPQURMO0FBRUNNLE1BQUFBLEtBQUssRUFBRTtBQUFFTCxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0MsS0FBZDtBQUFzQjtBQUFuRixPQUZSO0FBRWdHRSxNQUFBQSxpQkFBaUIsRUFBRTtBQUFHUCxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFUO0FBQTRDSCxRQUFBQSxPQUE1QyxtQkFBb0RDLE1BQXBELEVBQTREO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0csaUJBQWQ7QUFBa0M7QUFBaEcsT0FGbkg7QUFHQ1YsTUFBQUEsV0FBVyxFQUFFO0FBQUVHLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkssc0JBQW5CLENBQVI7QUFBMkNILFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDUCxXQUFkO0FBQTRCO0FBQXpGLE9BSGQ7QUFHMkdXLE1BQUFBLE9BQU8sRUFBRTtBQUFFUixRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0ksT0FBZDtBQUF3QjtBQUFyRixPQUhwSDtBQUlDQyxNQUFBQSxRQUFRLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CSyxzQkFBbkIsQ0FBUjtBQUEyQ0gsUUFBQUEsT0FBM0MsbUJBQW1EQyxNQUFuRCxFQUEyRDtBQUFFLGlCQUFPQSxNQUFNLENBQUNLLFFBQWQ7QUFBeUI7QUFBdEYsT0FKWDtBQUlxR0MsTUFBQUEsUUFBUSxFQUFFO0FBQUVWLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkMsbUJBQW5CLENBQVI7QUFBd0NDLFFBQUFBLE9BQXhDLG1CQUFnREMsTUFBaEQsRUFBd0Q7QUFBRSxpQkFBT0EsTUFBTSxDQUFDTSxRQUFkO0FBQXlCO0FBQW5GLE9BSi9HO0FBS0NDLE1BQUFBLEtBQUssRUFBRTtBQUFFWCxRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJLLHNCQUFuQixDQUFSO0FBQTJDSCxRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ08sS0FBZDtBQUFzQjtBQUFuRjtBQUxSLEtBQVA7QUFPQztBQVRpQyxDQUF0QixDQUFoQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLXR5cGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnQsIEdyYXBoUUxTdHJpbmcsIEdyYXBoUUxOb25OdWxsIH0gZnJvbSAnZ3JhcGhxbCc7XG5cbmNvbnN0IFByb2R1Y3QgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoeyBuYW1lOiAnUHJvZHVjdFR5cGUnLCBkZXNjcmlwdGlvbjogJ0EgUHJvZHVjdCBHcmFwaFFMIHJlcHJlc2VudGF0aW9uLicsXG4gICAgZmllbGRzOiAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMSW50KSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5pZDsgfSB9LFxuICAgICAgICAgICAgdGl0bGU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLnRpdGxlOyB9IH0sICBkZXNjcmlwdGlvbl90aXRsZTogeyAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLmRlc2NyaXB0aW9uX3RpdGxlOyB9IH0sXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uZGVzY3JpcHRpb247IH0gfSwgZGV0YWlsczogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uZGV0YWlsczsgfSB9LCBcbiAgICAgICAgICAgIHByb3ZpZGVyOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5wcm92aWRlcjsgfSB9LCBxdWFudGl0eTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEludCksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24ucXVhbnRpdHk7IH0gfSxcbiAgICAgICAgICAgIGltYWdlOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSwgcmVzb2x2ZShwZXJzb24pIHsgcmV0dXJuIHBlcnNvbi5pbWFnZTsgfSB9XG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuZXhwb3J0IHsgUHJvZHVjdCBhcyBQcm9kdWN0VHlwZSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "product-type.js"
      ],
      "names": [
        "Product",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "person",
        "title",
        "GraphQLString",
        "description_title",
        "details",
        "provider",
        "quantity",
        "image"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,OAAO,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,WAAW,EAAE,mCAApC;AAClCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACL,EAAd;AAAmB;AAA7E,OADL;AAECM,MAAAA,KAAK,EAAE;AAAEL,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACC,KAAd;AAAsB;AAAnF,OAFR;AAEgGE,MAAAA,iBAAiB,EAAE;AAAGP,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAT;AAA4CH,QAAAA,OAA5C,mBAAoDC,MAApD,EAA4D;AAAE,iBAAOA,MAAM,CAACG,iBAAd;AAAkC;AAAhG,OAFnH;AAGCV,MAAAA,WAAW,EAAE;AAAEG,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACP,WAAd;AAA4B;AAAzF,OAHd;AAG2GW,MAAAA,OAAO,EAAE;AAAER,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACI,OAAd;AAAwB;AAArF,OAHpH;AAICC,MAAAA,QAAQ,EAAE;AAAET,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACK,QAAd;AAAyB;AAAtF,OAJX;AAIqGC,MAAAA,QAAQ,EAAE;AAAEV,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACM,QAAd;AAAyB;AAAnF,OAJ/G;AAKCC,MAAAA,KAAK,EAAE;AAAEX,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBK,sBAAnB,CAAR;AAA2CH,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACO,KAAd;AAAsB;AAAnF;AALR,KAAP;AAOC;AATiC,CAAtB,CAAhB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLNonNull } from 'graphql';\n\nconst Product = new GraphQLObjectType({ name: 'ProductType', description: 'A Product GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(person) { return person.id; } },\n            title: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.title; } },  description_title: {  type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.description_title; } },\n            description: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.description; } }, details: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.details; } }, \n            provider: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.provider; } }, quantity: { type: new GraphQLNonNull(GraphQLInt), resolve(person) { return person.quantity; } },\n            image: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.image; } }\n        }\n    }\n});\n\nexport { Product as ProductType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/slideshow-type.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/slideshow-type.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/slideshow-type.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types/slideshow-type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
        "sourceFileName": "slideshow-type.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SlideshowType = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar Slideshow = new _graphql.GraphQLObjectType({\n  name: 'Slideshowype',\n  description: 'A Slideshow GraphQL representation.',\n  fields: function fields() {\n    return {\n      id: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt),\n        resolve: function resolve(person) {\n          return person.id;\n        }\n      },\n      name: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.name;\n        }\n      },\n      image: {\n        type: new _graphql.GraphQLNonNull(_graphql.GraphQLString),\n        resolve: function resolve(person) {\n          return person.image;\n        }\n      }\n    };\n  }\n});\nexports.SlideshowType = Slideshow;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlc2hvdy10eXBlLmpzIl0sIm5hbWVzIjpbIlNsaWRlc2hvdyIsIkdyYXBoUUxPYmplY3RUeXBlIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZmllbGRzIiwiaWQiLCJ0eXBlIiwiR3JhcGhRTE5vbk51bGwiLCJHcmFwaFFMSW50IiwicmVzb2x2ZSIsInBlcnNvbiIsIkdyYXBoUUxTdHJpbmciLCJpbWFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLFNBQVMsR0FBRyxJQUFJQywwQkFBSixDQUFzQjtBQUFFQyxFQUFBQSxJQUFJLEVBQUUsY0FBUjtBQUF3QkMsRUFBQUEsV0FBVyxFQUFFLHFDQUFyQztBQUNwQ0MsRUFBQUEsTUFBTSxFQUFFLGtCQUFNO0FBQ2QsV0FBTztBQUNDQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFLElBQUlDLHVCQUFKLENBQW1CQyxtQkFBbkIsQ0FBUjtBQUF3Q0MsUUFBQUEsT0FBeEMsbUJBQWdEQyxNQUFoRCxFQUF3RDtBQUFFLGlCQUFPQSxNQUFNLENBQUNMLEVBQWQ7QUFBbUI7QUFBN0UsT0FETDtBQUNzRkgsTUFBQUEsSUFBSSxFQUFFO0FBQUVJLFFBQUFBLElBQUksRUFBRSxJQUFJQyx1QkFBSixDQUFtQkksc0JBQW5CLENBQVI7QUFBMkNGLFFBQUFBLE9BQTNDLG1CQUFtREMsTUFBbkQsRUFBMkQ7QUFBRSxpQkFBT0EsTUFBTSxDQUFDUixJQUFkO0FBQXFCO0FBQWxGLE9BRDVGO0FBRUNVLE1BQUFBLEtBQUssRUFBRTtBQUFFTixRQUFBQSxJQUFJLEVBQUUsSUFBSUMsdUJBQUosQ0FBbUJJLHNCQUFuQixDQUFSO0FBQTJDRixRQUFBQSxPQUEzQyxtQkFBbURDLE1BQW5ELEVBQTJEO0FBQUUsaUJBQU9BLE1BQU0sQ0FBQ0UsS0FBZDtBQUFzQjtBQUFuRjtBQUZSLEtBQVA7QUFJQztBQU5tQyxDQUF0QixDQUFsQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLXR5cGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnQsIEdyYXBoUUxTdHJpbmcsIEdyYXBoUUxOb25OdWxsIH0gZnJvbSAnZ3JhcGhxbCc7XG5cbmNvbnN0IFNsaWRlc2hvdyA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7IG5hbWU6ICdTbGlkZXNob3d5cGUnLCBkZXNjcmlwdGlvbjogJ0EgU2xpZGVzaG93IEdyYXBoUUwgcmVwcmVzZW50YXRpb24uJyxcbiAgICBmaWVsZHM6ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLmlkOyB9IH0sIG5hbWU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpLCByZXNvbHZlKHBlcnNvbikgeyByZXR1cm4gcGVyc29uLm5hbWU7IH0gfSwgICAgICAgXG4gICAgICAgICAgICBpbWFnZTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZyksIHJlc29sdmUocGVyc29uKSB7IHJldHVybiBwZXJzb24uaW1hZ2U7IH0gfSxcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG5leHBvcnQgeyBTbGlkZXNob3cgYXMgU2xpZGVzaG93VHlwZSB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "slideshow-type.js"
      ],
      "names": [
        "Slideshow",
        "GraphQLObjectType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "GraphQLNonNull",
        "GraphQLInt",
        "resolve",
        "person",
        "GraphQLString",
        "image"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,qCAArC;AACpCC,EAAAA,MAAM,EAAE,kBAAM;AACd,WAAO;AACCC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,mBAAnB,CAAR;AAAwCC,QAAAA,OAAxC,mBAAgDC,MAAhD,EAAwD;AAAE,iBAAOA,MAAM,CAACL,EAAd;AAAmB;AAA7E,OADL;AACsFH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACR,IAAd;AAAqB;AAAlF,OAD5F;AAECU,MAAAA,KAAK,EAAE;AAAEN,QAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBI,sBAAnB,CAAR;AAA2CF,QAAAA,OAA3C,mBAAmDC,MAAnD,EAA2D;AAAE,iBAAOA,MAAM,CAACE,KAAd;AAAsB;AAAnF;AAFR,KAAP;AAIC;AANmC,CAAtB,CAAlB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-types",
      "sourcesContent": [
        "import { GraphQLObjectType, GraphQLInt, GraphQLString, GraphQLNonNull } from 'graphql';\n\nconst Slideshow = new GraphQLObjectType({ name: 'Slideshowype', description: 'A Slideshow GraphQL representation.',\n    fields: () => {\n    return {\n            id: { type: new GraphQLNonNull(GraphQLInt), resolve(person) { return person.id; } }, name: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.name; } },       \n            image: { type: new GraphQLNonNull(GraphQLString), resolve(person) { return person.image; } },\n        }\n    }\n});\n\nexport { Slideshow as SlideshowType };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876905
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/person-mutation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/person-mutation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/person-mutation.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/person-mutation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
        "sourceFileName": "person-mutation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PersonMutation = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _personType = require(\"../graphql-types/person-type\");\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nvar _musclefeedConfiguration = require(\"../../musclefeed-configuration\");\n\nvar _authenticationFunction = require(\"../../musclefeed-controllers/account-functions/authentication-function\");\n\nvar PersonMutation = new _graphql.GraphQLObjectType({\n  name: 'PersonMutation',\n  fields: {\n    makeGuestAccount: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        password: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        firstname: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        lastname: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        phone: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        civility: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _authenticationFunction.registerGuest)(source, args, context, info);\n      }\n    },\n    retrieveGuestAccount: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        password: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _authenticationFunction.authenticateGuest)(source, args, context, info);\n      }\n    },\n    retrieveAdminAccount: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        password: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _authenticationFunction.authenticateAdmin)(source, args, context, info);\n      }\n    },\n    deleteGuestAccountByEmail: {\n      type: _personType.PersonType,\n      args: {\n        email: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.personModel.destroy({\n          where: {\n            email: args.email\n          }\n        });\n      }\n    },\n    deleteGuestAccountByID: {\n      type: _personType.PersonType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.personModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    }\n  }\n});\nexports.PersonMutation = PersonMutation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbi1tdXRhdGlvbi5qcyJdLCJuYW1lcyI6WyJQZXJzb25NdXRhdGlvbiIsIkdyYXBoUUxPYmplY3RUeXBlIiwibmFtZSIsImZpZWxkcyIsIm1ha2VHdWVzdEFjY291bnQiLCJ0eXBlIiwiUGVyc29uVHlwZSIsImFyZ3MiLCJlbWFpbCIsIkdyYXBoUUxOb25OdWxsIiwiR3JhcGhRTFN0cmluZyIsInBhc3N3b3JkIiwiZmlyc3RuYW1lIiwibGFzdG5hbWUiLCJwaG9uZSIsImNpdmlsaXR5IiwicmVzb2x2ZSIsInNvdXJjZSIsImNvbnRleHQiLCJpbmZvIiwicmV0cmlldmVHdWVzdEFjY291bnQiLCJyZXRyaWV2ZUFkbWluQWNjb3VudCIsImRlbGV0ZUd1ZXN0QWNjb3VudEJ5RW1haWwiLCJwZXJzb25Nb2RlbCIsImRlc3Ryb3kiLCJ3aGVyZSIsImRlbGV0ZUd1ZXN0QWNjb3VudEJ5SUQiLCJpZCIsIkdyYXBoUUxJbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFHQSxJQUFNQSxjQUFjLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFBRUMsRUFBQUEsSUFBSSxFQUFFLGdCQUFSO0FBQzVDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFBRUMsTUFBQUEsSUFBSSxFQUFFQyxzQkFBUjtBQUFvQkMsTUFBQUEsSUFBSSxFQUFFO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFFSCxVQUFBQSxJQUFJLEVBQUUsSUFBSUksdUJBQUosQ0FBbUJDLHNCQUFuQjtBQUFSLFNBQVQ7QUFBc0RDLFFBQUFBLFFBQVEsRUFBRTtBQUFFTixVQUFBQSxJQUFJLEVBQUUsSUFBSUksdUJBQUosQ0FBbUJDLHNCQUFuQjtBQUFSLFNBQWhFO0FBQTZHRSxRQUFBQSxTQUFTLEVBQUU7QUFBRVAsVUFBQUEsSUFBSSxFQUFFLElBQUlJLHVCQUFKLENBQW1CQyxzQkFBbkI7QUFBUixTQUF4SDtBQUFxS0csUUFBQUEsUUFBUSxFQUFFO0FBQUVSLFVBQUFBLElBQUksRUFBRSxJQUFJSSx1QkFBSixDQUFtQkMsc0JBQW5CO0FBQVIsU0FBL0s7QUFBNE5JLFFBQUFBLEtBQUssRUFBRTtBQUFFVCxVQUFBQSxJQUFJLEVBQUUsSUFBSUksdUJBQUosQ0FBbUJDLHNCQUFuQjtBQUFSLFNBQW5PO0FBQWdSSyxRQUFBQSxRQUFRLEVBQUU7QUFBRVYsVUFBQUEsSUFBSSxFQUFFLElBQUlJLHVCQUFKLENBQW1CQyxzQkFBbkI7QUFBUjtBQUExUixPQUExQjtBQUFtV00sTUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxNQUFELEVBQVNWLElBQVQsRUFBZVcsT0FBZixFQUF3QkMsSUFBeEIsRUFBaUM7QUFBRSxlQUFPLDJDQUFjRixNQUFkLEVBQXNCVixJQUF0QixFQUE0QlcsT0FBNUIsRUFBcUNDLElBQXJDLENBQVA7QUFBb0Q7QUFBbmMsS0FEZDtBQUVKQyxJQUFBQSxvQkFBb0IsRUFBRTtBQUFFZixNQUFBQSxJQUFJLEVBQUVDLHNCQUFSO0FBQW9CQyxNQUFBQSxJQUFJLEVBQUU7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQUVILFVBQUFBLElBQUksRUFBRSxJQUFJSSx1QkFBSixDQUFtQkMsc0JBQW5CO0FBQVIsU0FBVDtBQUFzREMsUUFBQUEsUUFBUSxFQUFFO0FBQUVOLFVBQUFBLElBQUksRUFBRSxJQUFJSSx1QkFBSixDQUFtQkMsc0JBQW5CO0FBQVI7QUFBaEUsT0FBMUI7QUFBeUlNLE1BQUFBLE9BQXpJLG1CQUFpSkMsTUFBakosRUFBeUpWLElBQXpKLEVBQStKVyxPQUEvSixFQUF3S0MsSUFBeEssRUFBOEs7QUFBRSxlQUFPLCtDQUFrQkYsTUFBbEIsRUFBMEJWLElBQTFCLEVBQWdDVyxPQUFoQyxFQUF5Q0MsSUFBekMsQ0FBUDtBQUF3RDtBQUF4TyxLQUZsQjtBQUdKRSxJQUFBQSxvQkFBb0IsRUFBRTtBQUFFaEIsTUFBQUEsSUFBSSxFQUFFQyxzQkFBUjtBQUFvQkMsTUFBQUEsSUFBSSxFQUFFO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFFSCxVQUFBQSxJQUFJLEVBQUUsSUFBSUksdUJBQUosQ0FBbUJDLHNCQUFuQjtBQUFSLFNBQVQ7QUFBc0RDLFFBQUFBLFFBQVEsRUFBRTtBQUFFTixVQUFBQSxJQUFJLEVBQUUsSUFBSUksdUJBQUosQ0FBbUJDLHNCQUFuQjtBQUFSO0FBQWhFLE9BQTFCO0FBQXlJTSxNQUFBQSxPQUF6SSxtQkFBaUpDLE1BQWpKLEVBQXlKVixJQUF6SixFQUErSlcsT0FBL0osRUFBd0tDLElBQXhLLEVBQThLO0FBQUUsZUFBTywrQ0FBa0JGLE1BQWxCLEVBQTBCVixJQUExQixFQUFnQ1csT0FBaEMsRUFBeUNDLElBQXpDLENBQVA7QUFBd0Q7QUFBeE8sS0FIbEI7QUFLSkcsSUFBQUEseUJBQXlCLEVBQUU7QUFBRWpCLE1BQUFBLElBQUksRUFBRUMsc0JBQVI7QUFBb0JDLE1BQUFBLElBQUksRUFBRTtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBRUgsVUFBQUEsSUFBSSxFQUFFLElBQUlJLHVCQUFKLENBQW1CQyxzQkFBbkI7QUFBUjtBQUFULE9BQTFCO0FBQWtGTSxNQUFBQSxPQUFPLEVBQUUsaUJBQUNDLE1BQUQsRUFBU1YsSUFBVCxFQUFlVyxPQUFmLEVBQXdCQyxJQUF4QixFQUFpQztBQUFFSSw4QkFBWUMsT0FBWixDQUFvQjtBQUFFQyxVQUFBQSxLQUFLLEVBQUU7QUFBRWpCLFlBQUFBLEtBQUssRUFBRUQsSUFBSSxDQUFDQztBQUFkO0FBQVQsU0FBcEI7QUFBd0Q7QUFBdEwsS0FMdkI7QUFNSmtCLElBQUFBLHNCQUFzQixFQUFFO0FBQUVyQixNQUFBQSxJQUFJLEVBQUVDLHNCQUFSO0FBQW9CQyxNQUFBQSxJQUFJLEVBQUU7QUFBRW9CLFFBQUFBLEVBQUUsRUFBRTtBQUFFdEIsVUFBQUEsSUFBSSxFQUFFLElBQUlJLHVCQUFKLENBQW1CbUIsbUJBQW5CO0FBQVI7QUFBTixPQUExQjtBQUE0RVosTUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxNQUFELEVBQVNWLElBQVQsRUFBZVcsT0FBZixFQUF3QkMsSUFBeEIsRUFBaUM7QUFBRUksOEJBQVlDLE9BQVosQ0FBb0I7QUFBRUMsVUFBQUEsS0FBSyxFQUFFO0FBQUVFLFlBQUFBLEVBQUUsRUFBRXBCLElBQUksQ0FBQ29CO0FBQVg7QUFBVCxTQUFwQjtBQUFrRDtBQUExSztBQU5wQjtBQURvQyxDQUF0QixDQUF2QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlL211c2NsZWZlZWQtZ3JhcGhxbC9ncmFwaHFsLW11dGF0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxTdHJpbmcsIEdyYXBoUUxOb25OdWxsLCBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTEludCB9IGZyb20gJ2dyYXBocWwnO1xuXG5pbXBvcnQgeyBQZXJzb25UeXBlIH0gZnJvbSAnLi4vZ3JhcGhxbC10eXBlcy9wZXJzb24tdHlwZSc7XG5pbXBvcnQgeyBwZXJzb25Nb2RlbCB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcbmltcG9ydCB7IGJjcnlwdCwgc2FsdFN5bmMgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLWNvbmZpZ3VyYXRpb24nO1xuXG5pbXBvcnQgeyBhdXRoZW50aWNhdGVBZG1pbiB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtY29udHJvbGxlcnMvYWNjb3VudC1mdW5jdGlvbnMvYXV0aGVudGljYXRpb24tZnVuY3Rpb24nO1xuaW1wb3J0IHsgYXV0aGVudGljYXRlR3Vlc3QsIHJlZ2lzdGVyR3Vlc3QgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLWNvbnRyb2xsZXJzL2FjY291bnQtZnVuY3Rpb25zL2F1dGhlbnRpY2F0aW9uLWZ1bmN0aW9uJztcblxuY29uc3QgUGVyc29uTXV0YXRpb24gPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoeyBuYW1lOiAnUGVyc29uTXV0YXRpb24nLFxuIGZpZWxkczoge1xuICAgICBtYWtlR3Vlc3RBY2NvdW50OiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0sIHBhc3N3b3JkOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSB9LCBmaXJzdG5hbWU6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0sIGxhc3RuYW1lOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSB9LCBwaG9uZTogeyB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTFN0cmluZykgfSwgY2l2aWxpdHk6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0gfSwgcmVzb2x2ZTogKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgPT4geyByZXR1cm4gcmVnaXN0ZXJHdWVzdChzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pOyB9IH0sXG4gICAgIHJldHJpZXZlR3Vlc3RBY2NvdW50OiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0sIHBhc3N3b3JkOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSB9IH0sIHJlc29sdmUoc291cmNlLCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7IHJldHVybiBhdXRoZW50aWNhdGVHdWVzdChzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pOyB9IH0sXG4gICAgIHJldHJpZXZlQWRtaW5BY2NvdW50OiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0sIHBhc3N3b3JkOiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSB9IH0sIHJlc29sdmUoc291cmNlLCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7IHJldHVybiBhdXRoZW50aWNhdGVBZG1pbihzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pOyB9IH0sXG4gICAgIFxuICAgICBkZWxldGVHdWVzdEFjY291bnRCeUVtYWlsOiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgZW1haWw6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0gfSwgcmVzb2x2ZTogKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgPT4geyBwZXJzb25Nb2RlbC5kZXN0cm95KHsgd2hlcmU6IHsgZW1haWw6IGFyZ3MuZW1haWwgfSB9KTsgfSB9LFxuICAgICBkZWxldGVHdWVzdEFjY291bnRCeUlEOiB7IHR5cGU6IFBlcnNvblR5cGUsIGFyZ3M6IHsgaWQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpIH0gfSwgcmVzb2x2ZTogKHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykgPT4geyBwZXJzb25Nb2RlbC5kZXN0cm95KHsgd2hlcmU6IHsgaWQ6IGFyZ3MuaWQgfSB9KTsgfSB9LFxuIH1cbn0pO1xuXG5leHBvcnQgeyBQZXJzb25NdXRhdGlvbiB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "person-mutation.js"
      ],
      "names": [
        "PersonMutation",
        "GraphQLObjectType",
        "name",
        "fields",
        "makeGuestAccount",
        "type",
        "PersonType",
        "args",
        "email",
        "GraphQLNonNull",
        "GraphQLString",
        "password",
        "firstname",
        "lastname",
        "phone",
        "civility",
        "resolve",
        "source",
        "context",
        "info",
        "retrieveGuestAccount",
        "retrieveAdminAccount",
        "deleteGuestAccountByEmail",
        "personModel",
        "destroy",
        "where",
        "deleteGuestAccountByID",
        "id",
        "GraphQLInt"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AAGA,IAAMA,cAAc,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,gBAAR;AAC5CC,EAAAA,MAAM,EAAE;AACJC,IAAAA,gBAAgB,EAAE;AAAEC,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAT;AAAsDC,QAAAA,QAAQ,EAAE;AAAEN,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAhE;AAA6GE,QAAAA,SAAS,EAAE;AAAEP,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAxH;AAAqKG,QAAAA,QAAQ,EAAE;AAAER,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAA/K;AAA4NI,QAAAA,KAAK,EAAE;AAAET,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAnO;AAAgRK,QAAAA,QAAQ,EAAE;AAAEV,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR;AAA1R,OAA1B;AAAmWM,MAAAA,OAAO,EAAE,iBAACC,MAAD,EAASV,IAAT,EAAeW,OAAf,EAAwBC,IAAxB,EAAiC;AAAE,eAAO,2CAAcF,MAAd,EAAsBV,IAAtB,EAA4BW,OAA5B,EAAqCC,IAArC,CAAP;AAAoD;AAAnc,KADd;AAEJC,IAAAA,oBAAoB,EAAE;AAAEf,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAT;AAAsDC,QAAAA,QAAQ,EAAE;AAAEN,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAhE,OAA1B;AAAyIM,MAAAA,OAAzI,mBAAiJC,MAAjJ,EAAyJV,IAAzJ,EAA+JW,OAA/J,EAAwKC,IAAxK,EAA8K;AAAE,eAAO,+CAAkBF,MAAlB,EAA0BV,IAA1B,EAAgCW,OAAhC,EAAyCC,IAAzC,CAAP;AAAwD;AAAxO,KAFlB;AAGJE,IAAAA,oBAAoB,EAAE;AAAEhB,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAT;AAAsDC,QAAAA,QAAQ,EAAE;AAAEN,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAhE,OAA1B;AAAyIM,MAAAA,OAAzI,mBAAiJC,MAAjJ,EAAyJV,IAAzJ,EAA+JW,OAA/J,EAAwKC,IAAxK,EAA8K;AAAE,eAAO,+CAAkBF,MAAlB,EAA0BV,IAA1B,EAAgCW,OAAhC,EAAyCC,IAAzC,CAAP;AAAwD;AAAxO,KAHlB;AAKJG,IAAAA,yBAAyB,EAAE;AAAEjB,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAT,OAA1B;AAAkFM,MAAAA,OAAO,EAAE,iBAACC,MAAD,EAASV,IAAT,EAAeW,OAAf,EAAwBC,IAAxB,EAAiC;AAAEI,8BAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAE;AAAEjB,YAAAA,KAAK,EAAED,IAAI,CAACC;AAAd;AAAT,SAApB;AAAwD;AAAtL,KALvB;AAMJkB,IAAAA,sBAAsB,EAAE;AAAErB,MAAAA,IAAI,EAAEC,sBAAR;AAAoBC,MAAAA,IAAI,EAAE;AAAEoB,QAAAA,EAAE,EAAE;AAAEtB,UAAAA,IAAI,EAAE,IAAII,uBAAJ,CAAmBmB,mBAAnB;AAAR;AAAN,OAA1B;AAA4EZ,MAAAA,OAAO,EAAE,iBAACC,MAAD,EAASV,IAAT,EAAeW,OAAf,EAAwBC,IAAxB,EAAiC;AAAEI,8BAAYC,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAE;AAAEE,YAAAA,EAAE,EAAEpB,IAAI,CAACoB;AAAX;AAAT,SAApB;AAAkD;AAA1K;AANpB;AADoC,CAAtB,CAAvB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
      "sourcesContent": [
        "import { GraphQLString, GraphQLNonNull, GraphQLObjectType, GraphQLInt } from 'graphql';\n\nimport { PersonType } from '../graphql-types/person-type';\nimport { personModel } from '../../musclefeed-models/database';\nimport { bcrypt, saltSync } from '../../musclefeed-configuration';\n\nimport { authenticateAdmin } from '../../musclefeed-controllers/account-functions/authentication-function';\nimport { authenticateGuest, registerGuest } from '../../musclefeed-controllers/account-functions/authentication-function';\n\nconst PersonMutation = new GraphQLObjectType({ name: 'PersonMutation',\n fields: {\n     makeGuestAccount: { type: PersonType, args: { email: { type: new GraphQLNonNull(GraphQLString) }, password: { type: new GraphQLNonNull(GraphQLString) }, firstname: { type: new GraphQLNonNull(GraphQLString) }, lastname: { type: new GraphQLNonNull(GraphQLString) }, phone: { type: new GraphQLNonNull(GraphQLString) }, civility: { type: new GraphQLNonNull(GraphQLString) } }, resolve: (source, args, context, info) => { return registerGuest(source, args, context, info); } },\n     retrieveGuestAccount: { type: PersonType, args: { email: { type: new GraphQLNonNull(GraphQLString) }, password: { type: new GraphQLNonNull(GraphQLString) } }, resolve(source, args, context, info) { return authenticateGuest(source, args, context, info); } },\n     retrieveAdminAccount: { type: PersonType, args: { email: { type: new GraphQLNonNull(GraphQLString) }, password: { type: new GraphQLNonNull(GraphQLString) } }, resolve(source, args, context, info) { return authenticateAdmin(source, args, context, info); } },\n     \n     deleteGuestAccountByEmail: { type: PersonType, args: { email: { type: new GraphQLNonNull(GraphQLString) } }, resolve: (source, args, context, info) => { personModel.destroy({ where: { email: args.email } }); } },\n     deleteGuestAccountByID: { type: PersonType, args: { id: { type: new GraphQLNonNull(GraphQLInt) } }, resolve: (source, args, context, info) => { personModel.destroy({ where: { id: args.id } }); } },\n }\n});\n\nexport { PersonMutation };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558455621926
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-configuration.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-configuration.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-configuration.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-configuration.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
        "sourceFileName": "musclefeed-configuration.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"bcrypt\", {\n  enumerable: true,\n  get: function get() {\n    return _bcryptjs[\"default\"];\n  }\n});\nexports.stripePublishable = exports.jwtSecret = exports.saltSync = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar saltSync = _bcryptjs[\"default\"].genSaltSync(10, function (error, salt) {\n  return salt;\n});\n\nexports.saltSync = saltSync;\nvar jwtSecret = '$2b$10$LrCfIc4VmkY2J1Riij5yjOM4mCdFXZR8NW0/7Oob7kSrWNRIPodse';\nexports.jwtSecret = jwtSecret;\nvar stripePublishable = 'pk_live_9WY2shJjiy2xcQsWLD26mxRK';\nexports.stripePublishable = stripePublishable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm11c2NsZWZlZWQtY29uZmlndXJhdGlvbi5qcyJdLCJuYW1lcyI6WyJzYWx0U3luYyIsImJjcnlwdCIsImdlblNhbHRTeW5jIiwiZXJyb3IiLCJzYWx0Iiwiand0U2VjcmV0Iiwic3RyaXBlUHVibGlzaGFibGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLFFBQVEsR0FBR0MscUJBQU9DLFdBQVAsQ0FBbUIsRUFBbkIsRUFBdUIsVUFBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWlCO0FBQUUsU0FBT0EsSUFBUDtBQUFjLENBQXhELENBQWpCOzs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsOERBQWxCOztBQUNBLElBQU1DLGlCQUFpQixHQUFHLGtDQUExQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XG5cbmNvbnN0IHNhbHRTeW5jID0gYmNyeXB0LmdlblNhbHRTeW5jKDEwLCAoZXJyb3IsIHNhbHQpID0+IHsgcmV0dXJuIHNhbHQ7IH0pO1xuY29uc3Qgand0U2VjcmV0ID0gJyQyYiQxMCRMckNmSWM0Vm1rWTJKMVJpaWo1eWpPTTRtQ2RGWFpSOE5XMC83T29iN2tTcldOUklQb2RzZSc7XG5jb25zdCBzdHJpcGVQdWJsaXNoYWJsZSA9ICdwa19saXZlXzlXWTJzaEpqaXkyeGNRc1dMRDI2bXhSSyc7XG5leHBvcnQgeyBzYWx0U3luYywgYmNyeXB0LCBqd3RTZWNyZXQsIHN0cmlwZVB1Ymxpc2hhYmxlIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "musclefeed-configuration.js"
      ],
      "names": [
        "saltSync",
        "bcrypt",
        "genSaltSync",
        "error",
        "salt",
        "jwtSecret",
        "stripePublishable"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,QAAQ,GAAGC,qBAAOC,WAAP,CAAmB,EAAnB,EAAuB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAAE,SAAOA,IAAP;AAAc,CAAxD,CAAjB;;;AACA,IAAMC,SAAS,GAAG,8DAAlB;;AACA,IAAMC,iBAAiB,GAAG,kCAA1B",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "sourcesContent": [
        "import bcrypt from 'bcryptjs';\n\nconst saltSync = bcrypt.genSaltSync(10, (error, salt) => { return salt; });\nconst jwtSecret = '$2b$10$LrCfIc4VmkY2J1Riij5yjOM4mCdFXZR8NW0/7Oob7kSrWNRIPodse';\nconst stripePublishable = 'pk_live_9WY2shJjiy2xcQsWLD26mxRK';\nexport { saltSync, bcrypt, jwtSecret, stripePublishable };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558453356933
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions/authentication-function.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions/authentication-function.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions/authentication-function.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions/authentication-function.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions",
        "sourceFileName": "authentication-function.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authenticateAdmin = authenticateAdmin;\nexports.authenticateGuest = authenticateGuest;\nexports.registerGuest = registerGuest;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _validator = _interopRequireDefault(require(\"validator\"));\n\nvar _musclefeedConfiguration = require(\"../../musclefeed-configuration\");\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction authenticateAdmin(source, args, context, info) {\n  return _database.personModel.findOne({\n    where: {\n      email: args.email,\n      is_admin: true\n    }\n  }).then(function (admin) {\n    if (!admin) {\n      return false;\n    }\n\n    var match = _musclefeedConfiguration.bcrypt.compareSync(args.password, admin.password);\n\n    if (!match) {\n      return false;\n    }\n\n    var token = _jsonwebtoken[\"default\"].sign({\n      adminID: admin.id,\n      admin: admin\n    }, _musclefeedConfiguration.jwtSecret, {\n      issuer: \"Muscle Feed Company\",\n      expiresIn: \"168h\"\n    });\n\n    admin[\"authenticateToken\"] = token;\n    return admin;\n  });\n}\n\nfunction authenticateGuest(source, args, context, info) {\n  return _database.personModel.findOne({\n    where: {\n      email: args.email\n    }\n  }).then(function (user) {\n    if (!user) {\n      return false;\n    }\n\n    var match = _musclefeedConfiguration.bcrypt.compareSync(args.password, user.password);\n\n    if (!match) {\n      return false;\n    }\n\n    var token = _jsonwebtoken[\"default\"].sign({\n      userID: user.id,\n      user: user\n    }, _musclefeedConfiguration.jwtSecret, {\n      issuer: \"Muscle Feed Company\",\n      expiresIn: \"168h\"\n    });\n\n    user[\"authenticateToken\"] = token;\n    return user;\n  });\n}\n\nfunction registerGuest(source, args, context, info) {\n  if (!_validator[\"default\"].isEmail(args.email)) {\n    throw new Error('E-mail invalid');\n  }\n\n  if (args.firstname.length < 2 || args.lastname.length < 2 || args.password.length < 6) {\n    throw new Error('Password invalid');\n  }\n\n  if (!_validator[\"default\"].isMobilePhone(args.phone, ['fr-FR', 'en-US'])) {\n    throw new Error('Mobile Phone invalid');\n  }\n\n  var token = _musclefeedConfiguration.bcrypt.hashSync(args.password + args.firstname + args.lastname + args.email + new Date().getTime());\n\n  var password = _musclefeedConfiguration.bcrypt.hashSync(args.password);\n\n  var username = '_' + Math.random().toString(36).substring(7);\n  return _database.personModel.create({\n    firstname: args.firstname,\n    lastname: args.lastname,\n    username: username,\n    email: args.email,\n    password: password,\n    token: token,\n    civility: args.civility,\n    phone: args.phone\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0aW9uLWZ1bmN0aW9uLmpzIl0sIm5hbWVzIjpbImF1dGhlbnRpY2F0ZUFkbWluIiwic291cmNlIiwiYXJncyIsImNvbnRleHQiLCJpbmZvIiwicGVyc29uTW9kZWwiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsImlzX2FkbWluIiwidGhlbiIsImFkbWluIiwibWF0Y2giLCJiY3J5cHQiLCJjb21wYXJlU3luYyIsInBhc3N3b3JkIiwidG9rZW4iLCJqd3QiLCJzaWduIiwiYWRtaW5JRCIsImlkIiwiand0U2VjcmV0IiwiaXNzdWVyIiwiZXhwaXJlc0luIiwiYXV0aGVudGljYXRlR3Vlc3QiLCJ1c2VyIiwidXNlcklEIiwicmVnaXN0ZXJHdWVzdCIsInZhbGlkYXRvciIsImlzRW1haWwiLCJFcnJvciIsImZpcnN0bmFtZSIsImxlbmd0aCIsImxhc3RuYW1lIiwiaXNNb2JpbGVQaG9uZSIsInBob25lIiwiaGFzaFN5bmMiLCJEYXRlIiwiZ2V0VGltZSIsInVzZXJuYW1lIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwiY3JlYXRlIiwiY2l2aWxpdHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRU8sU0FBU0EsaUJBQVQsQ0FBMkJDLE1BQTNCLEVBQW1DQyxJQUFuQyxFQUF5Q0MsT0FBekMsRUFBa0RDLElBQWxELEVBQXdEO0FBQzNELFNBQU9DLHNCQUFZQyxPQUFaLENBQW9CO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFQyxNQUFBQSxLQUFLLEVBQUVOLElBQUksQ0FBQ00sS0FBZDtBQUFxQkMsTUFBQUEsUUFBUSxFQUFFO0FBQS9CO0FBQVQsR0FBcEIsRUFBcUVDLElBQXJFLENBQTBFLFVBQUNDLEtBQUQsRUFBVztBQUN4RixRQUFHLENBQUNBLEtBQUosRUFBVztBQUFFLGFBQU8sS0FBUDtBQUFlOztBQUM1QixRQUFNQyxLQUFLLEdBQUdDLGdDQUFPQyxXQUFQLENBQW1CWixJQUFJLENBQUNhLFFBQXhCLEVBQWtDSixLQUFLLENBQUNJLFFBQXhDLENBQWQ7O0FBQWlFLFFBQUcsQ0FBQ0gsS0FBSixFQUFXO0FBQUUsYUFBTyxLQUFQO0FBQWU7O0FBQzdGLFFBQU1JLEtBQUssR0FBR0MseUJBQUlDLElBQUosQ0FBUztBQUFFQyxNQUFBQSxPQUFPLEVBQUVSLEtBQUssQ0FBQ1MsRUFBakI7QUFBcUJULE1BQUFBLEtBQUssRUFBRUE7QUFBNUIsS0FBVCxFQUE4Q1Usa0NBQTlDLEVBQXlEO0FBQUVDLE1BQUFBLE1BQU0sRUFBRSxxQkFBVjtBQUFpQ0MsTUFBQUEsU0FBUyxFQUFFO0FBQTVDLEtBQXpELENBQWQ7O0FBQStIWixJQUFBQSxLQUFLLENBQUMsbUJBQUQsQ0FBTCxHQUE2QkssS0FBN0I7QUFBb0MsV0FBT0wsS0FBUDtBQUN0SyxHQUpNLENBQVA7QUFLSDs7QUFFTSxTQUFTYSxpQkFBVCxDQUEyQnZCLE1BQTNCLEVBQW1DQyxJQUFuQyxFQUF5Q0MsT0FBekMsRUFBa0RDLElBQWxELEVBQXdEO0FBQzNELFNBQU9DLHNCQUFZQyxPQUFaLENBQW9CO0FBQUVDLElBQUFBLEtBQUssRUFBRTtBQUFFQyxNQUFBQSxLQUFLLEVBQUVOLElBQUksQ0FBQ007QUFBZDtBQUFULEdBQXBCLEVBQXFERSxJQUFyRCxDQUEwRCxVQUFDZSxJQUFELEVBQVU7QUFDdkUsUUFBRyxDQUFDQSxJQUFKLEVBQVU7QUFBRSxhQUFPLEtBQVA7QUFBZTs7QUFDM0IsUUFBTWIsS0FBSyxHQUFHQyxnQ0FBT0MsV0FBUCxDQUFtQlosSUFBSSxDQUFDYSxRQUF4QixFQUFrQ1UsSUFBSSxDQUFDVixRQUF2QyxDQUFkOztBQUFnRSxRQUFHLENBQUNILEtBQUosRUFBVztBQUFFLGFBQU8sS0FBUDtBQUFlOztBQUM1RixRQUFNSSxLQUFLLEdBQUdDLHlCQUFJQyxJQUFKLENBQVM7QUFBRVEsTUFBQUEsTUFBTSxFQUFFRCxJQUFJLENBQUNMLEVBQWY7QUFBbUJLLE1BQUFBLElBQUksRUFBRUE7QUFBekIsS0FBVCxFQUEwQ0osa0NBQTFDLEVBQXFEO0FBQUVDLE1BQUFBLE1BQU0sRUFBRSxxQkFBVjtBQUFpQ0MsTUFBQUEsU0FBUyxFQUFFO0FBQTVDLEtBQXJELENBQWQ7O0FBQTJIRSxJQUFBQSxJQUFJLENBQUMsbUJBQUQsQ0FBSixHQUE0QlQsS0FBNUI7QUFBbUMsV0FBT1MsSUFBUDtBQUNqSyxHQUpNLENBQVA7QUFLSDs7QUFFTSxTQUFTRSxhQUFULENBQXVCMUIsTUFBdkIsRUFBK0JDLElBQS9CLEVBQXFDQyxPQUFyQyxFQUE4Q0MsSUFBOUMsRUFBb0Q7QUFDdkQsTUFBRyxDQUFDd0Isc0JBQVVDLE9BQVYsQ0FBa0IzQixJQUFJLENBQUNNLEtBQXZCLENBQUosRUFBbUM7QUFBRSxVQUFNLElBQUlzQixLQUFKLENBQVUsZ0JBQVYsQ0FBTjtBQUFvQzs7QUFDekUsTUFBRzVCLElBQUksQ0FBQzZCLFNBQUwsQ0FBZUMsTUFBZixHQUF3QixDQUF4QixJQUE2QjlCLElBQUksQ0FBQytCLFFBQUwsQ0FBY0QsTUFBZCxHQUF1QixDQUFwRCxJQUF5RDlCLElBQUksQ0FBQ2EsUUFBTCxDQUFjaUIsTUFBZCxHQUF1QixDQUFuRixFQUFzRjtBQUFFLFVBQU0sSUFBSUYsS0FBSixDQUFVLGtCQUFWLENBQU47QUFBc0M7O0FBQzlILE1BQUcsQ0FBQ0Ysc0JBQVVNLGFBQVYsQ0FBd0JoQyxJQUFJLENBQUNpQyxLQUE3QixFQUFvQyxDQUFDLE9BQUQsRUFBVSxPQUFWLENBQXBDLENBQUosRUFBNkQ7QUFBRSxVQUFNLElBQUlMLEtBQUosQ0FBVSxzQkFBVixDQUFOO0FBQTBDOztBQUNyRyxNQUFNZCxLQUFLLEdBQUdILGdDQUFPdUIsUUFBUCxDQUFnQmxDLElBQUksQ0FBQ2EsUUFBTCxHQUFnQmIsSUFBSSxDQUFDNkIsU0FBckIsR0FBaUM3QixJQUFJLENBQUMrQixRQUF0QyxHQUFpRC9CLElBQUksQ0FBQ00sS0FBdEQsR0FBOEQsSUFBSTZCLElBQUosR0FBV0MsT0FBWCxFQUE5RSxDQUFkOztBQUFvSCxNQUFNdkIsUUFBUSxHQUFHRixnQ0FBT3VCLFFBQVAsQ0FBZ0JsQyxJQUFJLENBQUNhLFFBQXJCLENBQWpCOztBQUFpRCxNQUFNd0IsUUFBUSxHQUFHLE1BQU1DLElBQUksQ0FBQ0MsTUFBTCxHQUFjQyxRQUFkLENBQXVCLEVBQXZCLEVBQTJCQyxTQUEzQixDQUFxQyxDQUFyQyxDQUF2QjtBQUNySyxTQUFPdEMsc0JBQVl1QyxNQUFaLENBQW1CO0FBQUViLElBQUFBLFNBQVMsRUFBRTdCLElBQUksQ0FBQzZCLFNBQWxCO0FBQTZCRSxJQUFBQSxRQUFRLEVBQUUvQixJQUFJLENBQUMrQixRQUE1QztBQUFzRE0sSUFBQUEsUUFBUSxFQUFFQSxRQUFoRTtBQUEwRS9CLElBQUFBLEtBQUssRUFBRU4sSUFBSSxDQUFDTSxLQUF0RjtBQUE2Rk8sSUFBQUEsUUFBUSxFQUFFQSxRQUF2RztBQUFpSEMsSUFBQUEsS0FBSyxFQUFFQSxLQUF4SDtBQUErSDZCLElBQUFBLFFBQVEsRUFBRTNDLElBQUksQ0FBQzJDLFFBQTlJO0FBQXdKVixJQUFBQSxLQUFLLEVBQUVqQyxJQUFJLENBQUNpQztBQUFwSyxHQUFuQixDQUFQO0FBQ1AiLCJzb3VyY2VSb290IjoiL1VzZXJzL291c3NhbWFqYWFvdWFuaS9TaXRlcy9tdXNjbGVmZWVkLmNvL211c2NsZWZlZWQtc2VydmVyL3NvdXJjZS9tdXNjbGVmZWVkLWNvbnRyb2xsZXJzL2FjY291bnQtZnVuY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IHZhbGlkYXRvciBmcm9tICd2YWxpZGF0b3InO1xuXG5pbXBvcnQgeyBzYWx0U3luYywgYmNyeXB0LCBqd3RTZWNyZXQgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLWNvbmZpZ3VyYXRpb24nO1xuaW1wb3J0IHsgcGVyc29uTW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhdXRoZW50aWNhdGVBZG1pbihzb3VyY2UsIGFyZ3MsIGNvbnRleHQsIGluZm8pIHtcbiAgICByZXR1cm4gcGVyc29uTW9kZWwuZmluZE9uZSh7IHdoZXJlOiB7IGVtYWlsOiBhcmdzLmVtYWlsLCBpc19hZG1pbjogdHJ1ZSB9fSkudGhlbigoYWRtaW4pID0+IHsgXG4gICAgICAgIGlmKCFhZG1pbikgeyByZXR1cm4gZmFsc2U7IH1cbiAgICAgICAgY29uc3QgbWF0Y2ggPSBiY3J5cHQuY29tcGFyZVN5bmMoYXJncy5wYXNzd29yZCwgYWRtaW4ucGFzc3dvcmQpOyBpZighbWF0Y2gpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyBhZG1pbklEOiBhZG1pbi5pZCwgYWRtaW46IGFkbWluIH0sIGp3dFNlY3JldCwgeyBpc3N1ZXI6IFwiTXVzY2xlIEZlZWQgQ29tcGFueVwiLCBleHBpcmVzSW46IFwiMTY4aFwiIH0gKTsgYWRtaW5bXCJhdXRoZW50aWNhdGVUb2tlblwiXSA9IHRva2VuOyByZXR1cm4gYWRtaW47IFxuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXV0aGVudGljYXRlR3Vlc3Qoc291cmNlLCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7XG4gICAgcmV0dXJuIHBlcnNvbk1vZGVsLmZpbmRPbmUoeyB3aGVyZTogeyBlbWFpbDogYXJncy5lbWFpbCB9fSkudGhlbigodXNlcikgPT4geyBcbiAgICAgICAgaWYoIXVzZXIpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIGNvbnN0IG1hdGNoID0gYmNyeXB0LmNvbXBhcmVTeW5jKGFyZ3MucGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpOyBpZighbWF0Y2gpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyB1c2VySUQ6IHVzZXIuaWQsIHVzZXI6IHVzZXIgfSwgand0U2VjcmV0LCB7IGlzc3VlcjogXCJNdXNjbGUgRmVlZCBDb21wYW55XCIsIGV4cGlyZXNJbjogXCIxNjhoXCIgfSApOyB1c2VyW1wiYXV0aGVudGljYXRlVG9rZW5cIl0gPSB0b2tlbjsgcmV0dXJuIHVzZXI7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3Rlckd1ZXN0KHNvdXJjZSwgYXJncywgY29udGV4dCwgaW5mbykge1xuICAgIGlmKCF2YWxpZGF0b3IuaXNFbWFpbChhcmdzLmVtYWlsKSkgeyB0aHJvdyBuZXcgRXJyb3IoJ0UtbWFpbCBpbnZhbGlkJyk7IH1cbiAgICBpZihhcmdzLmZpcnN0bmFtZS5sZW5ndGggPCAyIHx8IGFyZ3MubGFzdG5hbWUubGVuZ3RoIDwgMiB8fCBhcmdzLnBhc3N3b3JkLmxlbmd0aCA8IDYpIHsgdGhyb3cgbmV3IEVycm9yKCdQYXNzd29yZCBpbnZhbGlkJyk7IH1cbiAgICBpZighdmFsaWRhdG9yLmlzTW9iaWxlUGhvbmUoYXJncy5waG9uZSwgWydmci1GUicsICdlbi1VUyddKSkgeyB0aHJvdyBuZXcgRXJyb3IoJ01vYmlsZSBQaG9uZSBpbnZhbGlkJyk7IH1cbiAgICAgICAgY29uc3QgdG9rZW4gPSBiY3J5cHQuaGFzaFN5bmMoYXJncy5wYXNzd29yZCArIGFyZ3MuZmlyc3RuYW1lICsgYXJncy5sYXN0bmFtZSArIGFyZ3MuZW1haWwgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKSkgOyBjb25zdCBwYXNzd29yZCA9IGJjcnlwdC5oYXNoU3luYyhhcmdzLnBhc3N3b3JkKTsgY29uc3QgdXNlcm5hbWUgPSAnXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XG4gICAgICAgIHJldHVybiBwZXJzb25Nb2RlbC5jcmVhdGUoeyBmaXJzdG5hbWU6IGFyZ3MuZmlyc3RuYW1lLCBsYXN0bmFtZTogYXJncy5sYXN0bmFtZSwgdXNlcm5hbWU6IHVzZXJuYW1lLCBlbWFpbDogYXJncy5lbWFpbCwgcGFzc3dvcmQ6IHBhc3N3b3JkLCB0b2tlbjogdG9rZW4sIGNpdmlsaXR5OiBhcmdzLmNpdmlsaXR5LCBwaG9uZTogYXJncy5waG9uZSB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authentication-function.js"
      ],
      "names": [
        "authenticateAdmin",
        "source",
        "args",
        "context",
        "info",
        "personModel",
        "findOne",
        "where",
        "email",
        "is_admin",
        "then",
        "admin",
        "match",
        "bcrypt",
        "compareSync",
        "password",
        "token",
        "jwt",
        "sign",
        "adminID",
        "id",
        "jwtSecret",
        "issuer",
        "expiresIn",
        "authenticateGuest",
        "user",
        "userID",
        "registerGuest",
        "validator",
        "isEmail",
        "Error",
        "firstname",
        "length",
        "lastname",
        "isMobilePhone",
        "phone",
        "hashSync",
        "Date",
        "getTime",
        "username",
        "Math",
        "random",
        "toString",
        "substring",
        "create",
        "civility"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEO,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,OAAzC,EAAkDC,IAAlD,EAAwD;AAC3D,SAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAAd;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B;AAAT,GAApB,EAAqEC,IAArE,CAA0E,UAACC,KAAD,EAAW;AACxF,QAAG,CAACA,KAAJ,EAAW;AAAE,aAAO,KAAP;AAAe;;AAC5B,QAAMC,KAAK,GAAGC,gCAAOC,WAAP,CAAmBZ,IAAI,CAACa,QAAxB,EAAkCJ,KAAK,CAACI,QAAxC,CAAd;;AAAiE,QAAG,CAACH,KAAJ,EAAW;AAAE,aAAO,KAAP;AAAe;;AAC7F,QAAMI,KAAK,GAAGC,yBAAIC,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAER,KAAK,CAACS,EAAjB;AAAqBT,MAAAA,KAAK,EAAEA;AAA5B,KAAT,EAA8CU,kCAA9C,EAAyD;AAAEC,MAAAA,MAAM,EAAE,qBAAV;AAAiCC,MAAAA,SAAS,EAAE;AAA5C,KAAzD,CAAd;;AAA+HZ,IAAAA,KAAK,CAAC,mBAAD,CAAL,GAA6BK,KAA7B;AAAoC,WAAOL,KAAP;AACtK,GAJM,CAAP;AAKH;;AAEM,SAASa,iBAAT,CAA2BvB,MAA3B,EAAmCC,IAAnC,EAAyCC,OAAzC,EAAkDC,IAAlD,EAAwD;AAC3D,SAAOC,sBAAYC,OAAZ,CAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEN,IAAI,CAACM;AAAd;AAAT,GAApB,EAAqDE,IAArD,CAA0D,UAACe,IAAD,EAAU;AACvE,QAAG,CAACA,IAAJ,EAAU;AAAE,aAAO,KAAP;AAAe;;AAC3B,QAAMb,KAAK,GAAGC,gCAAOC,WAAP,CAAmBZ,IAAI,CAACa,QAAxB,EAAkCU,IAAI,CAACV,QAAvC,CAAd;;AAAgE,QAAG,CAACH,KAAJ,EAAW;AAAE,aAAO,KAAP;AAAe;;AAC5F,QAAMI,KAAK,GAAGC,yBAAIC,IAAJ,CAAS;AAAEQ,MAAAA,MAAM,EAAED,IAAI,CAACL,EAAf;AAAmBK,MAAAA,IAAI,EAAEA;AAAzB,KAAT,EAA0CJ,kCAA1C,EAAqD;AAAEC,MAAAA,MAAM,EAAE,qBAAV;AAAiCC,MAAAA,SAAS,EAAE;AAA5C,KAArD,CAAd;;AAA2HE,IAAAA,IAAI,CAAC,mBAAD,CAAJ,GAA4BT,KAA5B;AAAmC,WAAOS,IAAP;AACjK,GAJM,CAAP;AAKH;;AAEM,SAASE,aAAT,CAAuB1B,MAAvB,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AACvD,MAAG,CAACwB,sBAAUC,OAAV,CAAkB3B,IAAI,CAACM,KAAvB,CAAJ,EAAmC;AAAE,UAAM,IAAIsB,KAAJ,CAAU,gBAAV,CAAN;AAAoC;;AACzE,MAAG5B,IAAI,CAAC6B,SAAL,CAAeC,MAAf,GAAwB,CAAxB,IAA6B9B,IAAI,CAAC+B,QAAL,CAAcD,MAAd,GAAuB,CAApD,IAAyD9B,IAAI,CAACa,QAAL,CAAciB,MAAd,GAAuB,CAAnF,EAAsF;AAAE,UAAM,IAAIF,KAAJ,CAAU,kBAAV,CAAN;AAAsC;;AAC9H,MAAG,CAACF,sBAAUM,aAAV,CAAwBhC,IAAI,CAACiC,KAA7B,EAAoC,CAAC,OAAD,EAAU,OAAV,CAApC,CAAJ,EAA6D;AAAE,UAAM,IAAIL,KAAJ,CAAU,sBAAV,CAAN;AAA0C;;AACrG,MAAMd,KAAK,GAAGH,gCAAOuB,QAAP,CAAgBlC,IAAI,CAACa,QAAL,GAAgBb,IAAI,CAAC6B,SAArB,GAAiC7B,IAAI,CAAC+B,QAAtC,GAAiD/B,IAAI,CAACM,KAAtD,GAA8D,IAAI6B,IAAJ,GAAWC,OAAX,EAA9E,CAAd;;AAAoH,MAAMvB,QAAQ,GAAGF,gCAAOuB,QAAP,CAAgBlC,IAAI,CAACa,QAArB,CAAjB;;AAAiD,MAAMwB,QAAQ,GAAG,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAvB;AACrK,SAAOtC,sBAAYuC,MAAZ,CAAmB;AAAEb,IAAAA,SAAS,EAAE7B,IAAI,CAAC6B,SAAlB;AAA6BE,IAAAA,QAAQ,EAAE/B,IAAI,CAAC+B,QAA5C;AAAsDM,IAAAA,QAAQ,EAAEA,QAAhE;AAA0E/B,IAAAA,KAAK,EAAEN,IAAI,CAACM,KAAtF;AAA6FO,IAAAA,QAAQ,EAAEA,QAAvG;AAAiHC,IAAAA,KAAK,EAAEA,KAAxH;AAA+H6B,IAAAA,QAAQ,EAAE3C,IAAI,CAAC2C,QAA9I;AAAwJV,IAAAA,KAAK,EAAEjC,IAAI,CAACiC;AAApK,GAAnB,CAAP;AACP",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/account-functions",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport validator from 'validator';\n\nimport { saltSync, bcrypt, jwtSecret } from '../../musclefeed-configuration';\nimport { personModel } from '../../musclefeed-models/database';\n\nexport function authenticateAdmin(source, args, context, info) {\n    return personModel.findOne({ where: { email: args.email, is_admin: true }}).then((admin) => { \n        if(!admin) { return false; }\n        const match = bcrypt.compareSync(args.password, admin.password); if(!match) { return false; }\n        const token = jwt.sign({ adminID: admin.id, admin: admin }, jwtSecret, { issuer: \"Muscle Feed Company\", expiresIn: \"168h\" } ); admin[\"authenticateToken\"] = token; return admin; \n    });\n}\n\nexport function authenticateGuest(source, args, context, info) {\n    return personModel.findOne({ where: { email: args.email }}).then((user) => { \n        if(!user) { return false; }\n        const match = bcrypt.compareSync(args.password, user.password); if(!match) { return false; }\n        const token = jwt.sign({ userID: user.id, user: user }, jwtSecret, { issuer: \"Muscle Feed Company\", expiresIn: \"168h\" } ); user[\"authenticateToken\"] = token; return user;\n    });\n}\n\nexport function registerGuest(source, args, context, info) {\n    if(!validator.isEmail(args.email)) { throw new Error('E-mail invalid'); }\n    if(args.firstname.length < 2 || args.lastname.length < 2 || args.password.length < 6) { throw new Error('Password invalid'); }\n    if(!validator.isMobilePhone(args.phone, ['fr-FR', 'en-US'])) { throw new Error('Mobile Phone invalid'); }\n        const token = bcrypt.hashSync(args.password + args.firstname + args.lastname + args.email + new Date().getTime()) ; const password = bcrypt.hashSync(args.password); const username = '_' + Math.random().toString(36).substring(7);\n        return personModel.create({ firstname: args.firstname, lastname: args.lastname, username: username, email: args.email, password: password, token: token, civility: args.civility, phone: args.phone });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558456285157
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/product-mutation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/product-mutation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/product-mutation.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations/product-mutation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
        "sourceFileName": "product-mutation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProductMutation = void 0;\n\nvar _graphql = require(\"graphql\");\n\nvar _categoryType = require(\"../graphql-types/category-type\");\n\nvar _perfumeType = require(\"../graphql-types/perfume-type\");\n\nvar _weightType = require(\"../graphql-types/weight-type\");\n\nvar _productType = require(\"../graphql-types/product-type\");\n\nvar _slideshowType = require(\"../graphql-types/slideshow-type\");\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nvar _musclefeedConfiguration = require(\"../../musclefeed-configuration\");\n\nvar _productFunction = require(\"../../musclefeed-controllers/product-functions/product-function\");\n\nvar ProductMutation = new _graphql.GraphQLObjectType({\n  name: 'ProductMutation',\n  fields: {\n    addProductCategoryQuery: {\n      type: _categoryType.CategoryType,\n      args: {\n        name: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        description: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _productFunction.addProductCategoryFunction)(args.name, args.description);\n      }\n    },\n    addProductPerfumeQuery: {\n      type: _perfumeType.PerfumeType,\n      args: {\n        name: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        description: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _productFunction.addProductPerfumeFunction)(args.name, args.description);\n      }\n    },\n    addProductWeightQuery: {\n      type: _weightType.WeightType,\n      args: {\n        name: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        value: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _productFunction.addProductWeightFunction)(args.name, args.value);\n      }\n    },\n    addProductQuery: {\n      type: _productType.ProductType,\n      args: {\n        title: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        quantity: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        },\n        provider: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        description_title: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        description: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        image: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        details: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _productFunction.addProductFunction)(args.title, args.quantity, args.provider, args.description_title, args.description, args.image, args.details);\n      }\n    },\n    addSlideshowImageQuery: {\n      type: _slideshowType.SlideshowType,\n      args: {\n        name: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        },\n        image: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLString)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        return (0, _productFunction.addSlideshowFunction)(args.name, args.image);\n      }\n    },\n    deleteProductCategoryQuery: {\n      type: _categoryType.CategoryType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.categoryModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    },\n    deleteProductPerfumeQuery: {\n      type: _perfumeType.PerfumeType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.perfumeModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    },\n    deleteProductWeightQuery: {\n      type: _weightType.WeightType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.weightModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    },\n    deleteProductQuery: {\n      type: _productType.ProductType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.productModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    },\n    deleteSlideshowImageQuery: {\n      type: _slideshowType.SlideshowType,\n      args: {\n        id: {\n          type: new _graphql.GraphQLNonNull(_graphql.GraphQLInt)\n        }\n      },\n      resolve: function resolve(source, args, context, info) {\n        _database.slideshowModel.destroy({\n          where: {\n            id: args.id\n          }\n        });\n      }\n    }\n  }\n});\nexports.ProductMutation = ProductMutation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "product-mutation.js"
      ],
      "names": [
        "ProductMutation",
        "GraphQLObjectType",
        "name",
        "fields",
        "addProductCategoryQuery",
        "type",
        "CategoryType",
        "args",
        "GraphQLNonNull",
        "GraphQLString",
        "description",
        "resolve",
        "source",
        "context",
        "info",
        "addProductPerfumeQuery",
        "PerfumeType",
        "addProductWeightQuery",
        "WeightType",
        "value",
        "GraphQLInt",
        "addProductQuery",
        "ProductType",
        "title",
        "quantity",
        "provider",
        "description_title",
        "image",
        "details",
        "addSlideshowImageQuery",
        "SlideshowType",
        "deleteProductCategoryQuery",
        "id",
        "categoryModel",
        "destroy",
        "where",
        "deleteProductPerfumeQuery",
        "perfumeModel",
        "deleteProductWeightQuery",
        "weightModel",
        "deleteProductQuery",
        "productModel",
        "deleteSlideshowImageQuery",
        "slideshowModel"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAMA;;AAEA;;AAGA,IAAMA,eAAe,GAAG,IAAIC,0BAAJ,CAAsB;AAAEC,EAAAA,IAAI,EAAE,iBAAR;AAC7CC,EAAAA,MAAM,EAAE;AACLC,IAAAA,uBAAuB,EAAE;AAAEC,MAAAA,IAAI,EAAEC,0BAAR;AAAsBC,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAEG,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAR;AAAqDC,QAAAA,WAAW,EAAE;AAAEL,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAlE,OAA5B;AAA6IE,MAAAA,OAA7I,mBAAqJC,MAArJ,EAA6JL,IAA7J,EAAmKM,OAAnK,EAA4KC,IAA5K,EAAkL;AAAE,eAAO,iDAA2BP,IAAI,CAACL,IAAhC,EAAsCK,IAAI,CAACG,WAA3C,CAAP;AAAiE;AAArP,KADpB;AAELK,IAAAA,sBAAsB,EAAE;AAAEV,MAAAA,IAAI,EAAEW,wBAAR;AAAqBT,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAEG,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAR;AAAqDC,QAAAA,WAAW,EAAE;AAAEL,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAlE,OAA3B;AAA4IE,MAAAA,OAA5I,mBAAoJC,MAApJ,EAA4JL,IAA5J,EAAkKM,OAAlK,EAA2KC,IAA3K,EAAiL;AAAE,eAAO,gDAA0BP,IAAI,CAACL,IAA/B,EAAqCK,IAAI,CAACG,WAA1C,CAAP;AAAgE;AAAnP,KAFnB;AAGLO,IAAAA,qBAAqB,EAAE;AAAEZ,MAAAA,IAAI,EAAEa,sBAAR;AAAoBX,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAEG,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAR;AAAqDU,QAAAA,KAAK,EAAE;AAAEd,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAA5D,OAA1B;AAAkIT,MAAAA,OAAlI,mBAA0IC,MAA1I,EAAkJL,IAAlJ,EAAwJM,OAAxJ,EAAiKC,IAAjK,EAAuK;AAAE,eAAO,+CAAyBP,IAAI,CAACL,IAA9B,EAAoCK,IAAI,CAACY,KAAzC,CAAP;AAAyD;AAAlO,KAHlB;AAILE,IAAAA,eAAe,EAAE;AAAEhB,MAAAA,IAAI,EAAEiB,wBAAR;AAAqBf,MAAAA,IAAI,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAElB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAT;AAAsDe,QAAAA,QAAQ,EAAE;AAAEnB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR,SAAhE;AAA0GK,QAAAA,QAAQ,EAAE;AAAEpB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAApH;AAAiKiB,QAAAA,iBAAiB,EAAE;AAAErB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAApL;AAAiOC,QAAAA,WAAW,EAAE;AAAEL,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAA9O;AAA2RkB,QAAAA,KAAK,EAAE;AAAEtB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAlS;AAA+UmB,QAAAA,OAAO,EAAE;AAAEvB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR;AAAxV,OAA3B;AACfE,MAAAA,OADe,mBACPC,MADO,EACCL,IADD,EACOM,OADP,EACgBC,IADhB,EACsB;AAAE,eAAO,yCAAmBP,IAAI,CAACgB,KAAxB,EAA+BhB,IAAI,CAACiB,QAApC,EAA8CjB,IAAI,CAACkB,QAAnD,EAA6DlB,IAAI,CAACmB,iBAAlE,EAAqFnB,IAAI,CAACG,WAA1F,EAAuGH,IAAI,CAACoB,KAA5G,EAAmHpB,IAAI,CAACqB,OAAxH,CAAP;AAA0I;AADlK,KAJZ;AAMLC,IAAAA,sBAAsB,EAAE;AAAExB,MAAAA,IAAI,EAAEyB,4BAAR;AAAuBvB,MAAAA,IAAI,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAEG,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR,SAAR;AAAqDkB,QAAAA,KAAK,EAAE;AAAEtB,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBC,sBAAnB;AAAR;AAA5D,OAA7B;AAAwIE,MAAAA,OAAxI,mBAAgJC,MAAhJ,EAAwJL,IAAxJ,EAA8JM,OAA9J,EAAuKC,IAAvK,EAA6K;AAAE,eAAO,2CAAqBP,IAAI,CAACL,IAA1B,EAAgCK,IAAI,CAACoB,KAArC,CAAP;AAAqD;AAApO,KANnB;AAQLI,IAAAA,0BAA0B,EAAE;AAAE1B,MAAAA,IAAI,EAAEC,0BAAR;AAAsBC,MAAAA,IAAI,EAAE;AAAEyB,QAAAA,EAAE,EAAE;AAAE3B,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAAN,OAA5B;AAA8ET,MAAAA,OAA9E,mBAAsFC,MAAtF,EAA8FL,IAA9F,EAAoGM,OAApG,EAA6GC,IAA7G,EAAmH;AAAEmB,gCAAcC,OAAd,CAAsB;AAAEC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,EAAE,EAAEzB,IAAI,CAACyB;AAAX;AAAT,SAAtB;AAAoD;AAAzK,KARvB;AASLI,IAAAA,yBAAyB,EAAE;AAAE/B,MAAAA,IAAI,EAAEW,wBAAR;AAAqBT,MAAAA,IAAI,EAAE;AAAEyB,QAAAA,EAAE,EAAE;AAAE3B,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAAN,OAA3B;AAA6ET,MAAAA,OAA7E,mBAAqFC,MAArF,EAA6FL,IAA7F,EAAmGM,OAAnG,EAA4GC,IAA5G,EAAkH;AAAEuB,+BAAaH,OAAb,CAAqB;AAAEC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,EAAE,EAAEzB,IAAI,CAACyB;AAAX;AAAT,SAArB;AAAmD;AAAvK,KATtB;AAULM,IAAAA,wBAAwB,EAAE;AAAEjC,MAAAA,IAAI,EAAEa,sBAAR;AAAoBX,MAAAA,IAAI,EAAE;AAAEyB,QAAAA,EAAE,EAAE;AAAE3B,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAAN,OAA1B;AAA4ET,MAAAA,OAA5E,mBAAoFC,MAApF,EAA4FL,IAA5F,EAAkGM,OAAlG,EAA2GC,IAA3G,EAAiH;AAAEyB,8BAAYL,OAAZ,CAAoB;AAAEC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,EAAE,EAAEzB,IAAI,CAACyB;AAAX;AAAT,SAApB;AAAkD;AAArK,KAVrB;AAWLQ,IAAAA,kBAAkB,EAAE;AAAEnC,MAAAA,IAAI,EAAEiB,wBAAR;AAAqBf,MAAAA,IAAI,EAAE;AAAEyB,QAAAA,EAAE,EAAE;AAAE3B,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAAN,OAA3B;AAA6ET,MAAAA,OAA7E,mBAAqFC,MAArF,EAA6FL,IAA7F,EAAmGM,OAAnG,EAA4GC,IAA5G,EAAkH;AAAE2B,+BAAaP,OAAb,CAAqB;AAAEC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,EAAE,EAAEzB,IAAI,CAACyB;AAAX;AAAT,SAArB;AAAkD;AAAtK,KAXf;AAYLU,IAAAA,yBAAyB,EAAE;AAAErC,MAAAA,IAAI,EAAEyB,4BAAR;AAAuBvB,MAAAA,IAAI,EAAE;AAAEyB,QAAAA,EAAE,EAAG;AAAE3B,UAAAA,IAAI,EAAE,IAAIG,uBAAJ,CAAmBY,mBAAnB;AAAR;AAAP,OAA7B;AAAgFT,MAAAA,OAAhF,mBAAwFC,MAAxF,EAAgGL,IAAhG,EAAsGM,OAAtG,EAA+GC,IAA/G,EAAqH;AAAE6B,iCAAeT,OAAf,CAAuB;AAAEC,UAAAA,KAAK,EAAE;AAAEH,YAAAA,EAAE,EAAEzB,IAAI,CAACyB;AAAX;AAAT,SAAvB;AAAqD;AAA5K;AAZtB;AADqC,CAAtB,CAAxB",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-graphql/graphql-mutations",
      "sourcesContent": [
        "import { GraphQLString, GraphQLNonNull, GraphQLObjectType, GraphQLInt } from 'graphql';\n\nimport { CategoryType } from '../graphql-types/category-type';\nimport { PerfumeType } from '../graphql-types/perfume-type';\nimport { WeightType } from '../graphql-types/weight-type';\nimport { ProductType } from '../graphql-types/product-type';\nimport { SlideshowType } from '../graphql-types/slideshow-type';\n\nimport { weightModel } from '../../musclefeed-models/database';\nimport { categoryModel } from '../../musclefeed-models/database';\nimport { perfumeModel } from '../../musclefeed-models/database';\nimport { productModel } from '../../musclefeed-models/database';\nimport { slideshowModel } from '../../musclefeed-models/database';\n\nimport { bcrypt, saltSync } from '../../musclefeed-configuration';\n\nimport { addProductCategoryFunction, addProductPerfumeFunction, \n   addProductWeightFunction, addProductFunction, addSlideshowFunction } from '../../musclefeed-controllers/product-functions/product-function';\n\nconst ProductMutation = new GraphQLObjectType({ name: 'ProductMutation',\n fields: {\n    addProductCategoryQuery: { type: CategoryType, args: { name: { type: new GraphQLNonNull(GraphQLString) }, description: { type: new GraphQLNonNull(GraphQLString) } }, resolve(source, args, context, info) { return addProductCategoryFunction(args.name, args.description); } },\n    addProductPerfumeQuery: { type: PerfumeType, args: { name: { type: new GraphQLNonNull(GraphQLString) }, description: { type: new GraphQLNonNull(GraphQLString) } }, resolve(source, args, context, info) { return addProductPerfumeFunction(args.name, args.description); } },\n    addProductWeightQuery: { type: WeightType, args: { name: { type: new GraphQLNonNull(GraphQLString) }, value: { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { return addProductWeightFunction(args.name, args.value); } },\n    addProductQuery: { type: ProductType, args: { title: { type: new GraphQLNonNull(GraphQLString) }, quantity: { type: new GraphQLNonNull(GraphQLInt) }, provider: { type: new GraphQLNonNull(GraphQLString) }, description_title: { type: new GraphQLNonNull(GraphQLString) }, description: { type: new GraphQLNonNull(GraphQLString) }, image: { type: new GraphQLNonNull(GraphQLString) }, details: { type: new GraphQLNonNull(GraphQLString) } }, \n      resolve(source, args, context, info) { return addProductFunction(args.title, args.quantity, args.provider, args.description_title, args.description, args.image, args.details); } },\n    addSlideshowImageQuery: { type: SlideshowType, args: { name: { type: new GraphQLNonNull(GraphQLString) }, image: { type: new GraphQLNonNull(GraphQLString) } }, resolve(source, args, context, info) { return addSlideshowFunction(args.name, args.image); } },\n\n    deleteProductCategoryQuery: { type: CategoryType, args: { id: { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { categoryModel.destroy({ where: { id: args.id } }); } },\n    deleteProductPerfumeQuery: { type: PerfumeType, args: { id: { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { perfumeModel.destroy({ where: { id: args.id } }); } },\n    deleteProductWeightQuery: { type: WeightType, args: { id: { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { weightModel.destroy({ where: { id: args.id } }); } },\n    deleteProductQuery: { type: ProductType, args: { id: { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { productModel.destroy({ where: { id: args.id }}); } },\n    deleteSlideshowImageQuery: { type: SlideshowType, args: { id : { type: new GraphQLNonNull(GraphQLInt) } }, resolve(source, args, context, info) { slideshowModel.destroy({ where: { id: args.id }} ); } }\n }\n});\n\nexport { ProductMutation };"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876904
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions/product-function.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions/product-function.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions/product-function.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions/product-function.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions",
        "sourceFileName": "product-function.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addProductCategoryFunction = addProductCategoryFunction;\nexports.addProductPerfumeFunction = addProductPerfumeFunction;\nexports.addProductWeightFunction = addProductWeightFunction;\nexports.addProductFunction = addProductFunction;\nexports.addSlideshowFunction = addSlideshowFunction;\n\nvar _database = require(\"../../musclefeed-models/database\");\n\nfunction addProductCategoryFunction(name, description) {\n  return _database.categoryModel.create({\n    name: name,\n    description: description\n  }).then(function (category) {\n    return category;\n  });\n}\n\nfunction addProductPerfumeFunction(name, description) {\n  return _database.perfumeModel.create({\n    name: name,\n    description: description\n  }).then(function (perfume) {\n    return perfume;\n  });\n}\n\nfunction addProductWeightFunction(name, value) {\n  return _database.weightModel.create({\n    name: name,\n    value: value\n  }).then(function (weight) {\n    return weight;\n  });\n}\n\nfunction addProductFunction(title, quantity, provider, description_title, description, image, details) {\n  return _database.productModel.create({\n    title: title,\n    description_title: description_title,\n    description: description,\n    quantity: quantity,\n    provider: provider,\n    image: image,\n    details: details\n  }).then(function (product) {\n    return product;\n  });\n}\n\nfunction addSlideshowFunction(name, image) {\n  return _database.slideshowModel.create({\n    name: name,\n    image: image\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtZnVuY3Rpb24uanMiXSwibmFtZXMiOlsiYWRkUHJvZHVjdENhdGVnb3J5RnVuY3Rpb24iLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJjYXRlZ29yeU1vZGVsIiwiY3JlYXRlIiwidGhlbiIsImNhdGVnb3J5IiwiYWRkUHJvZHVjdFBlcmZ1bWVGdW5jdGlvbiIsInBlcmZ1bWVNb2RlbCIsInBlcmZ1bWUiLCJhZGRQcm9kdWN0V2VpZ2h0RnVuY3Rpb24iLCJ2YWx1ZSIsIndlaWdodE1vZGVsIiwid2VpZ2h0IiwiYWRkUHJvZHVjdEZ1bmN0aW9uIiwidGl0bGUiLCJxdWFudGl0eSIsInByb3ZpZGVyIiwiZGVzY3JpcHRpb25fdGl0bGUiLCJpbWFnZSIsImRldGFpbHMiLCJwcm9kdWN0TW9kZWwiLCJwcm9kdWN0IiwiYWRkU2xpZGVzaG93RnVuY3Rpb24iLCJzbGlkZXNob3dNb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFNTyxTQUFTQSwwQkFBVCxDQUFvQ0MsSUFBcEMsRUFBMENDLFdBQTFDLEVBQXVEO0FBQUUsU0FBT0Msd0JBQWNDLE1BQWQsQ0FBcUI7QUFBRUgsSUFBQUEsSUFBSSxFQUFFQSxJQUFSO0FBQWNDLElBQUFBLFdBQVcsRUFBRUE7QUFBM0IsR0FBckIsRUFBZ0VHLElBQWhFLENBQXFFLFVBQUNDLFFBQUQsRUFBYztBQUFFLFdBQU9BLFFBQVA7QUFBa0IsR0FBdkcsQ0FBUDtBQUFrSDs7QUFDM0ssU0FBU0MseUJBQVQsQ0FBbUNOLElBQW5DLEVBQXlDQyxXQUF6QyxFQUFzRDtBQUFFLFNBQU9NLHVCQUFhSixNQUFiLENBQW9CO0FBQUVILElBQUFBLElBQUksRUFBRUEsSUFBUjtBQUFjQyxJQUFBQSxXQUFXLEVBQUVBO0FBQTNCLEdBQXBCLEVBQThERyxJQUE5RCxDQUFtRSxVQUFDSSxPQUFELEVBQWE7QUFBRSxXQUFPQSxPQUFQO0FBQWlCLEdBQW5HLENBQVA7QUFBOEc7O0FBQ3RLLFNBQVNDLHdCQUFULENBQWtDVCxJQUFsQyxFQUF3Q1UsS0FBeEMsRUFBK0M7QUFBRSxTQUFPQyxzQkFBWVIsTUFBWixDQUFtQjtBQUFFSCxJQUFBQSxJQUFJLEVBQUVBLElBQVI7QUFBY1UsSUFBQUEsS0FBSyxFQUFFQTtBQUFyQixHQUFuQixFQUFpRE4sSUFBakQsQ0FBc0QsVUFBQ1EsTUFBRCxFQUFZO0FBQUUsV0FBT0EsTUFBUDtBQUFnQixHQUFwRixDQUFQO0FBQStGOztBQUNoSixTQUFTQyxrQkFBVCxDQUE0QkMsS0FBNUIsRUFBbUNDLFFBQW5DLEVBQTZDQyxRQUE3QyxFQUF1REMsaUJBQXZELEVBQTBFaEIsV0FBMUUsRUFBdUZpQixLQUF2RixFQUE4RkMsT0FBOUYsRUFBdUc7QUFDMUcsU0FBT0MsdUJBQWFqQixNQUFiLENBQW9CO0FBQUVXLElBQUFBLEtBQUssRUFBRUEsS0FBVDtBQUFnQkcsSUFBQUEsaUJBQWlCLEVBQUVBLGlCQUFuQztBQUFzRGhCLElBQUFBLFdBQVcsRUFBRUEsV0FBbkU7QUFBZ0ZjLElBQUFBLFFBQVEsRUFBRUEsUUFBMUY7QUFBb0dDLElBQUFBLFFBQVEsRUFBRUEsUUFBOUc7QUFBd0hFLElBQUFBLEtBQUssRUFBRUEsS0FBL0g7QUFBc0lDLElBQUFBLE9BQU8sRUFBRUE7QUFBL0ksR0FBcEIsRUFBOEtmLElBQTlLLENBQW1MLFVBQUNpQixPQUFELEVBQWE7QUFBRSxXQUFPQSxPQUFQO0FBQWlCLEdBQW5OLENBQVA7QUFBOE47O0FBQzNOLFNBQVNDLG9CQUFULENBQThCdEIsSUFBOUIsRUFBb0NrQixLQUFwQyxFQUEyQztBQUFFLFNBQU9LLHlCQUFlcEIsTUFBZixDQUFzQjtBQUFFSCxJQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUWtCLElBQUFBLEtBQUssRUFBTEE7QUFBUixHQUF0QixDQUFQO0FBQWdEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vdXNzYW1hamFhb3VhbmkvU2l0ZXMvbXVzY2xlZmVlZC5jby9tdXNjbGVmZWVkLXNlcnZlci9zb3VyY2UvbXVzY2xlZmVlZC1jb250cm9sbGVycy9wcm9kdWN0LWZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhdGVnb3J5TW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5pbXBvcnQgeyBwZXJmdW1lTW9kZWwgfSBmcm9tICcuLi8uLi9tdXNjbGVmZWVkLW1vZGVscy9kYXRhYmFzZSc7XG5pbXBvcnQgeyB3ZWlnaHRNb2RlbCB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcbmltcG9ydCB7IHByb2R1Y3RNb2RlbCB9IGZyb20gJy4uLy4uL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcbmltcG9ydCB7IHNsaWRlc2hvd01vZGVsIH0gZnJvbSAnLi4vLi4vbXVzY2xlZmVlZC1tb2RlbHMvZGF0YWJhc2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUHJvZHVjdENhdGVnb3J5RnVuY3Rpb24obmFtZSwgZGVzY3JpcHRpb24pIHsgcmV0dXJuIGNhdGVnb3J5TW9kZWwuY3JlYXRlKHsgbmFtZTogbmFtZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIH0pIC50aGVuKChjYXRlZ29yeSkgPT4geyByZXR1cm4gY2F0ZWdvcnk7IH0pOyB9XG5leHBvcnQgZnVuY3Rpb24gYWRkUHJvZHVjdFBlcmZ1bWVGdW5jdGlvbihuYW1lLCBkZXNjcmlwdGlvbikgeyByZXR1cm4gcGVyZnVtZU1vZGVsLmNyZWF0ZSh7IG5hbWU6IG5hbWUsIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiB9KS50aGVuKChwZXJmdW1lKSA9PiB7IHJldHVybiBwZXJmdW1lOyB9KTsgfVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFByb2R1Y3RXZWlnaHRGdW5jdGlvbihuYW1lLCB2YWx1ZSkgeyByZXR1cm4gd2VpZ2h0TW9kZWwuY3JlYXRlKHsgbmFtZTogbmFtZSwgdmFsdWU6IHZhbHVlIH0pLnRoZW4oKHdlaWdodCkgPT4geyByZXR1cm4gd2VpZ2h0OyB9KTsgfVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFByb2R1Y3RGdW5jdGlvbih0aXRsZSwgcXVhbnRpdHksIHByb3ZpZGVyLCBkZXNjcmlwdGlvbl90aXRsZSwgZGVzY3JpcHRpb24sIGltYWdlLCBkZXRhaWxzKSB7IFxuICAgIHJldHVybiBwcm9kdWN0TW9kZWwuY3JlYXRlKHsgdGl0bGU6IHRpdGxlLCBkZXNjcmlwdGlvbl90aXRsZTogZGVzY3JpcHRpb25fdGl0bGUsIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwgcXVhbnRpdHk6IHF1YW50aXR5LCBwcm92aWRlcjogcHJvdmlkZXIsIGltYWdlOiBpbWFnZSwgZGV0YWlsczogZGV0YWlscyB9KS50aGVuKChwcm9kdWN0KSA9PiB7IHJldHVybiBwcm9kdWN0OyB9KTsgfVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFNsaWRlc2hvd0Z1bmN0aW9uKG5hbWUsIGltYWdlKSB7IHJldHVybiBzbGlkZXNob3dNb2RlbC5jcmVhdGUoeyBuYW1lLCBpbWFnZSB9KTsgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "product-function.js"
      ],
      "names": [
        "addProductCategoryFunction",
        "name",
        "description",
        "categoryModel",
        "create",
        "then",
        "category",
        "addProductPerfumeFunction",
        "perfumeModel",
        "perfume",
        "addProductWeightFunction",
        "value",
        "weightModel",
        "weight",
        "addProductFunction",
        "title",
        "quantity",
        "provider",
        "description_title",
        "image",
        "details",
        "productModel",
        "product",
        "addSlideshowFunction",
        "slideshowModel"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AAMO,SAASA,0BAAT,CAAoCC,IAApC,EAA0CC,WAA1C,EAAuD;AAAE,SAAOC,wBAAcC,MAAd,CAAqB;AAAEH,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,WAAW,EAAEA;AAA3B,GAArB,EAAgEG,IAAhE,CAAqE,UAACC,QAAD,EAAc;AAAE,WAAOA,QAAP;AAAkB,GAAvG,CAAP;AAAkH;;AAC3K,SAASC,yBAAT,CAAmCN,IAAnC,EAAyCC,WAAzC,EAAsD;AAAE,SAAOM,uBAAaJ,MAAb,CAAoB;AAAEH,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,WAAW,EAAEA;AAA3B,GAApB,EAA8DG,IAA9D,CAAmE,UAACI,OAAD,EAAa;AAAE,WAAOA,OAAP;AAAiB,GAAnG,CAAP;AAA8G;;AACtK,SAASC,wBAAT,CAAkCT,IAAlC,EAAwCU,KAAxC,EAA+C;AAAE,SAAOC,sBAAYR,MAAZ,CAAmB;AAAEH,IAAAA,IAAI,EAAEA,IAAR;AAAcU,IAAAA,KAAK,EAAEA;AAArB,GAAnB,EAAiDN,IAAjD,CAAsD,UAACQ,MAAD,EAAY;AAAE,WAAOA,MAAP;AAAgB,GAApF,CAAP;AAA+F;;AAChJ,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,iBAAvD,EAA0EhB,WAA1E,EAAuFiB,KAAvF,EAA8FC,OAA9F,EAAuG;AAC1G,SAAOC,uBAAajB,MAAb,CAAoB;AAAEW,IAAAA,KAAK,EAAEA,KAAT;AAAgBG,IAAAA,iBAAiB,EAAEA,iBAAnC;AAAsDhB,IAAAA,WAAW,EAAEA,WAAnE;AAAgFc,IAAAA,QAAQ,EAAEA,QAA1F;AAAoGC,IAAAA,QAAQ,EAAEA,QAA9G;AAAwHE,IAAAA,KAAK,EAAEA,KAA/H;AAAsIC,IAAAA,OAAO,EAAEA;AAA/I,GAApB,EAA8Kf,IAA9K,CAAmL,UAACiB,OAAD,EAAa;AAAE,WAAOA,OAAP;AAAiB,GAAnN,CAAP;AAA8N;;AAC3N,SAASC,oBAAT,CAA8BtB,IAA9B,EAAoCkB,KAApC,EAA2C;AAAE,SAAOK,yBAAepB,MAAf,CAAsB;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQkB,IAAAA,KAAK,EAALA;AAAR,GAAtB,CAAP;AAAgD",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/musclefeed-controllers/product-functions",
      "sourcesContent": [
        "import { categoryModel } from '../../musclefeed-models/database';\nimport { perfumeModel } from '../../musclefeed-models/database';\nimport { weightModel } from '../../musclefeed-models/database';\nimport { productModel } from '../../musclefeed-models/database';\nimport { slideshowModel } from '../../musclefeed-models/database';\n\nexport function addProductCategoryFunction(name, description) { return categoryModel.create({ name: name, description: description }) .then((category) => { return category; }); }\nexport function addProductPerfumeFunction(name, description) { return perfumeModel.create({ name: name, description: description }).then((perfume) => { return perfume; }); }\nexport function addProductWeightFunction(name, value) { return weightModel.create({ name: name, value: value }).then((weight) => { return weight; }); }\nexport function addProductFunction(title, quantity, provider, description_title, description, image, details) { \n    return productModel.create({ title: title, description_title: description_title, description: description, quantity: quantity, provider: provider, image: image, details: details }).then((product) => { return product; }); }\nexport function addSlideshowFunction(name, image) { return slideshowModel.create({ name, image }); }"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445876904
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/protected.middleware.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/protected.middleware.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/protected.middleware.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source/protected.middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
        "sourceFileName": "protected.middleware.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adminIsLogged = adminIsLogged;\nexports.adminIsNotLogged = adminIsNotLogged;\nexports.userIsLogged = userIsLogged;\nexports.userIsNotLogged = userIsNotLogged;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _musclefeedConfiguration = require(\"./musclefeed-configuration\");\n\nvar _database = require(\"./musclefeed-models/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction adminIsLogged(request, response, next) {\n  return _jsonwebtoken[\"default\"].verify(request.cookies['authentication-token'], _musclefeedConfiguration.jwtSecret, function (error, decoded) {\n    if (error) {\n      return response.redirect('/admin-account');\n    }\n\n    if (decoded) {\n      if (!decoded.hasOwnProperty('adminID')) {\n        next();\n        return;\n      }\n\n      _database.personModel.findOne({\n        where: {\n          id: decoded.adminID,\n          is_admin: true\n        }\n      }).then(function (admin) {\n        if (!admin) {\n          return response.redirect('/admin-account');\n        }\n\n        next();\n        return;\n      });\n    }\n  });\n}\n\nfunction adminIsNotLogged(request, response, next) {\n  return _jsonwebtoken[\"default\"].verify(request.cookies['authentication-token'], _musclefeedConfiguration.jwtSecret, function (error, decoded) {\n    if (error) {\n      next();\n      return;\n    }\n\n    if (decoded) {\n      if (!decoded.hasOwnProperty('adminID')) {\n        next();\n        return;\n      }\n\n      _database.personModel.findOne({\n        where: {\n          id: decoded.adminID,\n          is_admin: true\n        }\n      }).then(function (admin) {\n        if (!admin) {\n          next();\n          return;\n        }\n\n        return response.redirect('/admin-dashboard');\n      });\n    }\n  });\n}\n\nfunction userIsLogged(request, response, next) {\n  return _jsonwebtoken[\"default\"].verify(request.cookies['authentication-token'], _musclefeedConfiguration.jwtSecret, function (error, decoded) {\n    if (error) {\n      return response.redirect('/user-account');\n    }\n\n    if (decoded) {\n      if (!decoded.hasOwnProperty('userID')) {\n        next();\n        return;\n      }\n\n      _database.personModel.findOne({\n        where: {\n          id: decoded.userID\n        }\n      }).then(function (admin) {\n        if (!admin) {\n          return response.redirect('/user-account');\n        }\n\n        next();\n        return;\n      });\n    }\n  });\n}\n\nfunction userIsNotLogged(request, response, next) {\n  return _jsonwebtoken[\"default\"].verify(request.cookies['authentication-token'], _musclefeedConfiguration.jwtSecret, function (error, decoded) {\n    if (error) {\n      next();\n      return;\n    }\n\n    if (decoded) {\n      if (!decoded.hasOwnProperty('userID')) {\n        next();\n        return;\n      }\n\n      _database.personModel.findOne({\n        where: {\n          id: decoded.userID\n        }\n      }).then(function (user) {\n        if (!user) {\n          next();\n          return;\n        }\n\n        return response.redirect('/user-dashboard');\n      });\n    }\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3RlY3RlZC5taWRkbGV3YXJlLmpzIl0sIm5hbWVzIjpbImFkbWluSXNMb2dnZWQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJuZXh0Iiwiand0IiwidmVyaWZ5IiwiY29va2llcyIsImp3dFNlY3JldCIsImVycm9yIiwiZGVjb2RlZCIsInJlZGlyZWN0IiwiaGFzT3duUHJvcGVydHkiLCJwZXJzb25Nb2RlbCIsImZpbmRPbmUiLCJ3aGVyZSIsImlkIiwiYWRtaW5JRCIsImlzX2FkbWluIiwidGhlbiIsImFkbWluIiwiYWRtaW5Jc05vdExvZ2dlZCIsInVzZXJJc0xvZ2dlZCIsInVzZXJJRCIsInVzZXJJc05vdExvZ2dlZCIsInVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVPLFNBQVNBLGFBQVQsQ0FBdUJDLE9BQXZCLEVBQWdDQyxRQUFoQyxFQUEwQ0MsSUFBMUMsRUFBZ0Q7QUFDbkQsU0FBT0MseUJBQUlDLE1BQUosQ0FBV0osT0FBTyxDQUFDSyxPQUFSLENBQWdCLHNCQUFoQixDQUFYLEVBQW9EQyxrQ0FBcEQsRUFBK0QsVUFBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQ3RGLFFBQUdELEtBQUgsRUFBVTtBQUFFLGFBQU9OLFFBQVEsQ0FBQ1EsUUFBVCxDQUFrQixnQkFBbEIsQ0FBUDtBQUE2Qzs7QUFDekQsUUFBR0QsT0FBSCxFQUFZO0FBQ1IsVUFBRyxDQUFDQSxPQUFPLENBQUNFLGNBQVIsQ0FBdUIsU0FBdkIsQ0FBSixFQUF1QztBQUFFUixRQUFBQSxJQUFJO0FBQUk7QUFBUzs7QUFDMURTLDRCQUFZQyxPQUFaLENBQW9CO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFFQyxVQUFBQSxFQUFFLEVBQUVOLE9BQU8sQ0FBQ08sT0FBZDtBQUF1QkMsVUFBQUEsUUFBUSxFQUFFO0FBQWpDO0FBQVQsT0FBcEIsRUFBdUVDLElBQXZFLENBQTRFLFVBQUNDLEtBQUQsRUFBVztBQUFFLFlBQUcsQ0FBQ0EsS0FBSixFQUFXO0FBQUUsaUJBQU9qQixRQUFRLENBQUNRLFFBQVQsQ0FBa0IsZ0JBQWxCLENBQVA7QUFBNkM7O0FBQUNQLFFBQUFBLElBQUk7QUFBSTtBQUFTLE9BQXJLO0FBQXlLO0FBQ2hMLEdBTE0sQ0FBUDtBQU1IOztBQUNNLFNBQVNpQixnQkFBVCxDQUEwQm5CLE9BQTFCLEVBQW1DQyxRQUFuQyxFQUE2Q0MsSUFBN0MsRUFBbUQ7QUFDdEQsU0FBT0MseUJBQUlDLE1BQUosQ0FBV0osT0FBTyxDQUFDSyxPQUFSLENBQWdCLHNCQUFoQixDQUFYLEVBQW9EQyxrQ0FBcEQsRUFBK0QsVUFBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQ3RGLFFBQUdELEtBQUgsRUFBVTtBQUFFTCxNQUFBQSxJQUFJO0FBQUk7QUFBUzs7QUFDN0IsUUFBR00sT0FBSCxFQUFZO0FBQ1IsVUFBRyxDQUFDQSxPQUFPLENBQUNFLGNBQVIsQ0FBdUIsU0FBdkIsQ0FBSixFQUF1QztBQUFFUixRQUFBQSxJQUFJO0FBQUk7QUFBUzs7QUFDMURTLDRCQUFZQyxPQUFaLENBQW9CO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFFQyxVQUFBQSxFQUFFLEVBQUVOLE9BQU8sQ0FBQ08sT0FBZDtBQUF1QkMsVUFBQUEsUUFBUSxFQUFFO0FBQWpDO0FBQVQsT0FBcEIsRUFBdUVDLElBQXZFLENBQTRFLFVBQUNDLEtBQUQsRUFBVztBQUFFLFlBQUcsQ0FBQ0EsS0FBSixFQUFXO0FBQUVoQixVQUFBQSxJQUFJO0FBQUk7QUFBUzs7QUFBQyxlQUFPRCxRQUFRLENBQUNRLFFBQVQsQ0FBa0Isa0JBQWxCLENBQVA7QUFBK0MsT0FBdks7QUFBMks7QUFDbEwsR0FMTSxDQUFQO0FBTUg7O0FBRU0sU0FBU1csWUFBVCxDQUFzQnBCLE9BQXRCLEVBQStCQyxRQUEvQixFQUF5Q0MsSUFBekMsRUFBK0M7QUFDbEQsU0FBT0MseUJBQUlDLE1BQUosQ0FBV0osT0FBTyxDQUFDSyxPQUFSLENBQWdCLHNCQUFoQixDQUFYLEVBQW9EQyxrQ0FBcEQsRUFBK0QsVUFBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQ3RGLFFBQUdELEtBQUgsRUFBVTtBQUFFLGFBQU9OLFFBQVEsQ0FBQ1EsUUFBVCxDQUFrQixlQUFsQixDQUFQO0FBQTRDOztBQUN4RCxRQUFHRCxPQUFILEVBQVk7QUFDUixVQUFHLENBQUNBLE9BQU8sQ0FBQ0UsY0FBUixDQUF1QixRQUF2QixDQUFKLEVBQXNDO0FBQUVSLFFBQUFBLElBQUk7QUFBSTtBQUFTOztBQUN6RFMsNEJBQVlDLE9BQVosQ0FBb0I7QUFBRUMsUUFBQUEsS0FBSyxFQUFFO0FBQUVDLFVBQUFBLEVBQUUsRUFBRU4sT0FBTyxDQUFDYTtBQUFkO0FBQVQsT0FBcEIsRUFBc0RKLElBQXRELENBQTJELFVBQUNDLEtBQUQsRUFBVztBQUFFLFlBQUcsQ0FBQ0EsS0FBSixFQUFXO0FBQUUsaUJBQU9qQixRQUFRLENBQUNRLFFBQVQsQ0FBa0IsZUFBbEIsQ0FBUDtBQUE0Qzs7QUFBQ1AsUUFBQUEsSUFBSTtBQUFJO0FBQVMsT0FBbko7QUFBdUo7QUFDOUosR0FMTSxDQUFQO0FBTUg7O0FBQ00sU0FBU29CLGVBQVQsQ0FBeUJ0QixPQUF6QixFQUFrQ0MsUUFBbEMsRUFBNENDLElBQTVDLEVBQWtEO0FBQ3JELFNBQU9DLHlCQUFJQyxNQUFKLENBQVdKLE9BQU8sQ0FBQ0ssT0FBUixDQUFnQixzQkFBaEIsQ0FBWCxFQUFvREMsa0NBQXBELEVBQStELFVBQUNDLEtBQUQsRUFBUUMsT0FBUixFQUFvQjtBQUN0RixRQUFHRCxLQUFILEVBQVU7QUFBRUwsTUFBQUEsSUFBSTtBQUFJO0FBQVM7O0FBQzdCLFFBQUdNLE9BQUgsRUFBWTtBQUNSLFVBQUcsQ0FBQ0EsT0FBTyxDQUFDRSxjQUFSLENBQXVCLFFBQXZCLENBQUosRUFBc0M7QUFBRVIsUUFBQUEsSUFBSTtBQUFJO0FBQVM7O0FBQ3pEUyw0QkFBWUMsT0FBWixDQUFvQjtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBRUMsVUFBQUEsRUFBRSxFQUFFTixPQUFPLENBQUNhO0FBQWQ7QUFBVCxPQUFwQixFQUFzREosSUFBdEQsQ0FBMkQsVUFBQ00sSUFBRCxFQUFVO0FBQUUsWUFBRyxDQUFDQSxJQUFKLEVBQVU7QUFBRXJCLFVBQUFBLElBQUk7QUFBSTtBQUFTOztBQUFDLGVBQU9ELFFBQVEsQ0FBQ1EsUUFBVCxDQUFrQixpQkFBbEIsQ0FBUDtBQUE4QyxPQUFuSjtBQUF1SjtBQUM5SixHQUxNLENBQVA7QUFNSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIvc291cmNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IHsgand0U2VjcmV0IH0gZnJvbSAnLi9tdXNjbGVmZWVkLWNvbmZpZ3VyYXRpb24nO1xuaW1wb3J0IHsgcGVyc29uTW9kZWwgfSBmcm9tICcuL211c2NsZWZlZWQtbW9kZWxzL2RhdGFiYXNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkbWluSXNMb2dnZWQocmVxdWVzdCwgcmVzcG9uc2UsIG5leHQpIHtcbiAgICByZXR1cm4gand0LnZlcmlmeShyZXF1ZXN0LmNvb2tpZXNbJ2F1dGhlbnRpY2F0aW9uLXRva2VuJ10sIGp3dFNlY3JldCwgKGVycm9yLCBkZWNvZGVkKSA9PiB7XG4gICAgICAgIGlmKGVycm9yKSB7IHJldHVybiByZXNwb25zZS5yZWRpcmVjdCgnL2FkbWluLWFjY291bnQnKTsgfVxuICAgICAgICBpZihkZWNvZGVkKSB7IFxuICAgICAgICAgICAgaWYoIWRlY29kZWQuaGFzT3duUHJvcGVydHkoJ2FkbWluSUQnKSkgeyBuZXh0KCk7IHJldHVybjsgfVxuICAgICAgICAgICAgcGVyc29uTW9kZWwuZmluZE9uZSh7IHdoZXJlOiB7IGlkOiBkZWNvZGVkLmFkbWluSUQsIGlzX2FkbWluOiB0cnVlIH19KS50aGVuKChhZG1pbikgPT4geyBpZighYWRtaW4pIHsgcmV0dXJuIHJlc3BvbnNlLnJlZGlyZWN0KCcvYWRtaW4tYWNjb3VudCcpOyB9IG5leHQoKTsgcmV0dXJuOyB9KTsgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkbWluSXNOb3RMb2dnZWQocmVxdWVzdCwgcmVzcG9uc2UsIG5leHQpIHtcbiAgICByZXR1cm4gand0LnZlcmlmeShyZXF1ZXN0LmNvb2tpZXNbJ2F1dGhlbnRpY2F0aW9uLXRva2VuJ10sIGp3dFNlY3JldCwgKGVycm9yLCBkZWNvZGVkKSA9PiB7XG4gICAgICAgIGlmKGVycm9yKSB7IG5leHQoKTsgcmV0dXJuOyB9XG4gICAgICAgIGlmKGRlY29kZWQpIHtcbiAgICAgICAgICAgIGlmKCFkZWNvZGVkLmhhc093blByb3BlcnR5KCdhZG1pbklEJykpIHsgbmV4dCgpOyByZXR1cm47IH1cbiAgICAgICAgICAgIHBlcnNvbk1vZGVsLmZpbmRPbmUoeyB3aGVyZTogeyBpZDogZGVjb2RlZC5hZG1pbklELCBpc19hZG1pbjogdHJ1ZSB9fSkudGhlbigoYWRtaW4pID0+IHsgaWYoIWFkbWluKSB7IG5leHQoKTsgcmV0dXJuOyB9IHJldHVybiByZXNwb25zZS5yZWRpcmVjdCgnL2FkbWluLWRhc2hib2FyZCcpOyB9KTsgfVxuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlcklzTG9nZ2VkKHJlcXVlc3QsIHJlc3BvbnNlLCBuZXh0KSB7XG4gICAgcmV0dXJuIGp3dC52ZXJpZnkocmVxdWVzdC5jb29raWVzWydhdXRoZW50aWNhdGlvbi10b2tlbiddLCBqd3RTZWNyZXQsIChlcnJvciwgZGVjb2RlZCkgPT4ge1xuICAgICAgICBpZihlcnJvcikgeyByZXR1cm4gcmVzcG9uc2UucmVkaXJlY3QoJy91c2VyLWFjY291bnQnKTsgfVxuICAgICAgICBpZihkZWNvZGVkKSB7IFxuICAgICAgICAgICAgaWYoIWRlY29kZWQuaGFzT3duUHJvcGVydHkoJ3VzZXJJRCcpKSB7IG5leHQoKTsgcmV0dXJuOyB9XG4gICAgICAgICAgICBwZXJzb25Nb2RlbC5maW5kT25lKHsgd2hlcmU6IHsgaWQ6IGRlY29kZWQudXNlcklEIH19KS50aGVuKChhZG1pbikgPT4geyBpZighYWRtaW4pIHsgcmV0dXJuIHJlc3BvbnNlLnJlZGlyZWN0KCcvdXNlci1hY2NvdW50Jyk7IH0gbmV4dCgpOyByZXR1cm47IH0pOyB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlcklzTm90TG9nZ2VkKHJlcXVlc3QsIHJlc3BvbnNlLCBuZXh0KSB7XG4gICAgcmV0dXJuIGp3dC52ZXJpZnkocmVxdWVzdC5jb29raWVzWydhdXRoZW50aWNhdGlvbi10b2tlbiddLCBqd3RTZWNyZXQsIChlcnJvciwgZGVjb2RlZCkgPT4ge1xuICAgICAgICBpZihlcnJvcikgeyBuZXh0KCk7IHJldHVybjsgfVxuICAgICAgICBpZihkZWNvZGVkKSB7XG4gICAgICAgICAgICBpZighZGVjb2RlZC5oYXNPd25Qcm9wZXJ0eSgndXNlcklEJykpIHsgbmV4dCgpOyByZXR1cm47IH0gIFxuICAgICAgICAgICAgcGVyc29uTW9kZWwuZmluZE9uZSh7IHdoZXJlOiB7IGlkOiBkZWNvZGVkLnVzZXJJRCB9fSkudGhlbigodXNlcikgPT4geyBpZighdXNlcikgeyBuZXh0KCk7IHJldHVybjsgfSByZXR1cm4gcmVzcG9uc2UucmVkaXJlY3QoJy91c2VyLWRhc2hib2FyZCcpOyB9KTsgfVxuICAgIH0pO1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "protected.middleware.js"
      ],
      "names": [
        "adminIsLogged",
        "request",
        "response",
        "next",
        "jwt",
        "verify",
        "cookies",
        "jwtSecret",
        "error",
        "decoded",
        "redirect",
        "hasOwnProperty",
        "personModel",
        "findOne",
        "where",
        "id",
        "adminID",
        "is_admin",
        "then",
        "admin",
        "adminIsNotLogged",
        "userIsLogged",
        "userID",
        "userIsNotLogged",
        "user"
      ],
      "mappings": ";;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,SAASA,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,IAA1C,EAAgD;AACnD,SAAOC,yBAAIC,MAAJ,CAAWJ,OAAO,CAACK,OAAR,CAAgB,sBAAhB,CAAX,EAAoDC,kCAApD,EAA+D,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACtF,QAAGD,KAAH,EAAU;AAAE,aAAON,QAAQ,CAACQ,QAAT,CAAkB,gBAAlB,CAAP;AAA6C;;AACzD,QAAGD,OAAH,EAAY;AACR,UAAG,CAACA,OAAO,CAACE,cAAR,CAAuB,SAAvB,CAAJ,EAAuC;AAAER,QAAAA,IAAI;AAAI;AAAS;;AAC1DS,4BAAYC,OAAZ,CAAoB;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEN,OAAO,CAACO,OAAd;AAAuBC,UAAAA,QAAQ,EAAE;AAAjC;AAAT,OAApB,EAAuEC,IAAvE,CAA4E,UAACC,KAAD,EAAW;AAAE,YAAG,CAACA,KAAJ,EAAW;AAAE,iBAAOjB,QAAQ,CAACQ,QAAT,CAAkB,gBAAlB,CAAP;AAA6C;;AAACP,QAAAA,IAAI;AAAI;AAAS,OAArK;AAAyK;AAChL,GALM,CAAP;AAMH;;AACM,SAASiB,gBAAT,CAA0BnB,OAA1B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmD;AACtD,SAAOC,yBAAIC,MAAJ,CAAWJ,OAAO,CAACK,OAAR,CAAgB,sBAAhB,CAAX,EAAoDC,kCAApD,EAA+D,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACtF,QAAGD,KAAH,EAAU;AAAEL,MAAAA,IAAI;AAAI;AAAS;;AAC7B,QAAGM,OAAH,EAAY;AACR,UAAG,CAACA,OAAO,CAACE,cAAR,CAAuB,SAAvB,CAAJ,EAAuC;AAAER,QAAAA,IAAI;AAAI;AAAS;;AAC1DS,4BAAYC,OAAZ,CAAoB;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEN,OAAO,CAACO,OAAd;AAAuBC,UAAAA,QAAQ,EAAE;AAAjC;AAAT,OAApB,EAAuEC,IAAvE,CAA4E,UAACC,KAAD,EAAW;AAAE,YAAG,CAACA,KAAJ,EAAW;AAAEhB,UAAAA,IAAI;AAAI;AAAS;;AAAC,eAAOD,QAAQ,CAACQ,QAAT,CAAkB,kBAAlB,CAAP;AAA+C,OAAvK;AAA2K;AAClL,GALM,CAAP;AAMH;;AAEM,SAASW,YAAT,CAAsBpB,OAAtB,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AAClD,SAAOC,yBAAIC,MAAJ,CAAWJ,OAAO,CAACK,OAAR,CAAgB,sBAAhB,CAAX,EAAoDC,kCAApD,EAA+D,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACtF,QAAGD,KAAH,EAAU;AAAE,aAAON,QAAQ,CAACQ,QAAT,CAAkB,eAAlB,CAAP;AAA4C;;AACxD,QAAGD,OAAH,EAAY;AACR,UAAG,CAACA,OAAO,CAACE,cAAR,CAAuB,QAAvB,CAAJ,EAAsC;AAAER,QAAAA,IAAI;AAAI;AAAS;;AACzDS,4BAAYC,OAAZ,CAAoB;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEN,OAAO,CAACa;AAAd;AAAT,OAApB,EAAsDJ,IAAtD,CAA2D,UAACC,KAAD,EAAW;AAAE,YAAG,CAACA,KAAJ,EAAW;AAAE,iBAAOjB,QAAQ,CAACQ,QAAT,CAAkB,eAAlB,CAAP;AAA4C;;AAACP,QAAAA,IAAI;AAAI;AAAS,OAAnJ;AAAuJ;AAC9J,GALM,CAAP;AAMH;;AACM,SAASoB,eAAT,CAAyBtB,OAAzB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;AACrD,SAAOC,yBAAIC,MAAJ,CAAWJ,OAAO,CAACK,OAAR,CAAgB,sBAAhB,CAAX,EAAoDC,kCAApD,EAA+D,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACtF,QAAGD,KAAH,EAAU;AAAEL,MAAAA,IAAI;AAAI;AAAS;;AAC7B,QAAGM,OAAH,EAAY;AACR,UAAG,CAACA,OAAO,CAACE,cAAR,CAAuB,QAAvB,CAAJ,EAAsC;AAAER,QAAAA,IAAI;AAAI;AAAS;;AACzDS,4BAAYC,OAAZ,CAAoB;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEN,OAAO,CAACa;AAAd;AAAT,OAApB,EAAsDJ,IAAtD,CAA2D,UAACM,IAAD,EAAU;AAAE,YAAG,CAACA,IAAJ,EAAU;AAAErB,UAAAA,IAAI;AAAI;AAAS;;AAAC,eAAOD,QAAQ,CAACQ,QAAT,CAAkB,iBAAlB,CAAP;AAA8C,OAAnJ;AAAuJ;AAC9J,GALM,CAAP;AAMH",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/source",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport { jwtSecret } from './musclefeed-configuration';\nimport { personModel } from './musclefeed-models/database';\n\nexport function adminIsLogged(request, response, next) {\n    return jwt.verify(request.cookies['authentication-token'], jwtSecret, (error, decoded) => {\n        if(error) { return response.redirect('/admin-account'); }\n        if(decoded) { \n            if(!decoded.hasOwnProperty('adminID')) { next(); return; }\n            personModel.findOne({ where: { id: decoded.adminID, is_admin: true }}).then((admin) => { if(!admin) { return response.redirect('/admin-account'); } next(); return; }); }\n    });\n}\nexport function adminIsNotLogged(request, response, next) {\n    return jwt.verify(request.cookies['authentication-token'], jwtSecret, (error, decoded) => {\n        if(error) { next(); return; }\n        if(decoded) {\n            if(!decoded.hasOwnProperty('adminID')) { next(); return; }\n            personModel.findOne({ where: { id: decoded.adminID, is_admin: true }}).then((admin) => { if(!admin) { next(); return; } return response.redirect('/admin-dashboard'); }); }\n    });\n}\n\nexport function userIsLogged(request, response, next) {\n    return jwt.verify(request.cookies['authentication-token'], jwtSecret, (error, decoded) => {\n        if(error) { return response.redirect('/user-account'); }\n        if(decoded) { \n            if(!decoded.hasOwnProperty('userID')) { next(); return; }\n            personModel.findOne({ where: { id: decoded.userID }}).then((admin) => { if(!admin) { return response.redirect('/user-account'); } next(); return; }); }\n    });\n}\nexport function userIsNotLogged(request, response, next) {\n    return jwt.verify(request.cookies['authentication-token'], jwtSecret, (error, decoded) => {\n        if(error) { next(); return; }\n        if(decoded) {\n            if(!decoded.hasOwnProperty('userID')) { next(); return; }  \n            personModel.findOne({ where: { id: decoded.userID }}).then((user) => { if(!user) { next(); return; } return response.redirect('/user-dashboard'); }); }\n    });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558456760587
  },
  "{\"sourceRoot\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"filename\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/next.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/next.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/next.config.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server/next.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
        "sourceFileName": "next.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar withCSS = require('@zeit/next-css');\n\nvar withSass = require('@zeit/next-sass');\n\nvar withLess = require('@zeit/next-less');\n\nvar withFonts = require('next-fonts');\n\nvar withImages = require('next-images');\n\nmodule.exports = withImages(withFonts(withLess(withSass(withCSS({\n  lessLoaderOptions: {\n    javascriptEnabled: true\n  }\n})), {\n  enableSvg: true\n}))); //module.exports = { webpack: config => { config.node = { fs: 'empty' }; return config; } }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5leHQuY29uZmlnLmpzIl0sIm5hbWVzIjpbIndpdGhDU1MiLCJyZXF1aXJlIiwid2l0aFNhc3MiLCJ3aXRoTGVzcyIsIndpdGhGb250cyIsIndpdGhJbWFnZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwibGVzc0xvYWRlck9wdGlvbnMiLCJqYXZhc2NyaXB0RW5hYmxlZCIsImVuYWJsZVN2ZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUF2Qjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxpQkFBRCxDQUF4Qjs7QUFDQSxJQUFNRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXpCOztBQUNBLElBQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBRUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkYsVUFBVSxDQUFDRCxTQUFTLENBQUNELFFBQVEsQ0FBQ0QsUUFBUSxDQUFDRixPQUFPLENBQUM7QUFBRVEsRUFBQUEsaUJBQWlCLEVBQUU7QUFBRUMsSUFBQUEsaUJBQWlCLEVBQUU7QUFBckI7QUFBckIsQ0FBRCxDQUFSLENBQVQsRUFBd0U7QUFBRUMsRUFBQUEsU0FBUyxFQUFFO0FBQWIsQ0FBeEUsQ0FBVCxDQUFWLENBQTNCLEMsQ0FDQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3Vzc2FtYWphYW91YW5pL1NpdGVzL211c2NsZWZlZWQuY28vbXVzY2xlZmVlZC1zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3aXRoQ1NTID0gcmVxdWlyZSgnQHplaXQvbmV4dC1jc3MnKTtcbmNvbnN0IHdpdGhTYXNzID0gcmVxdWlyZSgnQHplaXQvbmV4dC1zYXNzJyk7XG5jb25zdCB3aXRoTGVzcyA9IHJlcXVpcmUoJ0B6ZWl0L25leHQtbGVzcycpO1xuY29uc3Qgd2l0aEZvbnRzID0gcmVxdWlyZSgnbmV4dC1mb250cycpO1xuY29uc3Qgd2l0aEltYWdlcyA9IHJlcXVpcmUoJ25leHQtaW1hZ2VzJylcblxubW9kdWxlLmV4cG9ydHMgPSB3aXRoSW1hZ2VzKHdpdGhGb250cyh3aXRoTGVzcyh3aXRoU2Fzcyh3aXRoQ1NTKHsgbGVzc0xvYWRlck9wdGlvbnM6IHsgamF2YXNjcmlwdEVuYWJsZWQ6IHRydWUgfSB9KSksIHsgZW5hYmxlU3ZnOiB0cnVlIH0pKSk7XG4vL21vZHVsZS5leHBvcnRzID0geyB3ZWJwYWNrOiBjb25maWcgPT4geyBjb25maWcubm9kZSA9IHsgZnM6ICdlbXB0eScgfTsgcmV0dXJuIGNvbmZpZzsgfSB9XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "next.config.js"
      ],
      "names": [
        "withCSS",
        "require",
        "withSass",
        "withLess",
        "withFonts",
        "withImages",
        "module",
        "exports",
        "lessLoaderOptions",
        "javascriptEnabled",
        "enableSvg"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AAEAK,MAAM,CAACC,OAAP,GAAiBF,UAAU,CAACD,SAAS,CAACD,QAAQ,CAACD,QAAQ,CAACF,OAAO,CAAC;AAAEQ,EAAAA,iBAAiB,EAAE;AAAEC,IAAAA,iBAAiB,EAAE;AAArB;AAArB,CAAD,CAAR,CAAT,EAAwE;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAxE,CAAT,CAAV,CAA3B,C,CACA",
      "sourceRoot": "/Users/oussamajaaouani/Sites/musclefeed.co/musclefeed-server",
      "sourcesContent": [
        "const withCSS = require('@zeit/next-css');\nconst withSass = require('@zeit/next-sass');\nconst withLess = require('@zeit/next-less');\nconst withFonts = require('next-fonts');\nconst withImages = require('next-images')\n\nmodule.exports = withImages(withFonts(withLess(withSass(withCSS({ lessLoaderOptions: { javascriptEnabled: true } })), { enableSvg: true })));\n//module.exports = { webpack: config => { config.node = { fs: 'empty' }; return config; } }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558445871265
  }
}