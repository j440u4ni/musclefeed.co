{"ast":null,"code":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { GuestHeader } from '../source/components/component-header-guest';\nimport { GuestFooter } from '../source/components/component-footer-guest';\nimport { GuestNavbar } from '../source/components/component-navbar-guest';\nimport { connect } from 'react-redux';\nimport { Carousel } from 'antd';\nimport '../static/resources/main-application.scss';\nimport { fetchAllProducts, fetchAllSlideshowImages } from '../source/components/redux-actions/product-action';\n\nvar SHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SHome, _Component);\n\n  function SHome(props) {\n    var _this;\n\n    _classCallCheck(this, SHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SHome).call(this, props));\n    _this.state = {\n      slideshow: null,\n      products: null\n    };\n    return _this;\n  }\n\n  _createClass(SHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      dispatch(fetchAllProducts());\n      dispatch(fetchAllSlideshowImages());\n\n      if (this.props.products && typeof this.props.products === \"string\") {\n        this.setState({\n          products: typeof this.props.products === \"string\" && this.props.products.length > 2 ? JSON.parse(this.props.products) : this.props.products\n        });\n      }\n\n      if (this.props.slideshow && typeof this.props.slideshow === \"string\") {\n        this.setState({\n          slideshow: typeof this.props.slideshow === \"string\" && this.props.slideshow.length > 2 ? JSON.parse(this.props.slideshow) : this.props.slideshow\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previous) {\n      if (previous.products !== this.props.products) {\n        this.setState({\n          products: typeof this.props.products === \"string\" && this.props.products.length > 2 ? JSON.parse(this.props.products) : this.props.products\n        });\n      }\n\n      if (previous.slideshow !== this.props.slideshow) {\n        this.setState({\n          slideshow: typeof this.props.slideshow === \"string\" && this.props.slideshow.length > 2 ? JSON.parse(this.props.slideshow) : this.props.slideshow\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(GuestHeader, {\n        title: \"Muscle Feed | Toutes marques de prot\\xE9ines pour la Musculation & nutrition sportive.\",\n        description: \"Boutique en ligne de compl\\xE9ments alimentaires et de prot\\xE9ines pour la musculation \\xE0 prix cass\\xE9. Le meilleur de la construction musculaire : proteines, gainer, bcaa, bruleur de graisses, booster.\"\n      }), React.createElement(GuestNavbar, {\n        className: \"application-guest-navbar\"\n      }), React.createElement(\"div\", {\n        className: \"container container-top-three\"\n      }, React.createElement(\"div\", {\n        className: \"row carousel-row-homepage\"\n      }, React.createElement(Carousel, {\n        dotPosition: 'bottom',\n        autoplay: true,\n        className: \"carousel-container-homepage\"\n      }, this.state.slideshow && Array.isArray(this.state.slideshow) && this.state.slideshow.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id\n        }, React.createElement(\"img\", {\n          src: item.image,\n          className: \"carousel-image\"\n        }));\n      })))));\n    }\n  }]);\n\n  return SHome;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$adminReducer = state.adminReducer,\n      products = _state$adminReducer.products,\n      slideshow = _state$adminReducer.slideshow;\n  return {\n    products: products,\n    slideshow: slideshow\n  };\n}\n\nvar connectReduxHome = connect(mapStateToProps)(SHome);\nexport default connectReduxHome;","map":null,"metadata":{},"sourceType":"module"}